VERSION 5.00
Object = "{7D622DE6-0ABC-471E-9234-97DEC5E0A708}#3.8#0"; "sevCmd3.ocx"
Object = "{831FDD16-0C5C-11D2-A9FC-0000F8754DA1}#2.2#0"; "Mscomctl.ocx"
Object = "{0ECD9B60-23AA-11D0-B351-00A0C9055D8E}#6.0#0"; "mshflxgd.ocx"
Object = "{F9043C88-F6F2-101A-A3C9-08002B2F49FB}#1.2#0"; "COMDLG32.OCX"
Begin VB.Form frmWKL09 
   Caption         =   "Stammdaten einlesen: Fremdformate "
   ClientHeight    =   8595
   ClientLeft      =   60
   ClientTop       =   345
   ClientWidth     =   11880
   BeginProperty Font 
      Name            =   "Arial"
      Size            =   8.25
      Charset         =   0
      Weight          =   400
      Underline       =   0   'False
      Italic          =   0   'False
      Strikethrough   =   0   'False
   EndProperty
   Icon            =   "frmWKL09.frx":0000
   LinkTopic       =   "Form1"
   MaxButton       =   0   'False
   MinButton       =   0   'False
   ScaleHeight     =   8595
   ScaleWidth      =   11880
   StartUpPosition =   2  'Bildschirmmitte
   Tag             =   "StadaF"
   Begin VB.Frame fraAktuell 
      BackColor       =   &H00C0C000&
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H0000FFFF&
      Height          =   4695
      Left            =   120
      TabIndex        =   176
      Top             =   1320
      Width           =   4335
      Begin VB.CheckBox Check4 
         Caption         =   "nur geführte Artikel"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Left            =   9720
         TabIndex        =   178
         Top             =   2280
         Value           =   1  'Aktiviert
         Width           =   2055
      End
      Begin sevCommand3.Command Command1 
         Height          =   495
         Index           =   33
         Left            =   9600
         TabIndex        =   177
         Top             =   6480
         Width           =   2040
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Zurück"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   8
         Left            =   9600
         TabIndex        =   179
         Top             =   2640
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "alle Artikel"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   9
         Left            =   9600
         TabIndex        =   180
         Top             =   3120
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "neue Artikel"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   10
         Left            =   9600
         TabIndex        =   181
         Top             =   3600
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Preisänderungen"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   11
         Left            =   9600
         TabIndex        =   182
         Top             =   4560
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Rewe-Wochendaten"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   12
         Left            =   9600
         TabIndex        =   183
         Top             =   5040
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "letzte Streckendatei"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   13
         Left            =   9600
         TabIndex        =   184
         Top             =   5520
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Bela-Wochendaten"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   14
         Left            =   9600
         TabIndex        =   185
         Top             =   6000
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Lüning-Wochendaten"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   15
         Left            =   9600
         TabIndex        =   186
         Top             =   4080
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Budni-Wochendaten"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.Label Label1 
         BackColor       =   &H00C0C000&
         BackStyle       =   0  'Transparent
         Caption         =   "Accessories (bitte anklicken)"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   -1  'True
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   9
         Left            =   360
         MouseIcon       =   "frmWKL09.frx":0442
         MousePointer    =   99  'Benutzerdefiniert
         TabIndex        =   195
         ToolTipText     =   "hier alle Neuigkeiten lesen"
         Top             =   4320
         Width           =   3375
      End
      Begin VB.Label Label1 
         BackColor       =   &H00C0C000&
         BackStyle       =   0  'Transparent
         Caption         =   "Foto (bitte anklicken)"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   -1  'True
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   8
         Left            =   360
         MouseIcon       =   "frmWKL09.frx":074C
         MousePointer    =   99  'Benutzerdefiniert
         TabIndex        =   194
         ToolTipText     =   "hier alle Neuigkeiten lesen"
         Top             =   3840
         Width           =   3375
      End
      Begin VB.Label Label1 
         BackColor       =   &H00C0C000&
         BackStyle       =   0  'Transparent
         Caption         =   "Textilien (bitte anklicken)"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   -1  'True
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   7
         Left            =   360
         MouseIcon       =   "frmWKL09.frx":0A56
         MousePointer    =   99  'Benutzerdefiniert
         TabIndex        =   193
         ToolTipText     =   "hier alle Neuigkeiten lesen"
         Top             =   3360
         Width           =   3375
      End
      Begin VB.Label Label1 
         BackColor       =   &H00C0C000&
         BackStyle       =   0  'Transparent
         Caption         =   "Geschenkartikel (bitte anklicken)"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   -1  'True
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   6
         Left            =   360
         MouseIcon       =   "frmWKL09.frx":0D60
         MousePointer    =   99  'Benutzerdefiniert
         TabIndex        =   192
         ToolTipText     =   "hier alle Neuigkeiten lesen"
         Top             =   2880
         Width           =   3375
      End
      Begin VB.Label Label1 
         BackColor       =   &H00C0C000&
         BackStyle       =   0  'Transparent
         Caption         =   "Schreibwaren (bitte anklicken)"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   -1  'True
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   5
         Left            =   360
         MouseIcon       =   "frmWKL09.frx":106A
         MousePointer    =   99  'Benutzerdefiniert
         TabIndex        =   191
         ToolTipText     =   "hier alle Neuigkeiten lesen"
         Top             =   2400
         Width           =   3375
      End
      Begin VB.Label Label1 
         BackColor       =   &H00C0C000&
         BackStyle       =   0  'Transparent
         Caption         =   "Spielwaren (bitte anklicken)"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   -1  'True
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   4
         Left            =   360
         MouseIcon       =   "frmWKL09.frx":1374
         MousePointer    =   99  'Benutzerdefiniert
         TabIndex        =   190
         ToolTipText     =   "hier alle Neuigkeiten lesen"
         Top             =   1920
         Width           =   3375
      End
      Begin VB.Label Label1 
         BackColor       =   &H00C0C000&
         BackStyle       =   0  'Transparent
         Caption         =   "Reform (bitte anklicken)"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   -1  'True
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   3
         Left            =   360
         MouseIcon       =   "frmWKL09.frx":167E
         MousePointer    =   99  'Benutzerdefiniert
         TabIndex        =   189
         ToolTipText     =   "hier alle Neuigkeiten lesen"
         Top             =   1440
         Width           =   3375
      End
      Begin VB.Label Label1 
         BackColor       =   &H00C0C000&
         BackStyle       =   0  'Transparent
         Caption         =   "Drogerie (bitte anklicken)"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   -1  'True
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   2
         Left            =   360
         MouseIcon       =   "frmWKL09.frx":1988
         MousePointer    =   99  'Benutzerdefiniert
         TabIndex        =   188
         ToolTipText     =   "hier alle Neuigkeiten lesen"
         Top             =   960
         Width           =   3375
      End
      Begin VB.Label Label2 
         Caption         =   "aktuell verfügbare Stammdaten:"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   12
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   46
         Left            =   120
         TabIndex        =   187
         Top             =   240
         Width           =   5175
      End
   End
   Begin VB.Frame Frame6 
      BackColor       =   &H00C0FFFF&
      BorderStyle     =   0  'Kein
      Height          =   1455
      Left            =   4080
      TabIndex        =   137
      Top             =   7320
      Visible         =   0   'False
      Width           =   1935
      Begin VB.FileListBox File3 
         Height          =   300
         Left            =   5160
         TabIndex        =   144
         Top             =   240
         Visible         =   0   'False
         Width           =   495
      End
      Begin sevCommand3.Command Command1 
         Height          =   285
         Index           =   31
         Left            =   4440
         TabIndex        =   143
         Top             =   2520
         Width           =   1680
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "übernehmen"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   285
         Index           =   30
         Left            =   4440
         TabIndex        =   140
         Top             =   1080
         Width           =   1680
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "suchen"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   285
         Index           =   29
         Left            =   4440
         TabIndex        =   139
         Top             =   2880
         Width           =   1680
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "zurück"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin MSComDlg.CommonDialog cdlopen 
         Left            =   5760
         Top             =   120
         _ExtentX        =   847
         _ExtentY        =   847
         _Version        =   393216
      End
      Begin VB.Label Label2 
         BackStyle       =   0  'Transparent
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   39
         Left            =   120
         TabIndex        =   146
         Top             =   2880
         Width           =   3495
      End
      Begin VB.Label Label2 
         BackStyle       =   0  'Transparent
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   38
         Left            =   120
         TabIndex        =   145
         Top             =   1440
         Width           =   1815
      End
      Begin VB.Label Label2 
         BackStyle       =   0  'Transparent
         Caption         =   "Pfad zu den Bildern?"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   495
         Index           =   37
         Left            =   120
         TabIndex        =   142
         Top             =   960
         Width           =   4095
      End
      Begin VB.Label Label2 
         BackStyle       =   0  'Transparent
         Caption         =   "Wo sind die Bilder?"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   36
         Left            =   120
         TabIndex        =   141
         Top             =   600
         Width           =   2535
      End
      Begin VB.Label Label2 
         BackStyle       =   0  'Transparent
         Caption         =   "Bilder"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   35
         Left            =   120
         TabIndex        =   138
         Top             =   240
         Width           =   1575
      End
   End
   Begin VB.TextBox txtstatus 
      Height          =   315
      Left            =   10800
      TabIndex        =   81
      Top             =   120
      Visible         =   0   'False
      Width           =   495
   End
   Begin sevCommand3.Command Command6 
      Height          =   375
      Index           =   0
      Left            =   11400
      TabIndex        =   79
      Top             =   360
      Width           =   375
      _ExtentX        =   0
      _ExtentY        =   0
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Arial"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Arial"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      BackColorDisabled=   15398133
      BackColorFrom   =   16514300
      BackColorTo     =   15462640
      BackColorCheckedFrom=   15462640
      BackColorCheckedTo=   16514300
      BackColorDownFrom=   12700881
      BackColorDownTo =   15659506
      BackColorHoverFrom=   16514300
      BackColorHoverTo=   15462640
      BorderColor     =   7617536
      BorderColorDisabled=   12240841
      BorderColorFocus=   14986635
      BorderColorHover=   3913721
      ForeColorDisabled=   9609633
      MenuBackColor   =   16448250
      MenuBackColorChecked=   7323903
      MenuBackColorHover=   10935807
      MenuBorderColor =   8388608
      MenuCheckMarkColorFrom=   16514300
      MenuCheckMarkColorTo=   15462640
      MenuForeColor   =   -2147483640
      MenuForeColorHover=   -2147483640
      ButtonStyle     =   2
      Caption         =   "?"
      PictureAlign    =   2
      PictureVisible  =   0   'False
      Version3        =   -1  'True
   End
   Begin VB.Frame Frame4 
      Caption         =   "Frame4"
      Height          =   975
      Left            =   2280
      TabIndex        =   72
      Top             =   7560
      Visible         =   0   'False
      Width           =   1335
      Begin sevCommand3.Command Command1 
         Height          =   495
         Index           =   11
         Left            =   5280
         TabIndex        =   78
         Top             =   6360
         Width           =   2040
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Anzeigen"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command6 
         Height          =   375
         Index           =   11
         Left            =   11160
         TabIndex        =   76
         Top             =   240
         Width           =   375
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "?"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   495
         Index           =   10
         Left            =   7440
         TabIndex        =   74
         Top             =   6360
         Width           =   2040
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Einlesen"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   495
         Index           =   9
         Left            =   9600
         TabIndex        =   73
         Top             =   6360
         Width           =   2040
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Zurück"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin MSHierarchicalFlexGridLib.MSHFlexGrid MSHFlexGrid1 
         Height          =   5535
         Left            =   0
         TabIndex        =   77
         Top             =   720
         Visible         =   0   'False
         Width           =   11655
         _ExtentX        =   20558
         _ExtentY        =   9763
         _Version        =   393216
         ForeColorSel    =   8454143
         FocusRect       =   0
         HighLight       =   2
         AllowUserResizing=   1
         _NumberOfBands  =   1
         _Band(0).Cols   =   2
      End
      Begin sevCommand3.Command Command98 
         Height          =   360
         Left            =   10680
         TabIndex        =   149
         Top             =   240
         Width           =   405
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ToolTip         =   "Spaltenanordung der Tabelle bestimmen"
         ToolTipTitle    =   "Spaltenanordung"
         ButtonStyle     =   2
         Caption         =   ""
         Filename        =   "D:\Thomas\VB6\Winkiss\Zubehör\tab24.gif"
         Picture         =   "frmWKL09.frx":1C92
         PictureAlign    =   3
         Version3        =   -1  'True
      End
      Begin VB.Label Label7 
         Caption         =   "Procter Umverpackung"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00000000&
         Height          =   375
         Left            =   0
         TabIndex        =   75
         Top             =   360
         Width           =   3855
      End
   End
   Begin VB.Frame Frame3 
      BackColor       =   &H000000FF&
      Caption         =   "Einstellungen"
      Height          =   1695
      Left            =   -840
      TabIndex        =   59
      Top             =   5640
      Visible         =   0   'False
      Width           =   5055
      Begin VB.CheckBox Check3 
         Caption         =   "kein Löschen von Historiendaten bei neuen Artikeln"
         Height          =   255
         Left            =   4440
         TabIndex        =   175
         Top             =   1680
         Width           =   4455
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   14
         Left            =   8040
         MaxLength       =   5
         TabIndex        =   172
         Top             =   4920
         Width           =   1095
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   13
         Left            =   8040
         MaxLength       =   5
         TabIndex        =   169
         Top             =   4080
         Width           =   1095
      End
      Begin VB.Frame Frame8 
         Caption         =   "Übereinstimmung suchen über"
         Height          =   1095
         Left            =   1920
         TabIndex        =   164
         Top             =   4800
         Width           =   2775
         Begin VB.OptionButton Option1 
            Caption         =   "erst EAN danach BestellNr"
            Height          =   210
            Index           =   2
            Left            =   240
            TabIndex        =   167
            Top             =   720
            Value           =   -1  'True
            Width           =   2415
         End
         Begin VB.OptionButton Option1 
            Caption         =   "BestellNr"
            Height          =   210
            Index           =   1
            Left            =   240
            TabIndex        =   166
            Top             =   480
            Width           =   1335
         End
         Begin VB.OptionButton Option1 
            Caption         =   "EAN"
            Height          =   210
            Index           =   0
            Left            =   240
            TabIndex        =   165
            Top             =   240
            Width           =   1335
         End
      End
      Begin VB.CheckBox Check2 
         Caption         =   "EAN immer mit Nullen auf 13 Stellen auffüllen"
         Height          =   255
         Left            =   4440
         TabIndex        =   162
         Top             =   1320
         Width           =   3975
      End
      Begin VB.CheckBox Checkbox4 
         Caption         =   "'Hof' vor die Bezeichnung stellen"
         Height          =   375
         Left            =   1920
         TabIndex        =   161
         Top             =   3600
         Width           =   1815
      End
      Begin VB.CheckBox Checkbox3 
         Caption         =   "als Artikeldoppel anlage"
         Height          =   375
         Left            =   3720
         TabIndex        =   160
         Top             =   3000
         Width           =   1695
      End
      Begin VB.CheckBox Checkbox2 
         Caption         =   "als Artikeldoppel anlage"
         Height          =   375
         Left            =   1920
         TabIndex        =   159
         Top             =   3000
         Width           =   1815
      End
      Begin VB.CheckBox Checkbox1 
         Caption         =   "Rabatt auf NEIN"
         Height          =   375
         Left            =   120
         TabIndex        =   158
         Top             =   3000
         Width           =   1815
      End
      Begin VB.CheckBox Checkbox5 
         Caption         =   "keine Artikel löschen"
         Height          =   495
         Left            =   120
         TabIndex        =   157
         Top             =   3840
         Width           =   1575
      End
      Begin VB.CheckBox Checkbox6 
         Caption         =   "auch Lebensmittel"
         Height          =   495
         Left            =   120
         TabIndex        =   156
         Top             =   4800
         Width           =   1575
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   12
         Left            =   5520
         MaxLength       =   5
         TabIndex        =   119
         Top             =   5640
         Width           =   1095
      End
      Begin sevCommand3.Command Command1 
         Height          =   355
         Index           =   23
         Left            =   6720
         TabIndex        =   118
         Top             =   5640
         Width           =   375
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "F2"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   11
         Left            =   5520
         MaxLength       =   5
         TabIndex        =   116
         Top             =   5040
         Width           =   1095
      End
      Begin sevCommand3.Command Command1 
         Height          =   355
         Index           =   22
         Left            =   6720
         TabIndex        =   115
         Top             =   5040
         Width           =   375
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "F2"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   10
         Left            =   5520
         MaxLength       =   5
         TabIndex        =   113
         Top             =   4440
         Width           =   1095
      End
      Begin sevCommand3.Command Command1 
         Height          =   355
         Index           =   21
         Left            =   6720
         TabIndex        =   112
         Top             =   4440
         Width           =   375
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "F2"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   9
         Left            =   5520
         MaxLength       =   5
         TabIndex        =   110
         Top             =   3840
         Width           =   1095
      End
      Begin sevCommand3.Command Command1 
         Height          =   355
         Index           =   20
         Left            =   6720
         TabIndex        =   109
         Top             =   3840
         Width           =   375
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "F2"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   8
         Left            =   5520
         MaxLength       =   5
         TabIndex        =   107
         Top             =   3240
         Width           =   1095
      End
      Begin sevCommand3.Command Command1 
         Height          =   355
         Index           =   19
         Left            =   6720
         TabIndex        =   106
         Top             =   3240
         Width           =   375
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "F2"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   355
         Index           =   18
         Left            =   1320
         TabIndex        =   105
         Top             =   2640
         Width           =   375
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "F2"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   355
         Index           =   17
         Left            =   3120
         TabIndex        =   104
         Top             =   2640
         Width           =   375
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "F2"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   355
         Index           =   16
         Left            =   4920
         TabIndex        =   103
         Top             =   2640
         Width           =   375
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "F2"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   355
         Index           =   15
         Left            =   6720
         TabIndex        =   102
         Top             =   2640
         Width           =   375
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "F2"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   360
         Index           =   14
         Left            =   9240
         TabIndex        =   101
         Top             =   3240
         Width           =   375
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "F2"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   355
         Index           =   13
         Left            =   9240
         TabIndex        =   100
         Top             =   2640
         Width           =   375
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "F2"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   7
         Left            =   8040
         MaxLength       =   5
         TabIndex        =   98
         Top             =   3240
         Width           =   1095
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   6
         Left            =   8040
         MaxLength       =   5
         TabIndex        =   95
         Top             =   2640
         Width           =   1095
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   5
         Left            =   5520
         MaxLength       =   5
         TabIndex        =   92
         Top             =   2640
         Width           =   1095
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   4
         Left            =   3720
         MaxLength       =   5
         TabIndex        =   87
         Top             =   2640
         Width           =   1095
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   3
         Left            =   1920
         MaxLength       =   5
         TabIndex        =   84
         Top             =   2640
         Width           =   1095
      End
      Begin VB.TextBox Text1 
         Height          =   315
         Index           =   2
         Left            =   120
         MaxLength       =   5
         TabIndex        =   70
         Top             =   2640
         Width           =   1095
      End
      Begin sevCommand3.Command Command1 
         Height          =   495
         Index           =   4
         Left            =   9600
         TabIndex        =   63
         Top             =   6480
         Width           =   2040
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Zurück"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.TextBox Text1 
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   12
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Index           =   0
         Left            =   840
         MaxLength       =   6
         TabIndex        =   62
         Top             =   1320
         Width           =   1095
      End
      Begin VB.TextBox Text1 
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   12
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Index           =   1
         Left            =   3120
         MaxLength       =   6
         TabIndex        =   61
         Top             =   1320
         Width           =   1095
      End
      Begin sevCommand3.Command Command2 
         Height          =   495
         Index           =   5
         Left            =   7440
         TabIndex        =   60
         Top             =   6480
         Width           =   2055
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Speichern"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.Label Label2 
         Caption         =   "für Lüning- Daten"
         Height          =   255
         Index           =   45
         Left            =   8040
         TabIndex        =   174
         Top             =   4440
         Width           =   2055
      End
      Begin VB.Label Label2 
         Caption         =   "WGN 1250-1259(Zigaretten) = AGN"
         Height          =   255
         Index           =   44
         Left            =   8040
         TabIndex        =   173
         Top             =   4680
         Width           =   2775
      End
      Begin VB.Label Label2 
         Caption         =   "AGN"
         Height          =   255
         Index           =   43
         Left            =   8040
         TabIndex        =   171
         Top             =   3840
         Width           =   1095
      End
      Begin VB.Label Label2 
         Caption         =   "für Gerry- Daten"
         Height          =   255
         Index           =   42
         Left            =   8040
         TabIndex        =   170
         Top             =   3600
         Width           =   2055
      End
      Begin VB.Label Label2 
         Caption         =   "für Kiss - Daten"
         Height          =   255
         Index           =   41
         Left            =   1920
         TabIndex        =   163
         Top             =   4440
         Width           =   1695
      End
      Begin VB.Label Label2 
         Caption         =   "für Lüning - Daten"
         Height          =   255
         Index           =   40
         Left            =   120
         TabIndex        =   154
         Top             =   4440
         Width           =   1695
      End
      Begin VB.Label Label2 
         Caption         =   "AGN für RBA (Raucherbedarfsartikel)"
         Height          =   255
         Index           =   31
         Left            =   5520
         TabIndex        =   120
         Top             =   5400
         Width           =   3135
      End
      Begin VB.Label Label2 
         Caption         =   "AGN für Feinschnitt"
         Height          =   255
         Index           =   30
         Left            =   5520
         TabIndex        =   117
         Top             =   4800
         Width           =   1815
      End
      Begin VB.Label Label2 
         Caption         =   "AGN für Pfeifentabak"
         Height          =   255
         Index           =   29
         Left            =   5520
         TabIndex        =   114
         Top             =   4200
         Width           =   1815
      End
      Begin VB.Label Label2 
         Caption         =   "AGN für Tabak"
         Height          =   255
         Index           =   28
         Left            =   5520
         TabIndex        =   111
         Top             =   3600
         Width           =   1815
      End
      Begin VB.Label Label2 
         Caption         =   "AGN für Zigarren"
         Height          =   255
         Index           =   27
         Left            =   5520
         TabIndex        =   108
         Top             =   3000
         Width           =   1815
      End
      Begin VB.Label Label2 
         Caption         =   "AGN für volle MWST"
         Height          =   255
         Index           =   26
         Left            =   8040
         TabIndex        =   99
         Top             =   3000
         Width           =   2895
      End
      Begin VB.Label Label2 
         Caption         =   "AGN für ermäßigte MWST"
         Height          =   255
         Index           =   25
         Left            =   8040
         TabIndex        =   97
         Top             =   2400
         Width           =   2175
      End
      Begin VB.Label Label2 
         Caption         =   "für Zeitungsdaten"
         Height          =   255
         Index           =   24
         Left            =   8040
         TabIndex        =   96
         Top             =   2160
         Width           =   2415
      End
      Begin VB.Label Label2 
         Caption         =   "für TU Barkow Daten"
         Height          =   255
         Index           =   23
         Left            =   5520
         TabIndex        =   94
         Top             =   2160
         Width           =   1935
      End
      Begin VB.Label Label2 
         Caption         =   "AGN für Zigaretten"
         Height          =   255
         Index           =   22
         Left            =   5520
         TabIndex        =   93
         Top             =   2400
         Width           =   1815
      End
      Begin VB.Label Label2 
         Caption         =   "Vorgaben:"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   12
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   21
         Left            =   120
         TabIndex        =   91
         Top             =   1800
         Width           =   3255
      End
      Begin VB.Label Label2 
         Caption         =   "für Rewe - Daten"
         Height          =   255
         Index           =   20
         Left            =   120
         TabIndex        =   90
         Top             =   3480
         Width           =   1695
      End
      Begin VB.Label Label2 
         Caption         =   "für Vedes- Daten"
         Height          =   255
         Index           =   19
         Left            =   3720
         TabIndex        =   89
         Top             =   2160
         Width           =   1695
      End
      Begin VB.Label Label2 
         Caption         =   "AGN"
         Height          =   255
         Index           =   18
         Left            =   3840
         TabIndex        =   88
         Top             =   2400
         Width           =   1095
      End
      Begin VB.Label Label2 
         Caption         =   "für Hoffmann- Daten"
         Height          =   255
         Index           =   17
         Left            =   1920
         TabIndex        =   86
         Top             =   2160
         Width           =   2055
      End
      Begin VB.Label Label2 
         Caption         =   "AGN"
         Height          =   255
         Index           =   16
         Left            =   1920
         TabIndex        =   85
         Top             =   2400
         Width           =   1095
      End
      Begin VB.Label Label2 
         Caption         =   "AGN"
         Height          =   255
         Index           =   15
         Left            =   120
         TabIndex        =   71
         Top             =   2400
         Width           =   1095
      End
      Begin VB.Label Label2 
         Caption         =   "Bei neu anzulegenden Artikeln diesen Artikelnummernbereich verwenden:"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   6
         Left            =   120
         TabIndex        =   69
         Top             =   720
         Width           =   7575
      End
      Begin VB.Label Label2 
         Caption         =   "Grundeinstellungen"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   5
         Left            =   0
         TabIndex        =   68
         Top             =   120
         Width           =   2895
      End
      Begin VB.Label Label2 
         Alignment       =   1  'Rechts
         Caption         =   "von:"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   7
         Left            =   240
         TabIndex        =   67
         Top             =   1320
         Width           =   495
      End
      Begin VB.Label Label2 
         Alignment       =   1  'Rechts
         Caption         =   "bis:"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   8
         Left            =   2520
         TabIndex        =   66
         Top             =   1320
         Width           =   495
      End
      Begin VB.Label Label38 
         Caption         =   "1"
         BeginProperty Font 
            Name            =   "Courier New"
            Size            =   48
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   1335
         Index           =   5
         Left            =   0
         TabIndex        =   65
         Top             =   5520
         Width           =   1095
      End
      Begin VB.Label Label2 
         Caption         =   "für Tchibo - Daten"
         Height          =   255
         Index           =   14
         Left            =   120
         TabIndex        =   64
         Top             =   2160
         Width           =   2055
      End
   End
   Begin VB.ComboBox Combo1 
      BeginProperty Font 
         Name            =   "Arial"
         Size            =   9.75
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   360
      ItemData        =   "frmWKL09.frx":2324
      Left            =   6600
      List            =   "frmWKL09.frx":2326
      Style           =   2  'Dropdown-Liste
      TabIndex        =   56
      Top             =   360
      Width           =   4095
   End
   Begin VB.Frame Frame7 
      BackColor       =   &H00C0C000&
      BorderStyle     =   0  'Kein
      Caption         =   "Protokolle"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H0000FFFF&
      Height          =   615
      Left            =   7680
      TabIndex        =   38
      Top             =   6600
      Visible         =   0   'False
      Width           =   1455
      Begin sevCommand3.Command Command1 
         Height          =   495
         Index           =   7
         Left            =   9600
         TabIndex        =   44
         Top             =   6480
         Width           =   2040
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Zurück"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.CheckBox CG 
         Caption         =   "nur geführte Artikel"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Left            =   9720
         TabIndex        =   43
         Top             =   2280
         Value           =   1  'Aktiviert
         Width           =   2055
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   0
         Left            =   9600
         TabIndex        =   41
         Top             =   2640
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "alle Artikel"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   1
         Left            =   9600
         TabIndex        =   40
         Top             =   3120
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "neue Artikel"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   2
         Left            =   9600
         TabIndex        =   39
         Top             =   3600
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Preisänderungen"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   3
         Left            =   9600
         TabIndex        =   150
         Top             =   4560
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Rewe-Wochendaten"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   4
         Left            =   9600
         TabIndex        =   151
         Top             =   5040
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "letzte Streckendatei"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   5
         Left            =   9600
         TabIndex        =   152
         Top             =   5520
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Bela-Wochendaten"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   6
         Left            =   9600
         TabIndex        =   153
         Top             =   6000
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Lüning-Wochendaten"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command4 
         Height          =   375
         Index           =   7
         Left            =   9600
         TabIndex        =   155
         Top             =   4080
         Width           =   2055
         _ExtentX        =   3625
         _ExtentY        =   661
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Budni-Wochendaten"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.Label Label5 
         Caption         =   "Möchten sie nur Ihre geführten Artikel berücksichtigt haben, dann setzen sie hier den Haken."
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   1
         Left            =   0
         TabIndex        =   50
         Top             =   2280
         Width           =   9015
      End
      Begin VB.Label Label2 
         Caption         =   "Protokolle"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   9
         Left            =   0
         TabIndex        =   48
         Top             =   120
         Width           =   3135
      End
      Begin VB.Label Label5 
         Caption         =   $"frmWKL09.frx":2328
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   615
         Index           =   0
         Left            =   0
         TabIndex        =   47
         Top             =   600
         Width           =   9015
      End
      Begin VB.Label Label38 
         Caption         =   "1"
         BeginProperty Font 
            Name            =   "Courier New"
            Size            =   48
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   1335
         Index           =   3
         Left            =   0
         TabIndex        =   45
         Top             =   5520
         Width           =   1095
      End
   End
   Begin VB.Frame Frame2 
      Caption         =   "Pricat"
      Height          =   735
      Left            =   120
      TabIndex        =   14
      Top             =   240
      Visible         =   0   'False
      Width           =   3375
      Begin sevCommand3.Command Command1 
         Height          =   285
         Index           =   28
         Left            =   6480
         TabIndex        =   136
         Top             =   6120
         Visible         =   0   'False
         Width           =   1200
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Bilder"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   315
         Index           =   27
         Left            =   11280
         TabIndex        =   133
         Top             =   5760
         Visible         =   0   'False
         Width           =   315
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Ä"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.TextBox Text5 
         Height          =   315
         Left            =   10320
         TabIndex        =   132
         Top             =   5760
         Visible         =   0   'False
         Width           =   855
      End
      Begin VB.ComboBox Combo2 
         Height          =   330
         ItemData        =   "frmWKL09.frx":23B9
         Left            =   7800
         List            =   "frmWKL09.frx":23BB
         TabIndex        =   131
         Text            =   "Combo2"
         Top             =   5760
         Visible         =   0   'False
         Width           =   1335
      End
      Begin VB.TextBox Text4 
         Height          =   315
         Left            =   7800
         TabIndex        =   130
         Top             =   6120
         Visible         =   0   'False
         Width           =   975
      End
      Begin sevCommand3.Command Command1 
         Height          =   315
         Index           =   26
         Left            =   8880
         TabIndex        =   129
         Top             =   6120
         Visible         =   0   'False
         Width           =   315
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Ä"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.CheckBox Check1 
         BackColor       =   &H00C0C000&
         Caption         =   "Bezeichnung übernehmen"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   6
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00808000&
         Height          =   375
         Index           =   9
         Left            =   6480
         TabIndex        =   83
         Top             =   5640
         Value           =   1  'Aktiviert
         Visible         =   0   'False
         Width           =   1215
      End
      Begin VB.PictureBox picprogress 
         Height          =   255
         Left            =   120
         ScaleHeight     =   195
         ScaleWidth      =   1995
         TabIndex        =   82
         Top             =   120
         Visible         =   0   'False
         Width           =   2055
      End
      Begin sevCommand3.Command Command1 
         Height          =   495
         Index           =   12
         Left            =   11160
         TabIndex        =   80
         Top             =   4560
         Visible         =   0   'False
         Width           =   480
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "M"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.CheckBox Check1 
         BackColor       =   &H00C0C000&
         Caption         =   "alte Artikel räumen"
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00808000&
         Height          =   255
         Index           =   11
         Left            =   9000
         TabIndex        =   34
         Top             =   360
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.CheckBox Check1 
         BackColor       =   &H00C0C000&
         Caption         =   "eventuelle Zweitlieferanten löschen"
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00808000&
         Height          =   255
         Index           =   10
         Left            =   5400
         TabIndex        =   33
         Top             =   360
         Visible         =   0   'False
         Width           =   3495
      End
      Begin VB.CheckBox Check1 
         BackColor       =   &H00C0C000&
         Caption         =   "Kassenverkaufspreis übernehmen"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   6
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00808000&
         Height          =   255
         Index           =   0
         Left            =   840
         TabIndex        =   32
         Top             =   5640
         Value           =   1  'Aktiviert
         Visible         =   0   'False
         Width           =   2295
      End
      Begin VB.CheckBox Check1 
         BackColor       =   &H00C0C000&
         Caption         =   "Notizen"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   6
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00808000&
         Height          =   255
         Index           =   3
         Left            =   3240
         TabIndex        =   31
         Top             =   6120
         Value           =   1  'Aktiviert
         Visible         =   0   'False
         Width           =   1695
      End
      Begin VB.CheckBox Check1 
         BackColor       =   &H00C0C000&
         Caption         =   "Mindestmenge(VPE)"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   6
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00808000&
         Height          =   255
         Index           =   1
         Left            =   840
         TabIndex        =   30
         Top             =   5880
         Value           =   1  'Aktiviert
         Visible         =   0   'False
         Width           =   2295
      End
      Begin VB.CheckBox Check1 
         BackColor       =   &H00C0C000&
         Caption         =   "Mindestbestellmenge"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   6
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00808000&
         Height          =   255
         Index           =   2
         Left            =   3240
         TabIndex        =   29
         Top             =   5640
         Value           =   1  'Aktiviert
         Visible         =   0   'False
         Width           =   1815
      End
      Begin VB.CheckBox Check1 
         BackColor       =   &H00C0C000&
         Caption         =   "alle Neuheiten auf  ""GEFÜHRT"" "
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   6
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00808000&
         Height          =   255
         Index           =   4
         Left            =   840
         TabIndex        =   28
         Top             =   6120
         Value           =   1  'Aktiviert
         Visible         =   0   'False
         Width           =   2295
      End
      Begin VB.CheckBox Check1 
         BackColor       =   &H00C0C000&
         Caption         =   "Verkaufspreis"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   6
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00808000&
         Height          =   255
         Index           =   5
         Left            =   5160
         TabIndex        =   27
         Top             =   5640
         Value           =   1  'Aktiviert
         Visible         =   0   'False
         Width           =   1215
      End
      Begin VB.CheckBox Check1 
         BackColor       =   &H00C0C000&
         Caption         =   "Einkaufspreis"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   6
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00808000&
         Height          =   255
         Index           =   6
         Left            =   5160
         TabIndex        =   26
         Top             =   5880
         Value           =   1  'Aktiviert
         Visible         =   0   'False
         Width           =   1215
      End
      Begin VB.CheckBox Check1 
         BackColor       =   &H00C0C000&
         Caption         =   "Linien"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   6
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00808000&
         Height          =   255
         Index           =   7
         Left            =   3240
         TabIndex        =   25
         Top             =   5880
         Value           =   1  'Aktiviert
         Visible         =   0   'False
         Width           =   1455
      End
      Begin VB.CheckBox Check1 
         BackColor       =   &H00C0C000&
         Caption         =   "AGN"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   6
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00808000&
         Height          =   255
         Index           =   8
         Left            =   5160
         TabIndex        =   24
         Top             =   6120
         Value           =   1  'Aktiviert
         Visible         =   0   'False
         Width           =   975
      End
      Begin sevCommand3.Command Command1 
         Height          =   255
         Index           =   5
         Left            =   9600
         TabIndex        =   23
         Top             =   6360
         Width           =   2040
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Übernehmen"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin MSComctlLib.ProgressBar pbrStatus 
         Height          =   255
         Left            =   840
         TabIndex        =   22
         Top             =   6480
         Visible         =   0   'False
         Width           =   4095
         _ExtentX        =   7223
         _ExtentY        =   450
         _Version        =   393216
         Appearance      =   1
      End
      Begin MSHierarchicalFlexGridLib.MSHFlexGrid PRIFlex 
         Height          =   4815
         Left            =   120
         TabIndex        =   21
         Top             =   720
         Width           =   10815
         _ExtentX        =   19076
         _ExtentY        =   8493
         _Version        =   393216
         ForeColorSel    =   8454143
         FocusRect       =   0
         HighLight       =   2
         AllowUserResizing=   1
         _NumberOfBands  =   1
         _Band(0).Cols   =   2
      End
      Begin sevCommand3.Command Command1 
         Height          =   255
         Index           =   2
         Left            =   9600
         TabIndex        =   15
         Top             =   6720
         Width           =   2040
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Zurück"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   315
         Index           =   32
         Left            =   9240
         TabIndex        =   168
         ToolTipText     =   "Export in Excel"
         Top             =   6120
         Visible         =   0   'False
         Width           =   315
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Ex"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.Label Label2 
         Caption         =   "Inhalte ändern"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   6
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   150
         Index           =   34
         Left            =   7800
         TabIndex        =   135
         Top             =   5550
         Visible         =   0   'False
         Width           =   1575
      End
      Begin VB.Label Label2 
         Caption         =   "EK Abschlag"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   6
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   150
         Index           =   33
         Left            =   10320
         TabIndex        =   134
         Top             =   5550
         Visible         =   0   'False
         Width           =   1095
      End
      Begin VB.Label Label2 
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   12
         Left            =   6960
         TabIndex        =   55
         Top             =   6770
         Width           =   855
      End
      Begin VB.Label Label2 
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   11
         Left            =   8280
         TabIndex        =   54
         Top             =   6770
         Width           =   855
      End
      Begin VB.Label Label2 
         Caption         =   "Label2"
         Height          =   375
         Index           =   3
         Left            =   2400
         TabIndex        =   18
         Top             =   240
         Width           =   2895
      End
      Begin VB.Label Label2 
         Caption         =   "Datei wird verarbeitet:"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   2
         Left            =   120
         TabIndex        =   17
         Top             =   360
         Width           =   2295
      End
      Begin VB.Label Label38 
         Caption         =   "2"
         BeginProperty Font 
            Name            =   "Courier New"
            Size            =   48
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   1335
         Index           =   1
         Left            =   120
         TabIndex        =   16
         Top             =   5520
         Width           =   735
      End
   End
   Begin VB.Frame Frame1 
      BackColor       =   &H00C0E0FF&
      Caption         =   "Pricat"
      Height          =   5775
      Left            =   4680
      TabIndex        =   3
      Top             =   1680
      Visible         =   0   'False
      Width           =   6615
      Begin VB.Frame Frame5 
         BorderStyle     =   0  'Kein
         Caption         =   "Frame5"
         Height          =   975
         Left            =   120
         TabIndex        =   123
         Top             =   4440
         Width           =   3135
         Begin VB.TextBox Text3 
            Height          =   315
            Index           =   0
            Left            =   0
            MaxLength       =   6
            TabIndex        =   126
            Top             =   240
            Width           =   1095
         End
         Begin sevCommand3.Command Command1 
            Height          =   315
            Index           =   25
            Left            =   1200
            TabIndex        =   125
            Top             =   240
            Width           =   315
            _ExtentX        =   0
            _ExtentY        =   0
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BackColorDisabled=   15398133
            BackColorFrom   =   16514300
            BackColorTo     =   15462640
            BackColorCheckedFrom=   15462640
            BackColorCheckedTo=   16514300
            BackColorDownFrom=   12700881
            BackColorDownTo =   15659506
            BackColorHoverFrom=   16514300
            BackColorHoverTo=   15462640
            BorderColor     =   7617536
            BorderColorDisabled=   12240841
            BorderColorFocus=   14986635
            BorderColorHover=   3913721
            ForeColorDisabled=   9609633
            MenuBackColor   =   16448250
            MenuBackColorChecked=   7323903
            MenuBackColorHover=   10935807
            MenuBorderColor =   8388608
            MenuCheckMarkColorFrom=   16514300
            MenuCheckMarkColorTo=   15462640
            MenuForeColor   =   -2147483640
            MenuForeColorHover=   -2147483640
            ButtonStyle     =   2
            Caption         =   "F2"
            PictureAlign    =   2
            PictureVisible  =   0   'False
            Version3        =   -1  'True
         End
         Begin sevCommand3.Command Command1 
            Height          =   315
            Index           =   24
            Left            =   1680
            TabIndex        =   124
            ToolTipText     =   "Klicken Sie hier, dann werden alle Artikelstammdaten in kürzester Zeit eingelesen"
            Top             =   240
            Width           =   1320
            _ExtentX        =   0
            _ExtentY        =   0
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BackColorDisabled=   15398133
            BackColorFrom   =   16514300
            BackColorTo     =   15462640
            BackColorCheckedFrom=   15462640
            BackColorCheckedTo=   16514300
            BackColorDownFrom=   12700881
            BackColorDownTo =   15659506
            BackColorHoverFrom=   16514300
            BackColorHoverTo=   15462640
            BorderColor     =   7617536
            BorderColorDisabled=   12240841
            BorderColorFocus=   14986635
            BorderColorHover=   3913721
            ForeColorDisabled=   9609633
            MenuBackColor   =   16448250
            MenuBackColorChecked=   7323903
            MenuBackColorHover=   10935807
            MenuBorderColor =   8388608
            MenuCheckMarkColorFrom=   16514300
            MenuCheckMarkColorTo=   15462640
            MenuForeColor   =   -2147483640
            MenuForeColorHover=   -2147483640
            ButtonStyle     =   2
            Caption         =   "Download"
            Enabled         =   0   'False
            PictureAlign    =   2
            PictureVisible  =   0   'False
            Version3        =   -1  'True
         End
         Begin VB.Label Label26 
            BackStyle       =   0  'Transparent
            Caption         =   "Lizenz liegt vor"
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   255
            Index           =   0
            Left            =   0
            TabIndex        =   128
            Top             =   600
            Visible         =   0   'False
            Width           =   2775
         End
         Begin VB.Label Label23 
            BackStyle       =   0  'Transparent
            Caption         =   "Lieferanten Stammdaten"
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   255
            Left            =   0
            TabIndex        =   127
            Top             =   0
            Width           =   1935
         End
      End
      Begin sevCommand3.Command Command2 
         Height          =   285
         Index           =   7
         Left            =   3360
         TabIndex        =   122
         Top             =   1200
         Visible         =   0   'False
         Width           =   855
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Info"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.TextBox Text2 
         Height          =   315
         Left            =   4560
         TabIndex        =   57
         Top             =   3360
         Visible         =   0   'False
         Width           =   1455
      End
      Begin sevCommand3.Command Command1 
         Height          =   495
         Index           =   8
         Left            =   7440
         TabIndex        =   46
         Top             =   6480
         Width           =   2055
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Protokolle"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.FileListBox File2 
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   2250
         Left            =   7800
         Pattern         =   "*.pri"
         TabIndex        =   19
         Top             =   1440
         Width           =   3015
      End
      Begin sevCommand3.Command Command2 
         Height          =   375
         Index           =   3
         Left            =   2640
         TabIndex        =   13
         Top             =   240
         Width           =   1335
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Pfad ändern"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command2 
         Height          =   495
         Index           =   2
         Left            =   4800
         TabIndex        =   12
         Top             =   2040
         Width           =   1455
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Löschen"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command2 
         Height          =   495
         Index           =   1
         Left            =   4800
         TabIndex        =   11
         Top             =   1440
         Width           =   1455
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Einlesen"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command1 
         Height          =   495
         Index           =   1
         Left            =   9600
         TabIndex        =   10
         Top             =   6480
         Width           =   2040
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Zurück"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin sevCommand3.Command Command2 
         Height          =   495
         Index           =   0
         Left            =   120
         TabIndex        =   9
         Top             =   3840
         Width           =   3015
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ButtonStyle     =   2
         Caption         =   "Dateien suchen"
         PictureAlign    =   2
         PictureVisible  =   0   'False
         Version3        =   -1  'True
      End
      Begin VB.FileListBox File1 
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   2250
         Left            =   120
         Pattern         =   "*.pri"
         TabIndex        =   7
         Top             =   1440
         Width           =   3015
      End
      Begin sevCommand3.Command Command1 
         Height          =   360
         Index           =   3
         Left            =   4080
         TabIndex        =   148
         Top             =   240
         Width           =   405
         _ExtentX        =   0
         _ExtentY        =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         BackColorDisabled=   15398133
         BackColorFrom   =   16514300
         BackColorTo     =   15462640
         BackColorCheckedFrom=   15462640
         BackColorCheckedTo=   16514300
         BackColorDownFrom=   12700881
         BackColorDownTo =   15659506
         BackColorHoverFrom=   16514300
         BackColorHoverTo=   15462640
         BorderColor     =   7617536
         BorderColorDisabled=   12240841
         BorderColorFocus=   14986635
         BorderColorHover=   3913721
         ForeColorDisabled=   9609633
         MenuBackColor   =   16448250
         MenuBackColorChecked=   7323903
         MenuBackColorHover=   10935807
         MenuBorderColor =   8388608
         MenuCheckMarkColorFrom=   16514300
         MenuCheckMarkColorTo=   15462640
         MenuForeColor   =   -2147483640
         MenuForeColorHover=   -2147483640
         ToolTip         =   "Spaltenanordung der Tabelle bestimmen"
         ToolTipTitle    =   "Spaltenanordung"
         ButtonStyle     =   2
         Caption         =   ""
         Filename        =   "D:\Thomas\VB6\Winkiss\Zubehör\tab24.gif"
         Picture         =   "frmWKL09.frx":23BD
         PictureAlign    =   3
         Version3        =   -1  'True
      End
      Begin VB.Label Label2 
         Height          =   255
         Index           =   32
         Left            =   120
         TabIndex        =   121
         Top             =   1200
         Width           =   3015
      End
      Begin VB.Label Label2 
         Caption         =   "Neue Artikel werden mit dem unten eingegebenen Faktor kalkuliert. "
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   615
         Index           =   13
         Left            =   3840
         TabIndex        =   58
         Top             =   2760
         Visible         =   0   'False
         Width           =   3255
      End
      Begin VB.Label Label2 
         Caption         =   "schon eingelesene Stammdaten:"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   4
         Left            =   7800
         TabIndex        =   20
         Top             =   1080
         Width           =   3015
      End
      Begin VB.Label Label2 
         Caption         =   "Label2"
         Height          =   375
         Index           =   1
         Left            =   120
         TabIndex        =   6
         Top             =   720
         Width           =   6495
      End
      Begin VB.Label Label2 
         Caption         =   "Pfad zu den Stammdaten:"
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   255
         Index           =   0
         Left            =   120
         TabIndex        =   5
         Top             =   360
         Width           =   3135
      End
      Begin VB.Label Label38 
         Caption         =   "1"
         BeginProperty Font 
            Name            =   "Courier New"
            Size            =   72
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   1335
         Index           =   0
         Left            =   120
         TabIndex        =   4
         Top             =   5520
         Width           =   1095
      End
   End
   Begin sevCommand3.Command Command1 
      Height          =   495
      Index           =   0
      Left            =   9720
      TabIndex        =   0
      Top             =   7920
      Width           =   2040
      _ExtentX        =   0
      _ExtentY        =   0
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Arial"
         Size            =   14.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Arial"
         Size            =   14.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      BackColorDisabled=   15398133
      BackColorFrom   =   16514300
      BackColorTo     =   15462640
      BackColorCheckedFrom=   15462640
      BackColorCheckedTo=   16514300
      BackColorDownFrom=   12700881
      BackColorDownTo =   15659506
      BackColorHoverFrom=   16514300
      BackColorHoverTo=   15462640
      BorderColor     =   7617536
      BorderColorDisabled=   12240841
      BorderColorFocus=   14986635
      BorderColorHover=   3913721
      ForeColorDisabled=   9609633
      MenuBackColor   =   16448250
      MenuBackColorChecked=   7323903
      MenuBackColorHover=   10935807
      MenuBorderColor =   8388608
      MenuCheckMarkColorFrom=   16514300
      MenuCheckMarkColorTo=   15462640
      MenuForeColor   =   -2147483640
      MenuForeColorHover=   -2147483640
      ButtonStyle     =   2
      Caption         =   "Schließen"
      PictureAlign    =   2
      PictureVisible  =   0   'False
      Version3        =   -1  'True
   End
   Begin sevCommand3.Command Command1 
      Height          =   495
      Index           =   6
      Left            =   9720
      TabIndex        =   37
      Top             =   5160
      Width           =   2055
      _ExtentX        =   0
      _ExtentY        =   0
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Arial"
         Size            =   12
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Arial"
         Size            =   12
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      BackColorDisabled=   15398133
      BackColorFrom   =   16514300
      BackColorTo     =   15462640
      BackColorCheckedFrom=   15462640
      BackColorCheckedTo=   16514300
      BackColorDownFrom=   12700881
      BackColorDownTo =   15659506
      BackColorHoverFrom=   16514300
      BackColorHoverTo=   15462640
      BorderColor     =   7617536
      BorderColorDisabled=   12240841
      BorderColorFocus=   14986635
      BorderColorHover=   3913721
      ForeColorDisabled=   9609633
      MenuBackColor   =   16448250
      MenuBackColorChecked=   7323903
      MenuBackColorHover=   10935807
      MenuBorderColor =   8388608
      MenuCheckMarkColorFrom=   16514300
      MenuCheckMarkColorTo=   15462640
      MenuForeColor   =   -2147483640
      MenuForeColorHover=   -2147483640
      ButtonStyle     =   2
      Caption         =   "Protokolle"
      PictureAlign    =   2
      PictureVisible  =   0   'False
      Version3        =   -1  'True
   End
   Begin sevCommand3.Command Command2 
      Height          =   495
      Index           =   6
      Left            =   9720
      TabIndex        =   36
      Top             =   2640
      Width           =   2055
      _ExtentX        =   0
      _ExtentY        =   0
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Arial"
         Size            =   12
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Arial"
         Size            =   12
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      BackColorDisabled=   15398133
      BackColorFrom   =   16514300
      BackColorTo     =   15462640
      BackColorCheckedFrom=   15462640
      BackColorCheckedTo=   16514300
      BackColorDownFrom=   12700881
      BackColorDownTo =   15659506
      BackColorHoverFrom=   16514300
      BackColorHoverTo=   15462640
      BorderColor     =   7617536
      BorderColorDisabled=   12240841
      BorderColorFocus=   14986635
      BorderColorHover=   3913721
      ForeColorDisabled=   9609633
      MenuBackColor   =   16448250
      MenuBackColorChecked=   7323903
      MenuBackColorHover=   10935807
      MenuBorderColor =   8388608
      MenuCheckMarkColorFrom=   16514300
      MenuCheckMarkColorTo=   15462640
      MenuForeColor   =   -2147483640
      MenuForeColorHover=   -2147483640
      ButtonStyle     =   2
      Caption         =   "Lieferanten"
      PictureAlign    =   2
      PictureVisible  =   0   'False
      Version3        =   -1  'True
   End
   Begin sevCommand3.Command Command2 
      Height          =   495
      Index           =   4
      Left            =   9720
      TabIndex        =   53
      Top             =   6840
      Width           =   2055
      _ExtentX        =   0
      _ExtentY        =   0
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Arial"
         Size            =   12
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      BeginProperty MenuFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Arial"
         Size            =   12
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      BackColorDisabled=   15398133
      BackColorFrom   =   16514300
      BackColorTo     =   15462640
      BackColorCheckedFrom=   15462640
      BackColorCheckedTo=   16514300
      BackColorDownFrom=   12700881
      BackColorDownTo =   15659506
      BackColorHoverFrom=   16514300
      BackColorHoverTo=   15462640
      BorderColor     =   7617536
      BorderColorDisabled=   12240841
      BorderColorFocus=   14986635
      BorderColorHover=   3913721
      ForeColorDisabled=   9609633
      MenuBackColor   =   16448250
      MenuBackColorChecked=   7323903
      MenuBackColorHover=   10935807
      MenuBorderColor =   8388608
      MenuCheckMarkColorFrom=   16514300
      MenuCheckMarkColorTo=   15462640
      MenuForeColor   =   -2147483640
      MenuForeColorHover=   -2147483640
      ButtonStyle     =   2
      Caption         =   "Einstellungen"
      PictureAlign    =   2
      PictureVisible  =   0   'False
      Version3        =   -1  'True
   End
   Begin VB.Label Label1 
      BackColor       =   &H00C0C000&
      BackStyle       =   0  'Transparent
      Caption         =   "nähere Informationen hier: (bitte anklicken)"
      BeginProperty Font 
         Name            =   "Arial"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   -1  'True
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   255
      Index           =   0
      Left            =   8400
      MouseIcon       =   "frmWKL09.frx":2A4F
      MousePointer    =   99  'Benutzerdefiniert
      TabIndex        =   147
      ToolTipText     =   "hier alle Neuigkeiten lesen"
      Top             =   120
      Width           =   3375
   End
   Begin VB.Label Label6 
      Caption         =   "Hier können sie Grundeinstellungen, die für das Einlesen der Stammdaten relevant sind, vornehmen."
      BeginProperty Font 
         Name            =   "Arial"
         Size            =   6
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   495
      Left            =   9720
      TabIndex        =   52
      Top             =   6240
      Width           =   2055
   End
   Begin VB.Label Label2 
      Caption         =   "Bitte wählen Sie das Format Ihrer Stammdaten!"
      BeginProperty Font 
         Name            =   "Arial"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   375
      Index           =   10
      Left            =   6600
      TabIndex        =   51
      Top             =   960
      Width           =   5055
   End
   Begin VB.Label Label38 
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Courier New"
         Size            =   48
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   1335
      Index           =   4
      Left            =   240
      TabIndex        =   49
      Top             =   6360
      Width           =   1095
   End
   Begin VB.Label Label4 
      Caption         =   $"frmWKL09.frx":2D59
      BeginProperty Font 
         Name            =   "Arial"
         Size            =   6
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   735
      Left            =   9720
      TabIndex        =   42
      Top             =   4320
      Width           =   2055
   End
   Begin VB.Label Label19 
      Caption         =   "Bevor sie Stammdaten eines Lieferanten einlesen, sollten sie sich vergewissern ob sie den Lieferanten angelegt haben."
      BeginProperty Font 
         Name            =   "Arial"
         Size            =   6
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   615
      Left            =   9720
      TabIndex        =   35
      Top             =   1920
      Width           =   2055
   End
   Begin VB.Label Label3 
      BeginProperty Font 
         Name            =   "Arial"
         Size            =   12
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H000000FF&
      Height          =   375
      Left            =   120
      TabIndex        =   8
      Top             =   7920
      Width           =   9495
   End
   Begin VB.Label Label1 
      Caption         =   "Formatauswahl:"
      BeginProperty Font 
         Name            =   "Arial"
         Size            =   9.75
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   255
      Index           =   1
      Left            =   6600
      TabIndex        =   2
      Top             =   120
      Width           =   1815
   End
   Begin VB.Label lblUeberschrift 
      BackStyle       =   0  'Transparent
      Caption         =   "Stammdaten einlesen"
      BeginProperty Font 
         Name            =   "Arial Black"
         Size            =   24
         Charset         =   0
         Weight          =   900
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00808000&
      Height          =   615
      Left            =   120
      TabIndex        =   1
      Top             =   120
      Width           =   6015
   End
   Begin VB.Line Line1 
      BorderColor     =   &H00808000&
      BorderWidth     =   2
      Index           =   0
      X1              =   120
      X2              =   11760
      Y1              =   840
      Y2              =   840
   End
End
Attribute VB_Name = "frmWKL09"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Explicit


Dim sPripfad As String
Dim sTchpfad As String
Dim sNeupfad As String
Dim sBOLLpfad As String
Dim sHOFFPfad As String
Dim sVEDEPfad As String
Dim sKISSPfad As String
Dim sIDENPfad As String
Dim sTextilPfad As String
Dim sPassPfad As String
Dim sGerryPfad As String
Dim sBossPfad As String
Dim sNURpfad As String
Dim sFriseurpfad As String
Dim sREWEpfad As String
Dim sSIEpfad As String
Dim sEDEKApfad As String
Dim sBELApfad As String
Dim sLUEpfad As String
Dim sZeitpfad As String
Dim sTubepfad As String
Dim sESUEpfad As String
Dim sRINGPfad As String
Dim sDEVpfad As String
Dim glartv As Long
Dim glartb As Long
Dim glagn As Long
Dim girab As Integer
Dim giLuening As Integer

Dim giEANNULLEN As Integer
Dim giVergleich As Integer
Dim giHoffdoppel As Integer
Dim giVededoppel As Integer

Dim gcStadaLinr As String
Dim gcBilderPfad As String

Dim sEinlesedat As String

Dim SpaltennummerArtnr  As Byte
Dim SpaltennummerBEZEICH  As Byte
Dim SpaltennummerLINR  As Byte
Dim SpaltennummerLPZ  As Byte
Dim SpaltennummerLIBESNR  As Byte
Dim SpaltennummerLEKPR  As Byte
Dim SpaltennummerVKPR  As Byte
Dim SpaltennummerKVKPR1  As Byte
Dim SpaltennummerMINBEST  As Byte
Dim SpaltennummerGEFUEHRT  As Byte
Dim SpaltennummerRABATT_OK  As Byte
Dim SpaltennummerPREISSCHU  As Byte
Dim SpaltennummerNOTIZEN  As Byte
Dim SpaltennummerAGN  As Byte
Dim SpaltennummerPGN  As Byte
Dim SpaltennummerRKZ  As Byte
Dim SpaltennummerEAN  As Byte
Dim SpaltennummerMINMEN  As Byte
Dim SpaltennummerMWST  As Byte
Dim SpaltennummerMNOTIZEN  As Byte
Dim SpaltennummerKVKNEU As Byte
Dim SpaltennummerGROESSE As Byte
Private Sub CheckBox2_Click()
On Error GoTo LOKAL_ERROR

    If Checkbox2.Value = True Then
        Checkbox4.Visible = True
    Else
        Checkbox4.Visible = False
    End If

Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "CheckBox2_Click"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Combo1_Click()
    On Error GoTo LOKAL_ERROR
    
    Text2.Visible = False
    Label2(13).Visible = False
    
    If Combo1.Text = "Pricat - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
       
        lesenEinstellungen
        
        Frame1.Visible = True
        urzustand1
        PricatStep1
        
    ElseIf Combo1.Text = "Tchibo - Format" Then
        fraAktuell.Visible = False
        lesenEinstellungen
        
        Frame1.Visible = True
        urzustand1
        TchiboStep1
        
    ElseIf Combo1.Text = "Neuform - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        
        Frame1.Visible = True
        urzustand1
        NeuformStep1
    
    ElseIf Combo1.Text = "Bollweg - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        
        Frame1.Visible = True
        urzustand1
        BollWegStep1
        
    ElseIf Combo1.Text = "Vedes - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        
        Frame1.Visible = True
        urzustand1
        VEDEStep1
    
    ElseIf Combo1.Text = "Hoffmann - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        
        Frame1.Visible = True
        urzustand1
        HoffmannStep1
        
    ElseIf Combo1.Text = "Friseur - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        
        Frame1.Visible = True
        urzustand1
        FriseurStep1
        
    ElseIf Combo1.Text = "Bela - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
        
        lesenEinstellungen
        
        Frame1.Visible = True
        urzustand1
        
        Dim sKennNr As String
        sKennNr = ermKenn_fromBela
        
        Kill Label2(1).Caption & "\" & "kissurlad." & sKennNr
                        
        giKissFtpMode = 40
        frmWKL38.Show 1
        
        Dim sQuelle As String
        Dim sZiel As String
        Dim lfail As Long
        Dim lRet As Long
        Dim sPfad As String

        sPfad = gcDBPfad
        If Right(sPfad, 1) <> "\" Then
            sPfad = sPfad & "\"
        End If
        
        sPfad = sPfad & "IN"
        
        sQuelle = sPfad & "\" & "kissurlad." & sKennNr
        sZiel = Label2(1).Caption & "\" & "kissurlad." & sKennNr
        lRet = CopyFile(sQuelle, sZiel, lfail)
        
        BelaStep1
        
    ElseIf Combo1.Text = "Lüning - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
       
        Frame1.Visible = True
        urzustand1
        LüningStep1
        
    ElseIf Combo1.Text = "Edeka Minden - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        Frame1.Visible = True
        urzustand1
        EdekStep1
    ElseIf Combo1.Text = "Rewe - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        Frame1.Visible = True
        urzustand1
        ReweStep1
        
    ElseIf Combo1.Text = "Für Sie - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        Frame1.Visible = True
        urzustand1
        SieStep1
        
    ElseIf Combo1.Text = "Procter - Format" Then
        fraAktuell.Visible = False
        Combo1.Visible = False
        Frame4.Visible = True
        
        anzeige "normal", "", Label3
        

    ElseIf Combo1.Text = "Zeitungs - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        Frame1.Visible = True
        urzustand1
        ZeitStep1
    ElseIf Combo1.Text = "TU Barkow - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        Frame1.Visible = True
        urzustand1
        TUBStep1
    ElseIf Combo1.Text = "IDEN - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        Frame1.Visible = True
        urzustand1
        IDENStep1

    ElseIf Combo1.Text = "Ringfoto - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        Frame1.Visible = True
        urzustand1
        RINGStep1
    ElseIf Combo1.Text = "Textil - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        Frame1.Visible = True
        urzustand1
        TextilStep1
    ElseIf Combo1.Text = "Passport - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        Frame1.Visible = True
        urzustand1
        PassportStep1
    ElseIf Combo1.Text = "Gerry - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        Frame1.Visible = True
        urzustand1
        GerryStep1
    ElseIf Combo1.Text = "BOSS - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If
    
        lesenEinstellungen
        Frame1.Visible = True
        urzustand1
        BossStep1
    ElseIf Combo1.Text = "KISS - Format" Then
        fraAktuell.Visible = False
        If Not checkFFE Then
            Frame3.Visible = True
            anzeige "rot", "Bitte erst die Grundeinstellungen vornehmen!", Label3
            Exit Sub
        End If

        lesenEinstellungen
        Frame1.Visible = True
        urzustand1
        KISSStep1
        
        Frame5.Visible = True
            
        If gbFtpYes Then
            LeseLIZENZ_INDI
            If gbLizenzINDI Then
                Label26(0).Caption = "Lizenz liegt vor"
                Label26(0).ForeColor = glS1
                Label26(0).Visible = True
                
                Command1(24).Enabled = True
            Else
                Label26(0).Caption = "keine Lizenz"
                Label26(0).ForeColor = vbRed
                Label26(0).Visible = True
                
                Command1(24).Enabled = False
            End If
        Else
            Label26(0).Caption = "keine FTP Einstellungen"
            Label26(0).ForeColor = vbRed
            Label26(0).Visible = True
            
            Command1(24).Enabled = False
        End If
    Else
        Frame1.Visible = False
        Frame5.Visible = False
    End If
    
    Exit Sub
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "Combo1_Click"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub

Private Sub PricatStep1()
    On Error GoTo LOKAL_ERROR
    
    'globalPricat Pfad
    If Not NewTableSuchenDBKombi("PricatE", gdBase) Then 'das erste Mal
        CreateTable "PricatE", gdBase
        
        speicherpfad gsKinPfad
        speicherGrundETransf
        
    End If
    
    ermittlepripfad
    
    If sPripfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sPripfad
        Label2(1).Refresh
        
        filefresh
        zeigeanzahl File1
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "PricatStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub TextilStep1()
    On Error GoTo LOKAL_ERROR
    
    'globalPricat Pfad
    If Not NewTableSuchenDBKombi("TextilE", gdBase) Then 'das erste Mal
        CreateTableT2 "TEXTILE", gdBase
        
'        speicherpfadtextil gsKinPfad
'        speicherGrundETransf
        
        speicherpfadUni gsKinPfad, "TEXTILE", "TEXTILPfad"
        speicherGrundETransfUni 8, "TEXTILE"
    End If
    
    ermittleTEXTILpfad
    
    If sTextilPfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sTextilPfad
        Label2(1).Refresh
        
        filefreshTextil
        zeigeanzahl File1
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "TextilStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub PassportStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("PASSPORTE", gdBase) Then 'das erste Mal
        CreateTableT2 "PASSPORTE", gdBase
        
'        speicherpfadpass gsKinPfad
'        speicherGrundETransf
        
        speicherpfadUni gsKinPfad, "PASSPORTE", "PassPfad"
        speicherGrundETransfUni 8, "PASSPORTE"
    End If
    
    ermittlePassportpfad
    
    If sPassPfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sPassPfad
        Label2(1).Refresh
        
        filefreshPass
        zeigeanzahl File1
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "PassportStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub GerryStep1()
    On Error GoTo LOKAL_ERROR
    
    'globalPricat Pfad
    If Not NewTableSuchenDBKombi("GERRYE", gdBase) Then 'das erste Mal
        CreateTableT2 "GERRYE", gdBase
        
        speicherpfadUni gsKinPfad, "GERRYE", "GERRYPfad"
        speicherGrundETransfUni 8, "GERRYE"
    End If
    
    ermittleGerrypfad
    
    If sGerryPfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sGerryPfad
        Label2(1).Refresh
        
        filefreshGerry
        zeigeanzahl File1
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "GerryStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub BossStep1()
    On Error GoTo LOKAL_ERROR
    
    'globalPricat Pfad
    If Not NewTableSuchenDBKombi("BossE", gdBase) Then 'das erste Mal
        CreateTableT2 "BOSSE", gdBase
        
        speicherpfadUni gsKinPfad, "BOSSE", "BossPfad"
        speicherGrundETransfUni 8, "BOSSE"
    End If
    
    ermittleBosspfad
    
    If sBossPfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sBossPfad
        Label2(1).Refresh
        
        filefreshBoss
        zeigeanzahl File1
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "BossStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub NeuformStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("NeuformE", gdBase) Then 'das erste Mal
        CreateTable "NEUFORME", gdBase
        
        speicherpfadNEU gsKinPfad
        speicherGrundETransfNEU
        
    End If
    
    ermittleNEUpfad
    
    If sNeupfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sNeupfad
        Label2(1).Refresh
        
        filefreshNEU
        zeigeanzahl File1
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "NeuformStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub BollWegStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("BollWegE", gdBase) Then 'das erste Mal
        CreateTable "BOLLWEGE", gdBase
        
        speicherpfadBOLL gsKinPfad
        speicherGrundETransfBOLL
        
    End If
    ermittleBOLLpfad
    
    If sBOLLpfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sBOLLpfad
        Label2(1).Refresh
        
        filefreshBOLL
        zeigeanzahl File1
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "BollWegStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub VEDEStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("VEDESE", gdBase) Then 'das erste Mal
        CreateTable "VEDESE", gdBase
        
        speicherpfadVEDE gsKinPfad
        speicherGrundETransfVEDE
        
    End If
    ermittleVEDEpfad
    
    If sVEDEPfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sVEDEPfad
        Label2(1).Refresh
        
        filefreshVEDE
        zeigeanzahl File1
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "VEDEStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub IDENStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("IDENE", gdBase) Then 'das erste Mal
        CreateTableT3 "IDENE", gdBase
        
        speicherpfadIDEN gsKinPfad
        speicherGrundETransfIDEN
        
    End If
    ermittleIDENpfad
    
    If sIDENPfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sIDENPfad
        Label2(1).Refresh
        
        filefreshIDEN
        zeigeanzahl File1
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "IDENStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub KISSStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("KISSE", gdBase) Then 'das erste Mal
        CreateTableT2 "KISSE", gdBase
        
        speicherpfadKISS gsKinPfad
        speicherGrundETransfKISS
        
    End If
    ermittleKISSpfad
    
    If sKISSPfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sKISSPfad
        Label2(1).Refresh
        
        filefreshKISS
        zeigeanzahl File1
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "KISSStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub HoffmannStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("HoffmannE", gdBase) Then 'das erste Mal
        CreateTable "HOFFMANNE", gdBase
        
        speicherpfadHOFF gsKinPfad
        speicherGrundETransfHOFF
        
    End If
    ermittleHOFFpfad
    
    If sHOFFPfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sHOFFPfad
        Label2(1).Refresh
        
        filefreshHOFF
        zeigeanzahl File1
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "HoffmannStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub

Private Sub FriseurStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("FRISEURE", gdBase) Then 'das erste Mal
        CreateTable "FRISEURE", gdBase
        
        speicherpfadfriseur gsKinPfad
        speicherGrundETransffriseur
        
    End If
    ermittlefriseurpfad
    
    If sFriseurpfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sFriseurpfad
        Label2(1).Refresh
        
        filefreshfriseur
        zeigeanzahl File1
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "FriseurStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub BelaStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("BELAE", gdBase) Then 'das erste Mal
        CreateTableT2 "BELAE", gdBase
        
        speicherpfadBELA gsKinPfad
        speicherGrundETransfBELA
        
    End If
    ermittleBELApfad
    If sBELApfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sBELApfad
        Label2(1).Refresh
        
        filefreshBELA
        zeigeanzahl File1
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "BelaStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub LüningStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("LUEE", gdBase) Then 'das erste Mal
        CreateTableT2 "LUEE", gdBase
        
        speicherpfadLüning gsKinPfad
        speicherGrundETransfLüning
        
    End If
    ermittleLüningpfad
    If sLUEpfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sLUEpfad
        Label2(1).Refresh
        
        filefreshLüning
        zeigeanzahl File1
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "LüningStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub LüningStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "LüningStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub EdekStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("EDEKE", gdBase) Then 'das erste Mal
        CreateTableT2 "EDEKE", gdBase
        
        speicherpfadEDEK gsKinPfad
        speicherGrundETransfEDEK
        
    End If
    ermittleEDEKpfad
    If sEDEKApfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sEDEKApfad
        Label2(1).Refresh
        
        filefreshEDEK
        zeigeanzahl File1
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "EdekStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ReweStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("REWEE", gdBase) Then 'das erste Mal
        CreateTable "REWEE", gdBase
        
        speicherpfadREWE gsKinPfad
        speicherGrundETransfREWE
        
    End If
    ermittleREWEpfad
    If sREWEpfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sREWEpfad
        Label2(1).Refresh
        
        filefreshREWE
        zeigeanzahl File1
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ReweStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub SieStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("SIEE", gdBase) Then 'das erste Mal
        CreateTable "SIEE", gdBase
        
        speicherpfadSIE gsKinPfad
        speicherGrundETransfSIE
        
    End If
    ermittleSIEpfad
    If sSIEpfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sSIEpfad
        Label2(1).Refresh
        
        filefreshSIE
        zeigeanzahl File1
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "SieStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ZeitStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("ZEITE", gdBase) Then 'das erste Mal
        CreateTable "ZEITE", gdBase
        
        speicherpfadUni gsKinPfad, "ZEITE", "ZEITPfad"
        speicherGrundETransfUni 8, "ZEITE"
        
    End If
    sZeitpfad = ermittleUnipfad("ZEITE", "ZEITPFAD")
    
    If sZeitpfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sZeitpfad
        Label2(1).Refresh
        
        filefreshZEIT
        zeigeanzahl File1
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ZeitStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub TUBStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("TUBE", gdBase) Then 'das erste Mal
        CreateTable "TUBE", gdBase
        
        speicherpfadUni gsKinPfad, "TUBE", "TUBEPfad"
        speicherGrundETransfUni 8, "TUBE"
        
    End If
    sTubepfad = ermittleUnipfad("TUBE", "TUBEPfad")
    
    If sTubepfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sTubepfad
        Label2(1).Refresh
        
        filefreshTUBE
        zeigeanzahl File1
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "TUBStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ESUStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("ESUE", gdBase) Then 'das erste Mal
        CreateTableT2 "ESUE", gdBase
        
        speicherpfadUni gsKinPfad, "ESUE", "ESUEPfad"
        speicherGrundETransfUni 8, "ESUE"
        
    End If
    sESUEpfad = ermittleUnipfad("ESUE", "ESUEPfad")
    
    If sESUEpfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sESUEpfad
        Label2(1).Refresh
        
        filefreshESU
        zeigeanzahl File1
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ESUStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub RINGStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("RINGE", gdBase) Then 'das erste Mal
        CreateTableT2 "RINGE", gdBase
        
        speicherpfadUni gsKinPfad, "RINGE", "RINGPfad"
        speicherGrundETransfUni 8, "RINGE"
        
    End If
    sRINGPfad = ermittleUnipfad("RINGE", "RINGPfad")
    
    If sRINGPfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sRINGPfad
        Label2(1).Refresh
        
        filefreshRING
        zeigeanzahl File1
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "RINGStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub DevilStep1()
    On Error GoTo LOKAL_ERROR
    
    If Not NewTableSuchenDBKombi("DevilE", gdBase) Then 'das erste Mal
        CreateTable "DEVILE", gdBase
        speicherpfadDEV gsKinPfad
        speicherGrundETransfDEV
    End If
    
    ermittleDEVpfad
    
    If sDEVpfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sDEVpfad
        Label2(1).Refresh
        
        filefreshDEV
        zeigeanzahl File1
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DevilStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub TchiboStep1()
    On Error GoTo LOKAL_ERROR
    
    'globalTchibo Pfad
    If Not NewTableSuchenDBKombi("TchiboE", gdBase) Then 'das erste Mal
        CreateTable "TchiboE", gdBase
        
        speicherpfadTch gsKinPfad
        speicherGrundETransfTch
        
    End If
    
    ermittleTchpfad
    
    
    If sTchpfad = "" Then
        anzeige "Normal", "Keine Stammdaten - Dateien vorhanden.", Label3
    Else
        Label2(1).Caption = sTchpfad
        Label2(1).Refresh
        
        filefreshTch
        zeigeanzahl File1
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "TchiboStep1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleTEXTILpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'PriPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("TEXTILE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!TEXTILPfad) Then
            sTextilPfad = Trim(rsrs!TEXTILPfad)
        Else
            sTextilPfad = ""
        End If
    Else
        sTextilPfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleTEXTILpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittlePassportpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'PriPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("PASSPORTE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!PassPfad) Then
            sPassPfad = Trim(rsrs!PassPfad)
        Else
            sPassPfad = ""
        End If
    Else
        sPassPfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittlePassportpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleGerrypfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'PriPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("GERRYE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!GerryPfad) Then
            sGerryPfad = Trim(rsrs!GerryPfad)
        Else
            sGerryPfad = ""
        End If
    Else
        sGerryPfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleGerrypfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleBosspfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'PriPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("BOSSE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!BOSSPfad) Then
            sBossPfad = Trim(rsrs!BOSSPfad)
        Else
            sBossPfad = ""
        End If
    Else
        sBossPfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleBosspfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittlepripfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'PriPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("PricatE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!PriPfad) Then
            sPripfad = Trim(rsrs!PriPfad)
        Else
            sPripfad = ""
        End If
    Else
        sPripfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittlepripfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleTchpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'TchPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("TchiboE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!tchPfad) Then
            sTchpfad = Trim(rsrs!tchPfad)
        Else
            sTchpfad = ""
        End If
    Else
        sTchpfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleTchpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleNEUpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'TchPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("NeuformE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!neuPfad) Then
            sNeupfad = Trim(rsrs!neuPfad)
        Else
            sNeupfad = ""
        End If
    Else
        sNeupfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleNEUpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleBOLLpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'TchPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("BOLLWEGE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!bollPfad) Then
            sBOLLpfad = Trim(rsrs!bollPfad)
        Else
            sBOLLpfad = ""
        End If
    Else
        sBOLLpfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleBOLLpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleHOFFpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'TchPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("HOFFMANNE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!HOFFPfad) Then
            sHOFFPfad = Trim(rsrs!HOFFPfad)
        Else
            sHOFFPfad = ""
        End If
    Else
        sHOFFPfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleHOFFpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleKISSpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    Set rsrs = gdBase.OpenRecordset("KISSE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!KISSPfad) Then
            sKISSPfad = Trim(rsrs!KISSPfad)
        Else
            sKISSPfad = ""
        End If
    Else
        sKISSPfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleKISSpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleVEDEpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'TchPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("VEDESE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!VEDEPfad) Then
            sVEDEPfad = Trim(rsrs!VEDEPfad)
        Else
            sVEDEPfad = ""
        End If
    Else
        sVEDEPfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleVEDEpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleIDENpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'IDENPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("IDENE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!IDENPfad) Then
            sIDENPfad = Trim(rsrs!IDENPfad)
        Else
            sIDENPfad = ""
        End If
    Else
        sIDENPfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleIDENpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittlefriseurpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'TchPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("friseurE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!friseurPfad) Then
            sFriseurpfad = Trim(rsrs!friseurPfad)
        Else
            sFriseurpfad = ""
        End If
    Else
        sFriseurpfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittlefriseurpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleBELApfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'TchPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("BELAE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!BELAPfad) Then
            sBELApfad = Trim(rsrs!BELAPfad)
        Else
            sBELApfad = ""
        End If
    Else
        sBELApfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleBELApfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleLüningpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'TchPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("LUEE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!LUEPfad) Then
            sLUEpfad = Trim(rsrs!LUEPfad)
        Else
            sLUEpfad = ""
        End If
    Else
        sLUEpfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleLüningpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleEDEKpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'TchPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("EDEKE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!EDEKPfad) Then
            sEDEKApfad = Trim(rsrs!EDEKPfad)
        Else
            sEDEKApfad = ""
        End If
    Else
        sEDEKApfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleEDEKpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleREWEpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'TchPfad ermitteln
    Set rsrs = gdBase.OpenRecordset("REWEE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!REWEPfad) Then
            sREWEpfad = Trim(rsrs!REWEPfad)
        Else
            sREWEpfad = ""
        End If
    Else
        sREWEpfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleREWEpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ermittleSIEpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    'Pfad ermitteln
    Set rsrs = gdBase.OpenRecordset("SIEE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!SIEPfad) Then
            sSIEpfad = Trim(rsrs!SIEPfad)
        Else
            sSIEpfad = ""
        End If
    Else
        sSIEpfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleSIEpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Function ermittleUnipfad(sTab As String, sSpalte As String) As String
    On Error GoTo LOKAL_ERROR
    
    
    Dim rsrs    As Recordset
    Dim sSQL    As String
    
    sSQL = "Select " & sSpalte & " as sPfad from " & sTab & " "
    ermittleUnipfad = ""
    
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!sPfad) Then
            ermittleUnipfad = Trim(rsrs!sPfad)
        End If
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleUnipfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Sub ermittleDEVpfad()
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs As Recordset
    
    Set rsrs = gdBase.OpenRecordset("DEVILE", dbOpenTable)
    If Not rsrs.EOF Then
        If Not IsNull(rsrs!DEVPfad) Then
            sDEVpfad = Trim(rsrs!DEVPfad)
        Else
            sDEVpfad = ""
        End If
    Else
        sDEVpfad = ""
    End If
    rsrs.Close: Set rsrs = Nothing
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittleDEVpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Function PricatStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long
    
        PricatStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda
        
        oldpath = sPripfad & "\" & sdat
        newpath1 = cPfad1 & "Stammda\BTE\" & sdat
        lRet = CopyFile(oldpath, newpath1, lfail)
        
        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
        Kill cPfad & "mde"
        oldpath = sPripfad & "\" & sdat
        newpath = cPfad & "mde"
        
        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
                Kill oldpath
            End If
            
            anzeige "normal", "Die Datei wird kopiert...", Label3
        
        End If
        pbrStatus.Value = 40
        '4. Anzahl der Datensätze ermitteln
        
        sSQL = "Select count(*) as anzahl FROM mde IN "
        sSQL = sSQL & "'" & pa & "'"
        sSQL = sSQL & " 'Text;'"
        
        Set rsrs = gdApp.OpenRecordset(sSQL)
        If Not rsrs.RecordCount = 0 Then
            If Not IsNull(rsrs!ANZAHL) Then
                anzeige "normal", rsrs!ANZAHL & " Datensätze werden eingelesen...", Label3
            Else
                anzeige "Rot", "Das Einlesen wurde abgebrochen: fehlende Artikelsätze", Label3
            End If
        Else
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: fehlende Artikelsätze", Label3
            Command1(5).Enabled = False
            Exit Function
        End If
        rsrs.Close: Set rsrs = Nothing
        
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        '3. Importieren
        loeschapp "mdetmp"
        sSQL = "Select * INTO MDEtmp FROM mde IN "
        sSQL = sSQL & "'" & pa & "'"
        sSQL = sSQL & " 'Text;'"
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = " Insert into meister "
        sSQL = sSQL & " Select "
        sSQL = sSQL & " F5 as linr "
        sSQL = sSQL & " , F12 as lfNr "
        sSQL = sSQL & " , F15 as ean "
        sSQL = sSQL & " , F16 as Libesnr " 'Fehler als Text
        sSQL = sSQL & " , F18 as GROESSE " 'Fehler als Text wegen nuller
        sSQL = sSQL & " , left(F24,20) & ' ' & left(F20,10) & ' ' & F18 as BEZEICH "
        sSQL = sSQL & " , F26 as AUFDAT "
        sSQL = sSQL & " , F27 as EXDAT "
        sSQL = sSQL & " , F28 as LEKPR "
        sSQL = sSQL & " , F30 as VKPR "
        sSQL = sSQL & " , F34 as MINBEST "
        sSQL = sSQL & " , F40 as FARBNR " 'Fehler als Text
        sSQL = sSQL & " , F42 as LPZ "
        sSQL = sSQL & " , F57 as Marke "
        
        sSQL = sSQL & " FROM mde IN "
        sSQL = sSQL & "'" & pa & "'"
        sSQL = sSQL & " 'Text;'"
'        MsgBox sSQL
        gdApp.Execute sSQL, dbFailOnError
      
        anzeige "normal", "Die Datensätze werden überprüft...", Label3
        
        Pause (3)
        
        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
'            Command1(5).Enabled = False
'            Exit Function
        End If
        
        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3
        
        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"
        
        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 75
        '9. Ermittle BTELINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3
        If BTELINRzuordnung = False Then
            Command1(5).Enabled = False
            Exit Function
        End If

        PricatStep3 = True
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "PricatStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
    End If
End Function
Private Function PassportStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long

        PassportStep3 = False

        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If

        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))

        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"

        '2. dann erstellen
        CreateTable "MEISTER", gdApp

        '2a. Datei kopieren in den Anwendungspfad+Stammda

        oldpath = sPassPfad
        oldpath = ShortPath(oldpath)
        oldpath = oldpath & "\" & sdat
        
        newpath1 = cPfad1 & "Stammda\PASSPORT\"
        newpath1 = ShortPath(newpath1)
        newpath1 = newpath1 & sdat
        
        lRet = CopyFile(oldpath, newpath1, lfail)

        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
        Kill cPfad & "mde"
        oldpath = sPassPfad & "\" & sdat
        newpath = cPfad & "mde"

        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
                Kill oldpath
            End If

            anzeige "normal", "Die Datei wird kopiert...", Label3

        End If
        pbrStatus.Value = 40
        '4. Anzahl der Datensätze ermitteln


        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        
        Dim lAnzSatz As Long
        Dim lAktSatz As Long
        Dim DSatz As Datensatz
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim lPos As Long
        Dim cEinzelsatz As String
        
        Dim lLinr As Long
        Dim lfnr1 As Long
        lfnr1 = 0
        
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        iFileNr = FreeFile

        Open newpath For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
            lAnzSatz = LOF(iFileNr)
            lAnzSatz = lAnzSatz - 1
            lAnzSatz = lAnzSatz / 604
        
            For lAktSatz = 0 To lAnzSatz - 1
                lPos = (lAktSatz * 604) + 1
                
'                cEinzelsatz = Mid(cSatz1, lPos, 584)
                cEinzelsatz = Mid(cSatz1, lPos, 604)
                
'                MsgBox cEinzelsatz
                rsrs.AddNew
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                
                rsrs!EAN = Mid(cEinzelsatz, 40, 13)
                rsrs!BEZEICH = Trim(Mid(cEinzelsatz, 218, 15)) & " " & Trim(Mid(cEinzelsatz, 253, 15)) & " " & Mid(cEinzelsatz, 171, 2)
                rsrs!vkpr = Mid(cEinzelsatz, 188, 7)
                rsrs!lekpr = Mid(cEinzelsatz, 181, 7)
                rsrs!LIBESNR = Mid(cEinzelsatz, 66, 7)
                
                rsrs!MWST = 1
                rsrs!RKZ = "N"
                rsrs!GEFUEHRT = "J"
                rsrs!MINMEN = "1"
        
                rsrs.Update
                    
            Next lAktSatz
        Else
            
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing

        anzeige "normal", "Die Datensätze werden überprüft...", Label3

        Pause (3)

        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
'            Command1(5).Enabled = False
'            Exit Function
        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        '9. Ermittle ZeitungsLINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3

        lLinr = checkPassPortinLISRT()
                
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
        End If
        pbrStatus.Value = 75

        PassportStep3 = True

Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "PassportStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

        Fehlermeldung1
        Resume Next
    End If
End Function
Private Function GerryStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long

        GerryStep3 = False

        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If

        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))

        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"

        '2. dann erstellen
        CreateTable "MEISTER", gdApp

        '2a. Datei kopieren in den Anwendungspfad+Stammda

        oldpath = sGerryPfad
        oldpath = ShortPath(oldpath)
        oldpath = oldpath & "\" & sdat
        
        newpath1 = cPfad1 & "Stammda\GERRY\"
        newpath1 = ShortPath(newpath1)
        newpath1 = newpath1 & sdat
        
        lRet = CopyFile(oldpath, newpath1, lfail)

        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
        Kill cPfad & "mde"
        oldpath = sGerryPfad & "\" & sdat
        newpath = cPfad & "mde"

        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
                Kill oldpath
            End If

            anzeige "normal", "Die Datei wird kopiert...", Label3

        End If
        pbrStatus.Value = 40
        '4. Anzahl der Datensätze ermitteln


        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim lLenfil As Long
        Dim lPos As Long
        Dim lPosEnde As Long
        Dim cEinzelsatz As String
        Dim lposSemi As Long
        Dim lposSemiEnde As Long
        Dim lfnr1 As Long
        Dim cWert As String
        Dim cWert2 As String
        Dim cBezeichnung     As String
        Dim cFarbbezeichnung As String
        Dim i As Integer
        Dim lLinr   As Long
        
        lPos = 1
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        iFileNr = FreeFile

        Open newpath For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
            lLenfil = Len(cSatz1)
            
            lPosEnde = InStr(lPos, cSatz1, vbCrLf)

            
            
            Do
                lPosEnde = InStr(lPos, cSatz1, vbCrLf)
                
                cEinzelsatz = Mid(cSatz1, lPos, lPosEnde - lPos)
                lPos = lPos + lPosEnde - lPos + 2
                
                lposSemi = 1
                
                rsrs.AddNew
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                
                For i = 1 To 4
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                Next i
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                cBezeichnung = Trim(Left(cWert, 15))

                'Farbnummer
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                'Farbe
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                cFarbbezeichnung = Trim(Left(cWert, 10))
                
'                cBezeichnung = cBezeichnung & " " & Trim(Left(cWert, 10))
                    
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!GROESSE = Left(cWert, 10)
                
                cBezeichnung = cBezeichnung & " " & Trim(Left(cWert, 5)) & " " & cFarbbezeichnung
        
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                If IsNumeric(cWert) Then
                    rsrs!EAN = cWert
                Else
                    rsrs!EAN = 0
                End If
                
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                cWert2 = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert2 = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                cWert2 = Trim(Left(cWert2, 3))
                
                
                
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                cBezeichnung = Trim(Left(cWert, 3)) & " " & cWert2 & " " & cBezeichnung
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                rsrs!BEZEICH = Left(cBezeichnung, 35)
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!NOTIZEN = cWert
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Trim(Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi))
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                If IsNumeric(cWert) Then
                    rsrs!lekpr = SwapStr(cWert, ".", "")
                Else
                    rsrs!lekpr = 0
                End If
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Trim(Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi))
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                If IsNumeric(cWert) Then
                    rsrs!vkpr = SwapStr(cWert, ".", "")
                Else
                    rsrs!vkpr = 0
                End If

'                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
'                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
'                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
'                rsrs!LIBESNR = cWert
'
'                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
'                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
'                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
'                rsrs!Faktor = cWert
                
'                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbCrLf)
'                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
'                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1

                rsrs!LPZ = 1
                rsrs!MWST = 1
                rsrs!RKZ = "N"
                rsrs!GEFUEHRT = "J"
                rsrs!MINMEN = "1"
                
                rsrs.Update
                
            Loop While lLenfil >= lPos
            
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
    
        anzeige "normal", "Die Datensätze werden überprüft...", Label3

        Pause (3)

        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
'            Command1(5).Enabled = False
'            Exit Function
        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        '9. Ermittle LINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3

        lLinr = checkGerryinLISRT()
                
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
        End If
        pbrStatus.Value = 75

        GerryStep3 = True

Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "GerryStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

        Fehlermeldung1
        Resume Next
    End If
End Function
Private Function BELAStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long

        BELAStep3 = False

        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If

        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))

        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"

        '2. dann erstellen
        CreateTable "MEISTER", gdApp

        '2a. Datei kopieren in den Anwendungspfad+Stammda

        oldpath = sBELApfad
        oldpath = ShortPath(oldpath)
        oldpath = oldpath & "\" & sdat
        
        newpath1 = cPfad1 & "Stammda\BELA\"
        newpath1 = ShortPath(newpath1)
        newpath1 = newpath1 & sdat
        
        lRet = CopyFile(oldpath, newpath1, lfail)

        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
        Kill cPfad & "mde"
        oldpath = sBELApfad & "\" & sdat
        newpath = cPfad & "mde"

        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
                Kill oldpath
            End If

            anzeige "normal", "Die Datei wird kopiert...", Label3

        End If
        pbrStatus.Value = 40
        '4. Anzahl der Datensätze ermitteln


        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim lLenfil As Long
        Dim lPos As Long
        Dim lPosEnde As Long
        Dim cEinzelsatz As String
        Dim lposSemi As Long
        Dim lposSemiEnde As Long
        Dim lfnr1 As Long
        Dim cWert As String
        Dim cInhalt     As String
        Dim cInhaltBez     As String
        Dim i As Integer
        Dim lLinr   As Long
        Dim lAnzSatz As Long
        Dim lAktSatz As Long
        Dim sMWST As String
        
        lPos = 1
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        iFileNr = FreeFile

        Open newpath For Binary As #iFileNr
        
        
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
    
            lAnzSatz = LOF(iFileNr)
            lAnzSatz = lAnzSatz - 1
            lAnzSatz = lAnzSatz / 129

            For lAktSatz = 0 To lAnzSatz - 1
                lPos = (lAktSatz * 129) + 1
                cEinzelsatz = Mid(cSatz1, lPos, 129)
    
                rsrs.AddNew
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                
                cWert = "2" & Trim(Mid(cEinzelsatz, 1, 5))
                cWert = fnMoveArtNr2EAN8(cWert)
                
                rsrs!LIBESNR = cWert
                rsrs!EAN = Trim(Mid(cEinzelsatz, 7, 13))
                
                cWert = Trim(Mid(cEinzelsatz, 21, 10))
                If IsNumeric(cWert) Then
                    rsrs!lekpr = cWert
                Else
                    rsrs!lekpr = 0
                End If
                
                cWert = Trim(Mid(cEinzelsatz, 32, 7))
                If IsNumeric(cWert) Then
                    rsrs!vkpr = cWert
                Else
                    rsrs!vkpr = 0
                End If
                
                rsrs!BEZEICH = Mid(cEinzelsatz, 40, 30)
                
                cWert = Trim(Mid(cEinzelsatz, 71, 8))
                rsrs!MINMEN = Val(cWert)
                
                cWert = Trim(Mid(cEinzelsatz, 84, 7))
                rsrs!INHALT = CDbl(cWert)

                cWert = Trim(Mid(cEinzelsatz, 92, 2))
                rsrs!INHALTBEZ = Trim(UCase(cWert))
                
                If cWert = "" Then
                    rsrs!GRUNDPREIS = "N"
                Else
                    rsrs!GRUNDPREIS = "J"
                End If
                
                sMWST = Mid(cEinzelsatz, 95, 1)
                If sMWST = "K" Then sMWST = "O"
                rsrs!MWST = sMWST

                rsrs!LPZ = 1
                rsrs!RKZ = "N"
                rsrs!GEFUEHRT = "J"
                
                rsrs.Update
                    
            Next lAktSatz
        Else
            
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
        anzeige "normal", "Die Datensätze werden überprüft...", Label3

        pbrStatus.Value = 60
        
        
        
        
        
        'hier zwischen ARTEAN_K füllen
        loeschNEW "artean_BEL", gdApp
        
        sSQL = "Select MEISTER.libesnr, MEISTER.ean, 0 as Artnr into artean_BEL from MEISTER"
        gdApp.Execute sSQL, dbFailOnError
        
        loesch "artean_BEL"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "artean_BEL"
        'ende hier zwischen ARTEAN_K füllen
        
        
        
        
        
        
        
        
        
        
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        anzeige "normal", "EAN Duplikate werden entfernt...", Label3

        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        ErmittlungMeisterDuplisPlusDel_09
        
        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError
        
        Screen.MousePointer = 0
        
        frmWKL203.Show 1
        

        
        Screen.MousePointer = 11
        
        
        

        '9. Ermittle LINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3

        lLinr = checkBELAinLISRT()
                
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
        End If
        pbrStatus.Value = 75

        BELAStep3 = True

Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "BELAStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

        Fehlermeldung1
        Resume Next
    End If
End Function
Private Function BossStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long

        BossStep3 = False

        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If

        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))

        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"

        '2. dann erstellen
        CreateTable "MEISTER", gdApp

        '2a. Datei kopieren in den Anwendungspfad+Stammda

        oldpath = sBossPfad
        oldpath = ShortPath(oldpath)
        oldpath = oldpath & "\" & sdat
        
        newpath1 = cPfad1 & "Stammda\BOSS\"
        newpath1 = ShortPath(newpath1)
        newpath1 = newpath1 & sdat
        
        lRet = CopyFile(oldpath, newpath1, lfail)

        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
        Kill cPfad & "mde"
        oldpath = sBossPfad & "\" & sdat
        newpath = cPfad & "mde"

        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
                Kill oldpath
            End If

            anzeige "normal", "Die Datei wird kopiert...", Label3

        End If
        pbrStatus.Value = 40
        '4. Anzahl der Datensätze ermitteln


        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim lLenfil As Long
        Dim lPos As Long
        Dim lPosEnde As Long
        Dim cEinzelsatz As String
        Dim lposSemi As Long
        Dim lposSemiEnde As Long
        Dim lfnr1 As Long
        Dim cWert As String
        Dim cBezeichnung     As String
        Dim i As Integer
        Dim lLinr   As Long
        
        lPos = 1
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        iFileNr = FreeFile

        Open newpath For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
            lLenfil = Len(cSatz1)
            
            lPosEnde = InStr(lPos, cSatz1, vbCrLf)
            lPos = lPos + lPosEnde - lPos + 2
            lPosEnde = InStr(lPos, cSatz1, vbCrLf)
            lPos = lPos + lPosEnde - lPos + 2

            Do
                lPosEnde = InStr(lPos, cSatz1, vbCrLf)
                
                cEinzelsatz = Mid(cSatz1, lPos, lPosEnde - lPos)
                lPos = lPos + lPosEnde - lPos + 2
                
                
                lposSemi = 1
                
                rsrs.AddNew
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                rsrs!LIBESNR = Trim(Left(cWert, 13))
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                cBezeichnung = Trim(Left(cWert, 15))
                
                For i = 1 To 2
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                Next i

                'EAN
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                If IsNumeric(cWert) Then
                    rsrs!EAN = cWert
                Else
                    rsrs!EAN = 0
                End If
                
                'Größe
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!GROESSE = Left(cWert, 10)
                
                cBezeichnung = cBezeichnung & " " & Trim(Left(cWert, 5))
                
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Trim(Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi))
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                If IsNumeric(cWert) Then
                    rsrs!lekpr = SwapStr(cWert, ",", "")
                Else
                    rsrs!lekpr = 0
                End If
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Trim(Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi))
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                If IsNumeric(cWert) Then
                    rsrs!vkpr = SwapStr(cWert, ",", "")
                Else
                    rsrs!vkpr = 0
                End If
                
                
                For i = 1 To 13
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                Next i
                
                'Marke
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!NOTIZEN = cWert
                
                For i = 1 To 5
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                Next i
                
                'Farbe
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1

                cBezeichnung = cBezeichnung & " " & Trim(Left(cWert, 10))

                rsrs!BEZEICH = cBezeichnung
                rsrs!LPZ = 1
                rsrs!MWST = 1
                rsrs!RKZ = "N"
                rsrs!GEFUEHRT = "J"
                rsrs!MINMEN = "1"
                
                rsrs.Update
                
            Loop While lLenfil >= lPos
            
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
    
        anzeige "normal", "Die Datensätze werden überprüft...", Label3

        Pause (3)

        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
'            Command1(5).Enabled = False
'            Exit Function
        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        '9. Ermittle LINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3

        lLinr = checkBOSSinLISRT()
                
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
        End If
        pbrStatus.Value = 75

        BossStep3 = True

Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "BossStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

        Fehlermeldung1
        Resume Next
    End If
End Function
Private Function TextilStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long
    
        TextilStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda

        oldpath = sTextilPfad
        oldpath = ShortPath(oldpath)
        oldpath = oldpath & "\" & sdat
        
        newpath1 = cPfad1 & "Stammda\Textil\"
        newpath1 = ShortPath(newpath1)
        newpath1 = newpath1 & sdat
        
        lRet = CopyFile(oldpath, newpath1, lfail)

        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
        Kill cPfad & "mde"
        oldpath = sTextilPfad & "\" & sdat
        newpath = cPfad & "mde"

        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
                Kill oldpath
            End If

            anzeige "normal", "Die Datei wird kopiert...", Label3

        End If
        pbrStatus.Value = 40

        Dim iFileNr         As Integer
        Dim cSatz1          As String
        Dim lItemPos        As Long
        Dim lItemEndePos    As Long
        Dim cEinzelsatz     As String
        
        Dim lAnzSatz        As Long
        Dim lPos            As Long
        
        lPos = 1
        Dim lLinr           As Long
        Dim lLenfil         As Long
        Dim lfnr1           As Long
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        iFileNr = FreeFile

        Open newpath For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
            lLenfil = Len(cSatz1)
            
            Do
                lItemPos = InStr(lPos, cSatz1, "<Item>")
                If lItemPos = 0 Then Exit Do
                lItemEndePos = InStr(lItemPos, cSatz1, "</Item>")
                
                lPos = lItemEndePos
                
                cEinzelsatz = Mid(cSatz1, lItemPos, lItemEndePos - lItemPos)
                
                
                If wert_back(cEinzelsatz, "ItemType") = "Variant" Then
                    rsrs.AddNew
                    lfnr1 = lfnr1 + 1
                    rsrs!lfnr = lfnr1
                    rsrs!LIBESNR = wert_back(cEinzelsatz, "ItemNumber")
                    rsrs!linr = 0
                    rsrs!vkpr = wert_back(cEinzelsatz, "LocalPriceRetailAmount")
                    rsrs!lekpr = wert_back(cEinzelsatz, "LocalPriceGrossAmount")
                    rsrs!EAN = wert_back(cEinzelsatz, "GlobalTradeItemNumber")
                    rsrs!GROESSE = wert_back(cEinzelsatz, "Size")
                    
                    rsrs!LPZ = 1
    '                rsrs!AGN = 322
    
                    rsrs!MINMEN = 0
                    rsrs!MWST = 1
                    rsrs!RKZ = "N"
                    rsrs!GEFUEHRT = "J"
    
                    rsrs!BEZEICH = Left(wert_back(cEinzelsatz, "ItemName") & " " & wert_back(cEinzelsatz, "Size") & " " & wert_back(cEinzelsatz, "ColourName"), 35)
    
                    rsrs.Update
                End If
                
            Loop While lLenfil >= lPos
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
        
    

        anzeige "normal", "Die Datensätze werden überprüft...", Label3


        Pause (3)

        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
'            Command1(5).Enabled = False
'            Exit Function
        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        pbrStatus.Value = 75
        '9. Ermittle TextilLINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3
        
        lLinr = checkTEXTILinLISRT()

        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
        End If

        TextilStep3 = True
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "TEXTILStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
        Resume Next
    End If
End Function
Private Function wert_back(cSatz As String, cTag As String) As String
    On Error GoTo LOKAL_ERROR
    
    Dim lItemPos        As Long
    Dim lItemEndePos    As Long
    
    wert_back = ""
    
    lItemPos = InStr(1, cSatz, "<" & cTag & ">")
    lItemEndePos = InStr(lItemPos, cSatz, "</" & cTag & ">")
    
    lItemPos = lItemPos + Len(cTag) + 2
    wert_back = Mid(cSatz, lItemPos, lItemEndePos - lItemPos)

    Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "wert_back"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function TUBEStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad           As String
        Dim cPfad1          As String
        Dim oldpath         As String
        Dim newpath         As String
        Dim newpath1        As String
        Dim lfail           As Long
        Dim lRet            As Long
        Dim pa              As String
        Dim sSQL            As String
        Dim rsrs            As Recordset
        Dim lAnz            As Long
        Dim cSatz1          As String
        Dim iFileNr         As Integer
        Dim lPos            As Long
        Dim i               As Integer
        Dim lLinr           As Long
    
        TUBEStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda
        
        oldpath = sTubepfad & "\" & sdat
        newpath1 = cPfad1 & "Stammda\TUB\" & sdat
        lRet = CopyFile(oldpath, newpath1, lfail)
        
        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
        Kill cPfad & "mde"
        oldpath = sTubepfad & "\" & sdat
        newpath = cPfad
        newpath = ShortPath(newpath)
        newpath = newpath & "mde"
        
        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
'                Kill oldpath
            End If
            
            anzeige "normal", "Die Datei wird kopiert...", Label3
        
        End If
        pbrStatus.Value = 40
        '4. Anzahl der Datensätze ermitteln
        
       
'''        sSQL = "Select count(*) as anzahl FROM mde IN "
'''        sSQL = sSQL & "'" & pa & "'"
'''        sSQL = sSQL & " 'Text;'"
'''
'''        Set rsrs = gdApp.OpenRecordset(sSQL)
'''        If Not rsrs.RecordCount = 0 Then
'''            If Not IsNull(rsrs!ANZAHL) Then
'''                anzeige "normal", rsrs!ANZAHL & " Datensätze werden eingelesen...", Label3
'''            Else
'''                anzeige "Rot", "Das Einlesen wurde abgebrochen: fehlende Artikelsätze", Label3
'''            End If
'''        Else
'''            Screen.MousePointer = 0
'''            anzeige "Rot", "Das Einlesen wurde abgebrochen: fehlende Artikelsätze", Label3
'''            Command1(5).Enabled = False
'''            Exit Function
'''        End If
'''        rsrs.Close: Set rsrs = Nothing
        
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
'        '3. Importieren
'        loeschapp "mdetmp"
'        sSQL = "Select * INTO MDEtmp FROM mde IN "
'        sSQL = sSQL & "'" & pa & "'"
'        sSQL = sSQL & " 'Text;'"
'        gdApp.Execute sSQL, dbFailOnError
'
        loeschNEW "Tabak", gdApp
        CreateTableT2 "TABAK", gdApp
        
        Dim lPosEnde As Long
        Dim cEinzelsatz As String
        Dim lLenfil As Long
        Dim lposSemi As Long
        Dim lposSemiEnde As Long
        Dim cWert As String
        Dim lfnr1 As Long
        Dim cLEKPR As String
        
        lPos = 1
        lPosEnde = 1
        lposSemiEnde = 1
        
        Set rsrs = gdApp.OpenRecordset("TABAK")

        iFileNr = FreeFile
        Open sTubepfad & "\" & sdat For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
            lLenfil = Len(cSatz1)
            
            lPosEnde = InStr(lPos, cSatz1, vbCrLf)
'            lPos = lPos + lposende - lPos + 2
            
            
            Do
                lPosEnde = InStr(lPos, cSatz1, vbCrLf)
                
                cEinzelsatz = Mid(cSatz1, lPos, lPosEnde - lPos)
                lPos = lPos + lPosEnde - lPos + 2
                
                lposSemi = 1
                
                rsrs.AddNew
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!LIBESNR = cWert
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!NOTIZEN = cWert
                
'                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
'                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
'                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!BEZEICH = cWert
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                If IsNumeric(cWert) Then
                    rsrs!EAN = cWert
                Else
                    rsrs!EAN = 0
                End If
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!Faktor = cWert
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1

                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                If IsNumeric(cWert) Then
                    cLEKPR = Format(cWert, "####0.00")
                    rsrs!lekpr = SwapStr(cLEKPR, ",", "")
                Else
                    rsrs!lekpr = 0
                End If

                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                If IsNumeric(cWert) Then
                    rsrs!KVKPR1 = SwapStr(cWert, ",", "")
                Else
                    rsrs!KVKPR1 = 0
                End If
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                If IsNumeric(cWert) Then
                    rsrs!HWGN = cWert
                Else
                    rsrs!HWGN = 0
                End If
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                If IsNumeric(cWert) Then
                    rsrs!UWGN = cWert
                Else
                    rsrs!UWGN = 0
                End If
                
                For i = 1 To 3
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                Next i
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, "|")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                If IsNumeric(cWert) Then
                    rsrs!GPEAN = cWert
                Else
                    rsrs!GPEAN = 0
                End If
                
                rsrs.Update
                
            Loop While lLenfil >= lPos
            
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
        
        sSQL = "Update tabak set AGN = " & Text1(5).Text & " where HWGN = 1" 'Zigaretten
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Update tabak set AGN = " & Text1(8).Text & " where HWGN = 2" 'Zigarren
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Update tabak set AGN = " & Text1(9).Text & " where HWGN = 4 and UWGN = 21 " 'Tabak
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Update tabak set AGN = " & Text1(10).Text & " where HWGN = 4 and UWGN = 11 " 'Pfeifentabak
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Update tabak set AGN = " & Text1(10).Text & " where HWGN = 4 and UWGN = 12 " 'Pfeiffentabak
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Update tabak set AGN = " & Text1(11).Text & " where HWGN = 4 and UWGN = 1 " 'Feinschnitt
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Update tabak set AGN = " & Text1(11).Text & " where HWGN = 4 and UWGN = 2 " 'Feinschnitt
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Update tabak set AGN = " & Text1(11).Text & " where HWGN = 4 and UWGN = 3 " 'Feinschnitt
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Update tabak set AGN = " & Text1(12).Text & " where HWGN = 5" 'RBA
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = " Insert into Meister "
        sSQL = sSQL & " Select "
        sSQL = sSQL & "  ean "
        sSQL = sSQL & " , AGN "
        sSQL = sSQL & " , Libesnr "
        sSQL = sSQL & " , bezeich "
        sSQL = sSQL & " , KVKPR1 as VKPR "
        sSQL = sSQL & " , KVKPR1 "
        sSQL = sSQL & " , LEKPR "
        sSQL = sSQL & " , 1 as LPZ "
        sSQL = sSQL & " , Notizen "
        sSQL = sSQL & " from Tabak where EAN <> '0' "
        sSQL = sSQL & " group by Libesnr "
        sSQL = sSQL & " , bezeich "
        sSQL = sSQL & " , ean "
        sSQL = sSQL & " , KVKPR1 "
        sSQL = sSQL & " , LEKPR "
        sSQL = sSQL & " , AGN "
        sSQL = sSQL & " , Notizen "
        gdApp.Execute sSQL, dbFailOnError
        
        anzeige "normal", "Die Datensätze werden überprüft...", Label3
        
        Pause (3)
        
        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
'            Command1(5).Enabled = False
'            Exit Function
        End If
        
        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3
        
        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"
        
        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError
        
        loeschNEW "Tabak", gdBase
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "TABAK"
        
    
        '9. Ermittle TUBELINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3


        lLinr = checkTUBEinLISRT()
                
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
        End If
    
        pbrStatus.Value = 75
        
        TUBEStep3 = True
        
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "TUBEStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
'        Resume Next
        
    End If
End Function
Private Function RINGStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad           As String
        Dim cPfad1          As String
        Dim oldpath         As String
        Dim newpath         As String
        Dim newpath1        As String
        Dim lfail           As Long
        Dim lRet            As Long
        Dim pa              As String
        Dim sSQL            As String
        Dim rsrs            As Recordset
        Dim rsZ             As Recordset
        Dim rsS             As Recordset
        Dim lAnz            As Long
        Dim lLinr           As Long
        Dim lfnr1           As Long
        Dim cBez            As String
        Dim cEAN            As String
        Dim lLpz            As Long
        RINGStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda
        
        oldpath = sRINGPfad & "\" & sdat
        newpath1 = cPfad1 & "Stammda\RING\" & sdat
        lRet = CopyFile(oldpath, newpath1, lfail)
        
        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
        Kill cPfad & "mde"
        oldpath = sRINGPfad & "\" & sdat
        newpath = cPfad
        newpath = ShortPath(newpath)
        newpath = newpath & sdat
        
        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
'                Kill oldpath
            End If
            anzeige "normal", "Die Datei wird kopiert...", Label3
        End If
        pbrStatus.Value = 40

        '9. Ermittle LINR und ordne
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3
        lLinr = checkRINGinLISRT()
        
        Zip_Unzip "ICHAG", pa & "\", sRINGPfad & "\" & Label2(3).Caption, txtstatus
        
        loeschNEW "STAFFELRING", gdBase
        CreateTableT2 "STAFFELRING", gdBase
        
        Dim dbExcel As Database
        Dim gsExcel50 As String
        gsExcel50 = "Excel 5.0;HDR=yes;IMEX=1;"
        
        Set dbExcel = OpenDatabase(pa & "\ringfoto.xls", 0, 0, gsExcel50)
        Set rsZ = dbExcel.OpenRecordset("artikel$")
        
        Set rsS = gdBase.OpenRecordset("STAFFELRING")
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        If Not rsZ.EOF Then
            rsZ.MoveFirst
            Do While Not rsZ.EOF
                rsrs.AddNew
                
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                
                If Not IsNull(rsZ!as_artikelnr) Then
'                    rsrs!LIBESNR = Trim(rsZ!as_artikelnr)
                    rsrs!LIBESNR = Trim(Left(rsZ!as_lieferanten_artikelnr, 13))
                    
                End If
                
'                If Not IsNull(rsZ!as_herst_prod) Then
'                    cbez = Trim(Left(rsZ!as_herst_prod, 4))
'                    cbez = cbez & Space(1)
'                End If
'
'                If Not IsNull(rsZ!as_name) Then
'                    cbez = cbez & Trim(Left(rsZ!as_name, 9))
'                    cbez = cbez & Space(1)
'                End If
'
'                If Not IsNull(rsZ!as_produktbeschreibung2) Then
'                    cbez = cbez & Trim(rsZ!as_produktbeschreibung2)
'                End If
                
                
                If Not IsNull(rsZ!as_name) Then
                    rsrs!BEZEICH = Trim(Left(rsZ!as_name, 35))
                End If
                
                If Not IsNull(rsZ!as_produktbeschreibung2) Then
                    rsrs!NOTIZEN = Trim(Left(rsZ!as_produktbeschreibung2, 25))
                End If
                
                If Not IsNull(rsZ!ps_empf_vk) Then
                    rsrs!vkpr = (rsZ!ps_empf_vk)
                End If
                
                If Not IsNull(rsZ!ps_ek_ohne_mwst) Then
                    rsrs!lekpr = rsZ!ps_ek_ohne_mwst
                End If
                
                If Not IsNull(rsZ!ps_staffel_menge1) Then
                    If Val(rsZ!ps_staffel_menge1) > 0 Then
                        If Not IsNull(rsZ!ps_staffel_preis1) Then
                            rsS.AddNew
                            rsS!LIBESNR = rsrs!LIBESNR
                            rsS!Menge = Val(rsZ!ps_staffel_menge1)
                            rsS!lekpr = rsZ!ps_staffel_preis1
                            rsS.Update
                        End If
                    End If
                End If
                
                If Not IsNull(rsZ!ps_staffel_menge2) Then
                    If Val(rsZ!ps_staffel_menge2) > 0 Then
                        If Not IsNull(rsZ!ps_staffel_preis2) Then
                            rsS.AddNew
                            rsS!LIBESNR = rsrs!LIBESNR
                            rsS!Menge = Val(rsZ!ps_staffel_menge2)
                            rsS!lekpr = rsZ!ps_staffel_preis2
                            rsS.Update
                        End If
                    End If
                End If
                
                If Not IsNull(rsZ!ps_staffel_menge3) Then
                    If Val(rsZ!ps_staffel_menge3) > 0 Then
                        If Not IsNull(rsZ!ps_staffel_preis3) Then
                            rsS.AddNew
                            rsS!LIBESNR = rsrs!LIBESNR
                            rsS!Menge = Val(rsZ!ps_staffel_menge3)
                            rsS!lekpr = rsZ!ps_staffel_preis3
                            rsS.Update
                        End If
                    End If
                End If
                
                If Not IsNull(rsZ!ps_staffel_menge4) Then
                    If Val(rsZ!ps_staffel_menge4) > 0 Then
                        If Not IsNull(rsZ!ps_staffel_preis4) Then
                            rsS.AddNew
                            rsS!LIBESNR = rsrs!LIBESNR
                            rsS!Menge = Val(rsZ!ps_staffel_menge4)
                            rsS!lekpr = rsZ!ps_staffel_preis4
                            rsS.Update
                        End If
                    End If
                End If
                
                If Not IsNull(rsZ!ps_staffel_menge5) Then
                    If Val(rsZ!ps_staffel_menge5) > 0 Then
                        If Not IsNull(rsZ!ps_staffel_preis5) Then
                            rsS.AddNew
                            rsS!LIBESNR = rsrs!LIBESNR
                            rsS!Menge = Val(rsZ!ps_staffel_menge5)
                            rsS!lekpr = rsZ!ps_staffel_preis5
                            rsS.Update
                        End If
                    End If
                End If
                
                If Not IsNull(rsZ!ps_staffel_menge6) Then
                    If Val(rsZ!ps_staffel_menge6) > 0 Then
                        If Not IsNull(rsZ!ps_staffel_preis6) Then
                            rsS.AddNew
                            rsS!LIBESNR = rsrs!LIBESNR
                            rsS!Menge = Val(rsZ!ps_staffel_menge6)
                            rsS!lekpr = rsZ!ps_staffel_preis6
                            rsS.Update
                        End If
                    End If
                End If
                
                If Not IsNull(rsZ!ps_staffel_menge7) Then
                    If Val(rsZ!ps_staffel_menge7) > 0 Then
                        If Not IsNull(rsZ!ps_staffel_preis7) Then
                            rsS.AddNew
                            rsS!LIBESNR = rsrs!LIBESNR
                            rsS!Menge = Val(rsZ!ps_staffel_menge7)
                            rsS!lekpr = rsZ!ps_staffel_preis7
                            rsS.Update
                        End If
                    End If
                End If
                
                If Not IsNull(rsZ!ps_staffel_menge8) Then
                    If Val(rsZ!ps_staffel_menge8) > 0 Then
                        If Not IsNull(rsZ!ps_staffel_preis8) Then
                            rsS.AddNew
                            rsS!LIBESNR = rsrs!LIBESNR
                            rsS!Menge = Val(rsZ!ps_staffel_menge8)
                            rsS!lekpr = rsZ!ps_staffel_preis8
                            rsS.Update
                        End If
                    End If
                End If
                
                If Not IsNull(rsZ!ps_staffel_menge9) Then
                    If Val(rsZ!ps_staffel_menge9) > 0 Then
                        If Not IsNull(rsZ!ps_staffel_preis9) Then
                            rsS.AddNew
                            rsS!LIBESNR = rsrs!LIBESNR
                            rsS!Menge = Val(rsZ!ps_staffel_menge9)
                            rsS!lekpr = rsZ!ps_staffel_preis9
                            rsS.Update
                        End If
                    End If
                End If
                
                If Not IsNull(rsZ!ps_staffel_menge10) Then
                    If Val(rsZ!ps_staffel_menge10) > 0 Then
                        If Not IsNull(rsZ!ps_staffel_preis10) Then
                            rsS.AddNew
                            rsS!LIBESNR = rsrs!LIBESNR
                            rsS!Menge = Val(rsZ!ps_staffel_menge10)
                            rsS!lekpr = rsZ!ps_staffel_preis10
                            rsS.Update
                        End If
                    End If
                End If
                
                lLpz = 500
                If Not IsNull(rsZ!as_wg_auer) Then
                    lLpz = 500 + CInt(rsZ!as_wg_auer)
                End If
                rsrs!LPZ = lLpz
                
                If Not IsNull(rsZ!as_ean1) Then
                    cEAN = Val(rsZ!as_ean1)
                    
                    If cEAN = "0" Then
                        rsrs!EAN = ""
                    ElseIf cEAN = "9999999999999" Then
                        rsrs!EAN = ""
                    Else
                        If Len(cEAN) = 11 Then
                            rsrs!EAN = "0" & cEAN
                        ElseIf Len(cEAN) = 14 Then
                            rsrs!EAN = ""
                        ElseIf Len(cEAN) < 5 Then
                            rsrs!EAN = ""
                        Else
                            rsrs!EAN = cEAN
                        End If
                    End If
                Else
                    rsrs!EAN = ""
                End If
                
                If Not IsNull(rsZ!as_ean2) Then
                    cEAN = Val(rsZ!as_ean2)
                    
                    If cEAN = "0" Then
                        rsrs!EAN2 = ""
                    ElseIf cEAN = "9999999999999" Then
                        rsrs!EAN2 = ""
                    Else
                        If Len(cEAN) = 11 Then
                            rsrs!EAN2 = "0" & cEAN
                        ElseIf Len(cEAN) < 5 Then
                            rsrs!EAN2 = ""
                        Else
                            rsrs!EAN2 = cEAN
                        End If
                    End If
                Else
                    rsrs!EAN2 = ""
                End If
                
                If Not IsNull(rsZ!as_ean3) Then
                    cEAN = Val(rsZ!as_ean3)
                    If cEAN = "0" Then
                        rsrs!EAN3 = ""
                    ElseIf cEAN = "9999999999999" Then
                        rsrs!EAN3 = ""
                    Else
                        If Len(cEAN) = 11 Then
                            rsrs!EAN3 = "0" & cEAN
                        ElseIf Len(cEAN) < 5 Then
                            rsrs!EAN3 = ""
                        Else
                            rsrs!EAN3 = cEAN
                        End If
                    End If
                Else
                    rsrs!EAN3 = ""
                End If
                
                If Not IsNull(rsZ!as_kz_steuerart) Then
                    If rsZ!as_kz_steuerart = "1" Then
                        rsrs!MWST = "V"
                    ElseIf rsZ!as_kz_steuerart = "2" Then
                        rsrs!MWST = "E"
                    ElseIf rsZ!as_kz_steuerart = "6" Then
                        rsrs!MWST = "O"
                    ElseIf IsNull(rsZ!as_kz_steuerart) Then
                        rsrs!MWST = "V"
                    Else
                        rsrs!MWST = "V"
                    End If
                Else
                    rsrs!MWST = "V"
                End If
                
                
                
                
                
                If Not IsNull(rsZ!as_kz_abverkauf) Then
                    If Trim(rsZ!as_kz_abverkauf) = "ja" Then
                        rsrs!RKZ = "J"
                    Else
                        rsrs!RKZ = "N"
                    End If
                End If
                
                If Not IsNull(rsZ!ps_liefereinheit) Then
                    rsrs!MINMEN = rsZ!ps_liefereinheit
                End If
                
                rsrs!GEFUEHRT = "J"
                
                rsrs.Update
                
            rsZ.MoveNext
            Loop
        End If
        rsZ.Close: Set rsZ = Nothing
        rsrs.Close: Set rsrs = Nothing
        
        sSQL = "Update Staffelring set linr = " & lLinr
        gdBase.Execute sSQL, dbFailOnError
        
        sSQL = "Delete from Meister where ean = '0'"
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Delete from Meister where libesnr = ''"
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Delete from Meister where libesnr is null "
        gdApp.Execute sSQL, dbFailOnError
        
        
    
        Set rsZ = gdApp.OpenRecordset("Select distinct(LPZ) from Meister")
        
        If Not rsZ.EOF Then
            rsZ.MoveFirst
            Do While Not rsZ.EOF
                
                If Not IsNull(rsZ!LPZ) Then
                    lLpz = Trim(rsZ!LPZ)
                    If ermLINBEZ(Trim(rsZ!LPZ), lLinr, gdBase) = "" Then
                        insertLINBEZ lLpz, lLinr, "Linie " & Trim(rsZ!LPZ), "RINGFOTO", "RING"
                    End If
                End If
                
            rsZ.MoveNext
            Loop
        End If
        rsZ.Close: Set rsZ = Nothing
        
    
        anzeige "normal", "Die Datensätze werden überprüft...", Label3
        
        Pause (3)
        
        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
    
        ErmittlungMeisterDuplisPlusDel
        
        sSQL = "Delete from Meister where LEKPR = 0 "
        gdApp.Execute sSQL, dbFailOnError
        
        Me.Refresh
        
        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3
        
        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"
        
        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError
        
        Me.Refresh
        
                
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
        End If
    
        pbrStatus.Value = 75
        
        RINGStep3 = True
        
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "RINGStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
        Resume Next
        
    End If
End Function
Private Function DevilStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad       As String
        Dim cPfad1      As String
        Dim oldpath     As String
        Dim newpath     As String
        Dim newpath1    As String
        Dim lfail       As Long
        Dim lRet        As Long
        Dim pa          As String
        Dim sSQL        As String
        Dim rsrs        As Recordset
        Dim rsMeister   As Recordset
        Dim lAnz        As Long
        Dim ctemp       As String
        Dim lPos        As Long
        Dim cSatz       As String
        Dim cSatz1      As String
        Dim iFileNr     As Integer
        
        Dim cSatz2      As String
        Dim lStart      As Long
        Dim lMaxlen     As Long
        Dim lAnzeige    As Long
    
        DevilStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        
'        sDEVpfad = ShortPath(sDEVpfad)
'        cPfad1 = ShortPath(cPfad1)
'        cpfad = ShortPath(cPfad1)

        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda
        
        oldpath = sDEVpfad & "\" & sdat
'        MsgBox oldpath
        newpath1 = cPfad1 & "Stammda\DEVIL\" & sdat
        
'        MsgBox newpath1
        lRet = CopyFile(oldpath, newpath1, lfail)
        
        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
'        Kill cPfad & "mde"
        
        
        oldpath = sDEVpfad & "\" & sdat
        newpath = cPfad & sdat
        
        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
                Kill oldpath
            End If
            
            anzeige "normal", "Die Datei wird kopiert...", Label3
        
        End If
        pbrStatus.Value = 40

        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
         '9. Ermittle DevilLINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3

        Dim lLinr As Long
        
        lLinr = checkDEVILinLISRT()
                
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Delete from artikel where LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
            
            sSQL = "Delete from artlief where LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
        End If

        
        '3. Importieren
        loeschapp "DEVILIN"
        CreateTable "DEVILIN", gdApp
        
        
        '**********
        Dim dbExcel As Database
        
        Dim rsKU As Recordset
        Dim gsExcel50 As String
        Dim cFehlerInhalt As String
        gsExcel50 = "Excel 5.0;"
        
'        MsgBox pa & "\" & Label2(3).Caption
        Set dbExcel = OpenDatabase(pa & "\" & Label2(3).Caption, 0, 0, gsExcel50)
        Set rsKU = gdApp.OpenRecordset("DEVILIN")
        Set rsrs = dbExcel.OpenRecordset("liste001$")
        
        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                rsKU.AddNew
                
                rsKU!LIBESNR = rsrs![ARTIKEL-NUMMER]
                rsKU!BEZEICH = Left(rsrs!Artikel, 35)
                rsKU!NOTIZEN = rsrs!HERSTELLER
                rsKU!Status = rsrs!Status
                rsKU!Warengruppe = rsrs!Warengruppe
                rsKU!NP = rsrs![Netto-Preis in EUR]
                rsKU!EAN = rsrs![EAN-CODE]
                rsKU.Update
                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        dbExcel.Close

        pbrStatus.Value = 55
        
        loeschNEW "devlpz", gdApp
        CreateTable "DEVLPZ", gdApp
        
        
        Set rsrs = gdApp.OpenRecordset("DEVILIN")
        Set rsMeister = gdApp.OpenRecordset("DEVLPZ")
        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
            rsMeister.AddNew
            
            
            rsMeister!LINBEZEICH = rsrs!Warengruppe '& Space(1) & rsrs!NOTIZEN
            rsMeister.Update
            
            rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        rsMeister.Close
        
        pbrStatus.Value = 60
        
        loeschNEW "devdis", gdApp
        loeschNEW "devdis", gdBase
        
        sSQL = "select distinct(linbezeich) into devdis from DEVLPZ"
        gdApp.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 65
    
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "devdis"
        
        sSQL = "Delete from LINBEZ " 'inner join devdis on linbez.linbezeich = devdis.linbezeich "
        sSQL = sSQL & " where linr = " & lLinr
        schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 70
        
        Dim lcount As Long
        lcount = 1
        
        Set rsrs = gdBase.OpenRecordset("select * from devdis order by linbezeich")
        Set rsMeister = gdBase.OpenRecordset("LINBEZ")
        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                rsMeister.AddNew
                rsMeister!LINBEZEICH = rsrs!LINBEZEICH
                rsMeister!linr = lLinr
                rsMeister!LPZ = lcount
                lcount = lcount + 1
                rsMeister.Update
                
                rsrs.MoveNext
            Loop
        End If
        
        rsrs.Close: Set rsrs = Nothing
        rsMeister.Close
        
        pbrStatus.Value = 75
        
        Dim cPfad43 As String
        cPfad43 = gcPfad    'Anwendungspfad
        If Right$(cPfad43, 1) <> "\" Then
            cPfad43 = cPfad43 & "\"
        End If
        
        loeschNEW "LINBEZ", gdApp
        TransferTab gdBase, cPfad43 & "kissapp.mdb", "LINBEZ"
        
        sSQL = "Update DEVILIN inner join LINBEZ on linbez.linbezeich = DEVILIN.warengruppe "
        sSQL = sSQL & " set DEVILIN.lpz  = linbez.lpz "
        sSQL = sSQL & " where linr = 500000 "
        gdApp.Execute sSQL, dbFailOnError
        
        
    
        Dim dTemp As Double
        
        Set rsMeister = gdApp.OpenRecordset("Meister", dbOpenTable)
        Set rsrs = gdApp.OpenRecordset("DEVILIN", dbOpenTable)
        If rsrs.RecordCount <> 0 Then
            rsrs.MoveFirst
            
            Do While Not rsrs.EOF
                rsMeister.AddNew
            
                If Not IsNull(rsrs!Status) Then
                
                    ctemp = rsrs!Status
                    
                    Select Case UCase(ctemp)
                        Case "IM ZULAUF"
                            rsMeister!RKZ = "N"
                            rsMeister!AWM = "1"
                        Case "AUF LAGER"
                            rsMeister!RKZ = "N"
                            rsMeister!AWM = "2"
                        Case "NICHT VERFÜGBAR"
                            rsMeister!RKZ = "J"
                            rsMeister!AWM = "3"
                        Case Else
                            rsMeister!RKZ = "N"
                            rsMeister!AWM = "3"
                    End Select
                Else
                    rsMeister!RKZ = "N"
                    rsMeister!AWM = "3"
                End If

                If Not IsNull(rsrs!NP) Then
                    dTemp = CDbl(rsrs!NP) * 100

                    rsMeister!lekpr = dTemp
                Else
                    rsMeister!lekpr = 0
                End If
                
                rsMeister!Status = rsrs!Status
                rsMeister!LPZ = rsrs!LPZ
                rsMeister!MARKE = rsrs!NOTIZEN
                rsMeister!NOTIZEN = rsrs!NOTIZEN
                rsMeister!EAN = rsrs!EAN
                rsMeister!LIBESNR = rsrs!LIBESNR
                rsMeister!BEZEICH = rsrs!BEZEICH
                rsMeister!MWST = "1"
                rsMeister!vkpr = 0
                rsMeister!KVKPR1 = 0
                rsMeister!linr = lLinr 'Devil

                rsMeister.Update
                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        rsMeister.Close
      
        anzeige "normal", "Die Datensätze werden überprüft...", Label3
                
        Pause (1)
        
        pbrStatus.Value = 80
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3

        End If
    
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3
        
        
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"
        
        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
        
       
        DevilStep3 = True
        
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "DevilStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
        Resume Next
    End If
End Function
Private Function NeuformStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long
    
        NeuformStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda
        
        Dim sleft As String
        
        sleft = Left(sdat, Len(sdat) - 4)
        If IsNumeric(sleft) = False Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        End If
        
        oldpath = sNeupfad & "\" & sdat
        newpath1 = cPfad1 & "Stammda\NEUFORM\" & sdat
        lRet = CopyFile(oldpath, newpath1, lfail)
        
        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
        Kill cPfad & "mde"
        oldpath = sNeupfad & "\" & sdat
        newpath = cPfad & "mde"
        
        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
                Kill oldpath
            End If
            
            anzeige "normal", "Die Datei wird kopiert...", Label3
        
        End If
        
        
        
        '2a. Herstell auch kopieren in den Anwendungspfad+Stammda
        
        oldpath = sNeupfad & "\Herstell.exp"
        newpath1 = cPfad1 & "Stammda\NEUFORM\Herstell.exp"
        lRet = CopyFile(oldpath, newpath1, lfail)

        
        
        
        
        
        
        
        
        pbrStatus.Value = 40
        '4. Anzahl der Datensätze ermitteln
        
       
        sSQL = "Select count(*) as anzahl FROM mde IN "
        sSQL = sSQL & "'" & pa & "'"
        sSQL = sSQL & " 'Text;'"
        
        Set rsrs = gdApp.OpenRecordset(sSQL)
        If Not rsrs.RecordCount = 0 Then
            If Not IsNull(rsrs!ANZAHL) Then
                anzeige "normal", rsrs!ANZAHL & " Datensätze werden eingelesen...", Label3
            Else
                anzeige "Rot", "Das Einlesen wurde abgebrochen: fehlende Artikelsätze", Label3
            End If
        Else
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: fehlende Artikelsätze", Label3
            Command1(5).Enabled = False
            Exit Function
        End If
        rsrs.Close: Set rsrs = Nothing
        
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        Dim lAnzSatz As Long
        Dim lAktSatz As Long
        Dim DSatz As Datensatz
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim lPos As Long
        Dim cEinzelsatz As String
        Dim ctemp As String
        
        Dim lLinr As Long
        Dim lfnr1 As Long
        
        
        'Herstell prüfen
        Set rsrs = gdBase.OpenRecordset("LISRT")
        iFileNr = FreeFile
        
        Open cPfad1 & "Stammda\NEUFORM\Herstell.exp" For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
    
            lAnzSatz = LOF(iFileNr)
            lAnzSatz = lAnzSatz - 1
            lAnzSatz = lAnzSatz / 100

            For lAktSatz = 0 To lAnzSatz - 1
                lPos = (lAktSatz * 100) + 1
                cEinzelsatz = Mid(cSatz1, lPos, 100)
'                MsgBox cEinzelsatz
                
                lLinr = Val(Mid(cEinzelsatz, 1, 3)) + 700000
                If fnPruefeLINRWKL10(lLinr) Then
                    rsrs.Edit
                Else
                    rsrs.AddNew
                End If

                rsrs!linr = lLinr


                rsrs!LIEFBEZ = Mid(cEinzelsatz, 4, 20)
                rsrs!Kuerzel = UCase(Mid(cEinzelsatz, 4, 5))
                rsrs!STADT = Mid(cEinzelsatz, 49, 20)
                rsrs!strasse = Mid(cEinzelsatz, 104, 13)
                rsrs!Tel = Mid(cEinzelsatz, 69, 15)
                rsrs!Fax = Mid(cEinzelsatz, 84, 15)
                rsrs!Plz = Mid(cEinzelsatz, 44, 5)

                rsrs.Update
                    
            Next lAktSatz
        Else
            
        End If
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
        
        
        
        lfnr1 = 0
        
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        iFileNr = FreeFile
        
        Open cPfad & "mde" For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
    
            lAnzSatz = LOF(iFileNr)
            lAnzSatz = lAnzSatz - 1
            lAnzSatz = lAnzSatz / 158

            For lAktSatz = 0 To lAnzSatz - 1
                lPos = (lAktSatz * 158) + 1
                cEinzelsatz = Mid(cSatz1, lPos, 158)
    
                rsrs.AddNew
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                
                rsrs!LIBESNR = Mid(cEinzelsatz, 86, 8)
                rsrs!linr = Val(Mid(cEinzelsatz, 78, 5)) + 700000
                rsrs!vkpr = Mid(cEinzelsatz, 33, 7)
                
                
                
                
                
                
                
                rsrs!lekpr = Mid(cEinzelsatz, 40, 7)
                rsrs!EAN = Trim(Mid(cEinzelsatz, 104, 13))

                rsrs!AGN = 611
                rsrs!LPZ = IIf(Mid(cEinzelsatz, 60, 1) = "C", 1, 0)
                rsrs!INHALT = Val(Mid(cEinzelsatz, 26, 4))
                rsrs!INHALTBEZ = Mid(cEinzelsatz, 30, 3)
                rsrs!GRUNDPREIS = IIf(Mid(cEinzelsatz, 152, 1) = "0", "N", "J")
                rsrs!NOTIZEN = Mid(cEinzelsatz, 140, 1)
                
                
                rsrs!MINMEN = Mid(cEinzelsatz, 136, 3)
                rsrs!MWST = IIf(Mid(cEinzelsatz, 55, 2) = "19", "1", "2")
                rsrs!RKZ = IIf(Mid(cEinzelsatz, 60, 1) = "C", "N", "J")
''                If rsrs!RKZ = "N" Then
''
''                    MsgBox "N"
''                End If
                rsrs!BEZEICH = Left(ermLiefBez(CLng(rsrs!linr)), 4) & " " & Mid(cEinzelsatz, 6, 20) & Space(1) & rsrs!INHALT & Space(1) & rsrs!INHALTBEZ
'                MsgBox Mid(cEinzelsatz, 6, 20)
'                rsrs!EAN2 = "0"
'                rsrs!EAN3 = "0"
                rsrs.Update
                    
            Next lAktSatz
        Else
            
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
        
        
        
        

        anzeige "normal", "Die Datensätze werden überprüft...", Label3

        Pause (3)

        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
'            Command1(5).Enabled = False
'            Exit Function
        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        pbrStatus.Value = 75
        
        NeuformStep3 = True
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    ElseIf err.Number = 3421 Then
    
        ctemp = "Achtung!" & vbCrLf & vbCrLf
        ctemp = ctemp & "Datenfehler in dieser Datei.(" & sdat & ") Bitte kontaktieren Sie Ihren Datenlieferanten."
        
        MsgBox ctemp, vbCritical, "Winkiss Hinweis:"
        Close iFileNr
    
        NeuformStep3 = False
        Screen.MousePointer = 0
    
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "NeuformStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
        
    End If
End Function
Private Function BollwegStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long
    
        BollwegStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda
    
        '4. Anzahl der Datensätze ermitteln
        
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        
        Dim lAnzSatz As Long
        Dim lAktSatz As Long
        Dim DSatz As Datensatz
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim lPos As Long
        Dim cEinzelsatz As String
        
        Dim lLinr As Long
        Dim lfnr1 As Long
        lfnr1 = 0
        
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        iFileNr = FreeFile

        Open sBOLLpfad & "\" & sdat For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
    
            lAnzSatz = LOF(iFileNr)
            lAnzSatz = lAnzSatz - 1
            lAnzSatz = lAnzSatz / 87

            For lAktSatz = 0 To lAnzSatz - 1
                lPos = (lAktSatz * 87) + 1
                cEinzelsatz = Mid(cSatz1, lPos, 87)
    
                rsrs.AddNew
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                
                rsrs!LIBESNR = Mid(cEinzelsatz, 1, 7)
                rsrs!linr = 550040
                rsrs!vkpr = SwapStr(Mid(cEinzelsatz, 67, 7), ",", ".")
                rsrs!lekpr = SwapStr(Mid(cEinzelsatz, 59, 7), ",", ".")
                rsrs!EAN = Mid(cEinzelsatz, 9, 13)
                rsrs!AGN = 322

                If IsNumeric(Mid(cEinzelsatz, 55, 3)) Then
                    rsrs!MINMEN = Mid(cEinzelsatz, 55, 3)
                Else
                    rsrs!MINMEN = 0
                End If
                rsrs!MWST = 1 'IIf(Mid(cEinzelsatz, 55, 2) = "16", "1", "2")
                rsrs!RKZ = "N" 'IIf(Mid(cEinzelsatz, 60, 1) = "C", "N", "J")
                rsrs!GEFUEHRT = "J"

                rsrs!BEZEICH = Mid(cEinzelsatz, 23, 15) & Space(1) & Mid(cEinzelsatz, 39, 15)

                rsrs.Update
                    
            Next lAktSatz
        Else
            
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
        

        anzeige "normal", "Die Datensätze werden überprüft...", Label3

        Pause (3)

        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
'            Command1(5).Enabled = False
'            Exit Function
        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        pbrStatus.Value = 75
        

        BollwegStep3 = True
        
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "BollwegStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
'        Resume Next
        
    End If
End Function
Private Function VEDEStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long
    
        VEDEStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        
        Dim lAnzSatz As Long
        Dim lAktSatz As Long
        Dim DSatz As Datensatz
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim lPos As Long
        Dim cEinzelsatz As String
        
        Dim lLinr As Long
        Dim cLinr As String
        Dim lfnr1 As Long
        lfnr1 = 0
        
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        iFileNr = FreeFile
'        sBOLLpfad & "\" & sDat
'        Open cPfad & "mde" For Binary As #iFileNr
        Open sVEDEPfad & "\" & sdat For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
    
            lAnzSatz = LOF(iFileNr)
            lAnzSatz = lAnzSatz - 1
            lAnzSatz = lAnzSatz / 167

            For lAktSatz = 0 To lAnzSatz - 1
                lPos = (lAktSatz * 167) + 1
                cEinzelsatz = Mid(cSatz1, lPos, 167)
    
                rsrs.AddNew
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                
                rsrs!linr = Mid(cEinzelsatz, 1, 4)
                If lAktSatz = 0 Then
                    cLinr = Mid(cEinzelsatz, 1, 4)
                End If
                
                rsrs!EAN = Trim(Mid(cEinzelsatz, 25, 13))
                rsrs!LIBESNR = Trim(Mid(cEinzelsatz, 5, 11))
                rsrs!BEZEICH = Mid(cEinzelsatz, 38, 29)
                
                rsrs!MINMEN = Trim(Mid(cEinzelsatz, 83, 5))
                
                rsrs!vkpr = Mid(cEinzelsatz, 76, 7)
                rsrs!lekpr = Mid(cEinzelsatz, 68, 7)
                
                rsrs!AGN = Val(Text1(4).Text) 'Mid(cEinzelsatz, 16, 3)

                
                rsrs!MWST = Mid(cEinzelsatz, 145, 1)
                rsrs!RKZ = "N"
                rsrs!GEFUEHRT = "J"

                rsrs.Update
                    
            Next lAktSatz
        Else
            
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
        
        anzeige "normal", "Die Datensätze werden überprüft...", Label3

        Pause (3)

        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
'            Command1(5).Enabled = False
'            Exit Function
        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        pbrStatus.Value = 75
        
        '9. Ermittle LINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3

        gcStadaLinr = cLinr
        lLinr = checkLinrInLISRT(cLinr)
                
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
        End If
        

        VEDEStep3 = True
        
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "VEDEStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
        
        
    End If
End Function
Private Function KISSStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long
    
        KISSStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        
        Dim lAnzSatz As Long
        Dim lAktSatz As Long
        Dim DSatz As Datensatz
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim cQuelle As String
        Dim lPos As Long
        Dim cEinzelsatz As String
        
        Dim lLinr As Long
        Dim lLiefnr As Long
        Dim lfnr1 As Long
        Dim sLiefVerz As String
        lfnr1 = 0
        
        '*** SicherheitsKill
        
        Kill sKISSPfad & "\MASTER.csv"
        Kill sKISSPfad & "\MASTER.txt"
        Kill sKISSPfad & "\LINBEZ.csv"
        Kill sKISSPfad & "\MLISRT.csv"
        
        '*** ENTPACKEN ***
        
        Zip_Unzip "ICHAG", sKISSPfad, sKISSPfad & "\" & sdat, txtstatus
        
        If FileExists(sKISSPfad & "\MASTER.csv") = False Then
            Exit Function
        End If
        
        '*** KOPIEREN ***
        iFileNr = FreeFile
        Open sKISSPfad & "\MLISRT.CSV" For Binary As #iFileNr
        lPos = LOF(iFileNr)
        If lPos = 0 Then
            Close iFileNr
            Kill sKISSPfad & "\MLISRT.CSV"
        Else
            Close iFileNr
        End If
        
        cQuelle = sKISSPfad & "\MLISRT.CSV"
        csvImport "MLISRT", gdBase, cQuelle, Label3
        Kill cQuelle
        
        iFileNr = FreeFile
        Open sKISSPfad & "\LINBEZ.CSV" For Binary As #iFileNr
        lPos = LOF(iFileNr)
        If lPos = 0 Then
            Close iFileNr
            Kill sKISSPfad & "\LINBEZ.CSV"
        Else
            Close iFileNr
        End If
        
        cQuelle = sKISSPfad & "\LINBEZ.CSV"
        csvImport "MLINBEZ", gdBase, cQuelle, Label3
        Kill cQuelle
            
        iFileNr = FreeFile
        Open sKISSPfad & "\MASTER.CSV" For Binary As #iFileNr
        lPos = LOF(iFileNr)
        If lPos = 0 Then
            Close iFileNr
            Kill sKISSPfad & "\MASTER.CSV"
        Else
            Close iFileNr
        End If
    
        cQuelle = sKISSPfad & "\MASTER.CSV"
        csvImport "MASTER", gdBase, cQuelle, Label3
        Kill cQuelle
            
        Dim rsMaster As Recordset
        Set rsMaster = gdBase.OpenRecordset("MASTER")
        Set rsrs = gdApp.OpenRecordset("MEISTER")
        
        If Not rsMaster.EOF Then
            rsMaster.MoveFirst
            Do While Not rsMaster.EOF
    
                rsrs.AddNew
                lfnr1 = lfnr1 + 1
                
                rsrs!lfnr = lfnr1
                rsrs!linr = rsMaster!linr
                rsrs!EAN = rsMaster!EAN
                rsrs!LIBESNR = rsMaster!LIBESNR
                rsrs!BEZEICH = rsMaster!BEZEICH
                rsrs!vkpr = rsMaster!vkpr
                rsrs!lekpr = rsMaster!lekpr
                rsrs!AGN = rsMaster!AGN
                rsrs!LPZ = rsMaster!LPZ
                rsrs!MINMEN = rsMaster!MINMEN
                rsrs!MWST = rsMaster!MWST
                rsrs!RKZ = rsMaster!RKZ
                rsrs!GEFUEHRT = "J"
                
                rsrs!INHALT = rsMaster!INHALT
                rsrs!INHALTBEZ = rsMaster!INHALTBEZ
                rsrs!GRUNDPREIS = rsMaster!GRUNDPREIS
                rsrs!PGN = rsMaster!PGN

                rsrs.Update
                    
            rsMaster.MoveNext
            Loop
            
        End If
        
        rsMaster.Close: Set rsMaster = Nothing
        rsrs.Close: Set rsrs = Nothing
        
        anzeige "normal", "Die Datensätze werden überprüft...", Label3

        Pause (3)

        pbrStatus.Value = 60
        
        ErmittlungMeisterDuplisPlusDel
        
'        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
'        lAnz = CLng(ErmittlungMeisterDuplis)
'        If lAnz > 0 Then
'            Screen.MousePointer = 0
'            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
'        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        pbrStatus.Value = 75
        
        '9. Ermittle LINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3
        
        lLinr = checkLinrForKISS(Label3)
        
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
        End If
        
        '**************Gibt es Bilder? - dann in einen Ordner
        lLiefnr = Val(Mid(sdat, 2, Len(sdat) - 4))
    
        sLiefVerz = lLinr & Trim(ermLiefBez(lLinr))
        
        VerzVorhanden sLiefVerz, cPfad1 & "Picture\"
        
        gcBilderPfad = cPfad1 & "Picture\" & sLiefVerz & "\"
        
        If FileExists(sKISSPfad & "\" & "B" & lLiefnr & ".zip") Then
            anzeige "normal", "Bilder werden entpackt...", Label3
            Zip_Unzip "ICHAG", cPfad1 & "Picture\" & sLiefVerz & "\", sKISSPfad & "\" & "B" & lLiefnr & ".zip", txtstatus
        End If
        '****************Bilder ende

        
        KISSStep3 = True
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "KISSStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
'        Resume Next
    End If
End Function
Private Function LüningStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim rsEAN   As Recordset
        Dim lAnz    As Long
        Dim lLenfil As Long
        Dim lPosEnde As Long
        Dim lposSemi As Long
        Dim lposSemiEnde As Long
        Dim cWert As String
        Dim cInhalt     As String
        Dim cInhaltBez     As String
        Dim i As Integer
        Dim lAnzSatz As Long
        Dim lAktSatz As Long
        Dim DSatz As Datensatz
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim cQuelle As String
        Dim lPos As Long
        Dim cEinzelsatz As String
        Dim lLinr As Long
        Dim lLiefnr As Long
        Dim lfnr1 As Long
        Dim sLiefVerz As String
        Dim ctemp As String
        Dim lagn As Long
        Dim cWGN As String
    
        LüningStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        lfnr1 = 0
        
        '*** SicherheitsKill
        
        Kill sLUEpfad & "\Artikel81.csv"
        Kill sLUEpfad & "\EAN61.csv"
        
        '*** ENTPACKEN ***
    
        Zip_Unzip "", sLUEpfad, sLUEpfad & "\" & sdat, txtstatus
        
        If FileExists(sLUEpfad & "\Artikel.csv") = False Then
            Exit Function
        End If
        
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If

        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))

        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"

        '2. dann erstellen
        CreateTable "MEISTER", gdApp

        '2a. Datei kopieren in den Anwendungspfad+Stammda

        oldpath = sLUEpfad
        oldpath = ShortPath(oldpath)
        oldpath = oldpath & "\" & sdat
        
        newpath1 = cPfad1 & "Stammda\LUE\"
        newpath1 = ShortPath(newpath1)
        newpath1 = newpath1 & sdat
        
        lRet = CopyFile(oldpath, newpath1, lfail)

        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
        Kill cPfad & "mde"
        oldpath = sLUEpfad & "\" & sdat
        newpath = cPfad & "mde"

        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
                Kill oldpath
            End If

            anzeige "normal", "Die Datei wird kopiert...", Label3

        End If
        pbrStatus.Value = 40
        '4. Anzahl der Datensätze ermitteln
        
        
        
        
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        loeschNEW "EAN61", gdApp

        '2. dann erstellen
        CreateTableT2 "EAN61", gdApp
        
       
        Set rsEAN = gdApp.OpenRecordset("EAN61")
        
        lPos = 1
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        iFileNr = FreeFile

        '**** Artikel81
        Open sLUEpfad & "\Artikel.csv" For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
            lLenfil = Len(cSatz1)
            
            lPosEnde = InStr(lPos, cSatz1, vbCrLf)

            Do
                lPosEnde = InStr(lPos, cSatz1, vbCrLf)
                cEinzelsatz = Mid(cSatz1, lPos, lPosEnde - lPos)
                lPos = lPos + lPosEnde - lPos + 2
                
                If Left(cEinzelsatz, 2) = "81" Then
                    rsrs.AddNew
                    rsrs!LIBESNR = Val(Mid(cEinzelsatz, 7, 8))
                    rsrs!vkpr = Mid(cEinzelsatz, 66, 7)
                    rsrs!lekpr = Mid(cEinzelsatz, 141, 6)
                    rsrs!BEZEICH = Mid(cEinzelsatz, 84, 30)
    
                    ctemp = Trim(Mid(cEinzelsatz, 334, 10))
                    'den numerischen Teil abschneiden
                    cInhaltBez = ""
                    cInhalt = ""
                    If Len(ctemp) > 0 Then
                        For i = Len(ctemp) To 0 Step -1
                            cInhalt = Mid(ctemp, 1, i)
                            If IsNumeric(cInhalt) Then
                                cInhaltBez = Right(ctemp, Len(ctemp) - i)
                                cInhaltBez = SwapStr(cInhaltBez, ".", "")
                                Exit For
                            End If
                        Next i
                    End If
                    
                    rsrs!INHALTBEZ = UCase(Left(cInhaltBez, 3))
                    
                    If cInhalt <> "" Then
                        rsrs!INHALT = cInhalt
                    End If
                    
                    If cInhalt <> "" And cInhaltBez <> "" Then
                        rsrs!GRUNDPREIS = "J"
                    Else
                        rsrs!GRUNDPREIS = "N"
                    End If
                    
                    rsrs!MINMEN = Mid(cEinzelsatz, 73, 4)
                    
                    ctemp = Mid(cEinzelsatz, 33, 1)
                    If ctemp = "2" Then
                        rsrs!MWST = "V"
                    ElseIf ctemp = "1" Then
                        rsrs!MWST = "E"
                    ElseIf ctemp = "0" Then
                        rsrs!MWST = "O"
                    End If
                    
                    rsrs!LPZ = 1
                    rsrs!RKZ = "N"
                    rsrs!GEFUEHRT = "J"
                    
                    rsrs!EAN = ""
                    rsrs!EAN2 = ""
                    rsrs!EAN3 = ""
                    
                    lagn = Val(Mid(cEinzelsatz, 54, 4))
                    
                    ctemp = Mid(cEinzelsatz, 21, 1)
                    If ctemp = "A" Then
                    
                        If giLuening = -1 Then
                            If (lagn >= 800 And lagn < 1299) Or (lagn >= 1500 And lagn < 9799) Then
                                lfnr1 = lfnr1 + 1
                                rsrs!lfnr = lfnr1
                                
                                If lagn >= 1250 And lagn < 1260 Then
                                    rsrs!AGN = Val(Text1(14).Text)
                                Else
                                    rsrs!AGN = 617
                                End If
                                
                                rsrs.Update
                            End If
                            
                        ElseIf giLuening = 0 Then
                        
                            lfnr1 = lfnr1 + 1
                            rsrs!lfnr = lfnr1
                            
                            If lagn >= 1250 And lagn < 1260 Then
                                rsrs!AGN = Val(Text1(14).Text)
                            Else
                                rsrs!AGN = 617
                            End If
                            
                            rsrs.Update
                        End If
                        
                    End If
                ElseIf Left(cEinzelsatz, 2) = "61" Then
                
                    rsEAN.AddNew
                    rsEAN!LIBESNR = Val(Mid(cEinzelsatz, 7, 8))
                    rsEAN!EAN = Trim(Mid(cEinzelsatz, 33, 13) & fn_errechne_Prüfziffer(Trim(Mid(cEinzelsatz, 33, 13))))
                    
                    rsEAN.Update
                
                End If
            Loop While lLenfil >= lPos
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
        rsEAN.Close: Set rsEAN = Nothing
        
        
        
        'interne Libesnr Duplikate entfernen
        
        
        
        
        
        
        
        sSQL = "Create Index libesnr on meister (libesnr)"
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Create Index libesnr on EAN61 (libesnr)"
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Delete from EAN61 where right(ean,1) = 'x' "
        gdApp.Execute sSQL, dbFailOnError
        
        
        ErmittlungLueningDuplisPlusDel_EAN61
        
        
        
        'hier zwischen ARTEAN_K füllen
        loeschNEW "artean_LUE", gdApp
        
        sSQL = "Select EAN61.libesnr, EAN61.ean, 0 as Artnr into artean_LUE from EAN61"
        gdApp.Execute sSQL, dbFailOnError
        
        loesch "artean_LUE"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "artean_LUE"
        'ende hier zwischen ARTEAN_K füllen
        
        
        
        loeschNEW "artean", gdApp
        
        sSQL = "Select * into artean from artean_LUE"
        gdApp.Execute sSQL, dbFailOnError
        
        
        
'        sSQL = "Select EAN61.libesnr, EAN61.ean into artean from EAN61 where EAN61.libesnr in (Select meister.libesnr from meister)"
'        gdApp.Execute sSQL, dbFailOnError
        
        loeschNEW "Top1ean", gdApp

        sSQL = "Select max(Ean) as eanMax, libesnr into Top1ean from artean group by libesnr"
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Update meister inner join top1ean on meister.libesnr = top1ean.libesnr set meister.ean = top1ean.eanMax "
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Update artean inner join meister on artean.ean = meister.ean set artean.artnr = 1 "
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Delete from artean where artnr = 1"
        gdApp.Execute sSQL, dbFailOnError
        
        
        loeschNEW "Top1ean", gdApp

        sSQL = "Select max(Ean) as eanMax, libesnr into Top1ean from artean group by libesnr"
        gdApp.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 60
        
        sSQL = "Update meister inner join top1ean on meister.libesnr = top1ean.libesnr set meister.ean2 = top1ean.eanMax "
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Update artean inner join meister on artean.ean = meister.ean2 set artean.artnr = 1 "
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Delete from artean where artnr = 1"
        gdApp.Execute sSQL, dbFailOnError
        
        loeschNEW "Top1ean", gdApp

        sSQL = "Select max(Ean) as eanMax, libesnr into Top1ean from artean group by libesnr"
        gdApp.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 60
        
        sSQL = "Update meister inner join top1ean on meister.libesnr = top1ean.libesnr set meister.ean3 = top1ean.eanMax "
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Update artean inner join meister on artean.ean = meister.ean3 set artean.artnr = 1 "
        gdApp.Execute sSQL, dbFailOnError
        
        sSQL = "Delete from artean where artnr = 1"
        gdApp.Execute sSQL, dbFailOnError
        
        
        
        anzeige "normal", "Die Datensätze werden überprüft...", Label3
        
        ErmittlungMeisterDuplisPlusDel_Luening
        
        ErmittlungLueningDuplisPlusDel_EAN
        
         

        Pause (3)

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        pbrStatus.Value = 75
        
        '9. Ermittle LINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3
        
        lLinr = checkLüninginLISRT()
        
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
        End If
        
       
        
        LüningStep3 = True
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "LüningStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
        Resume Next
    End If
End Function
Private Function DeKompStada() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim lfail   As Long
    Dim lRet    As Long
    Dim cQuelle As String
    Dim cZiel   As String
    Dim cPfad   As String
    Dim cdatei  As String
    Dim ctmp    As String
    Dim lPos    As String
    Dim iStufe  As Integer
    Dim iFileNr As Integer
    
    DeKompStada = False
    
    '* Arbeitsschritte: *******************************
    '* 1. Umbenennen der Wochen-Master-Datei        ***
    '* 2. Entpacken der Master-Datei                ***
    '* 3. Kopieren von MLISRT und MASTER            ***
    '**************************************************
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    Kill cPfad & "IN\MASTER!.000"
    
'    File1.Pattern = "M*!.*"
'    File1.Refresh
    
    iStufe = 0
    '*** UMBENENNEN ***
    If File1.ListCount = 0 Then
        MsgBox "Keine Stammdaten zum Entpacken gefunden!", vbInformation, "Winkiss Hinweis:"
        
        iFileNr = FreeFile
        Open cPfad & "DATENUPD.TXT" For Binary As #iFileNr
        lPos = LOF(iFileNr) + 1
        ctmp = Format$(Now, "DD.MM.YYYY HH:MM:SS") & " Keine MASTER! vorhanden!" & vbCrLf
        Put #iFileNr, lPos, ctmp
        Close iFileNr

        Exit Function
    ElseIf File1.ListCount = 1 Then
        cdatei = UCase$(File1.list(0))
    ElseIf File1.ListIndex < 0 Then
        MsgBox "Bitte Stammdaten auswählen!", vbInformation, "Winkiss Hinweis:"
        File1.SetFocus
        Exit Function
    Else
        cdatei = UCase$(File1.list(File1.ListIndex))
    End If
    
    iStufe = 1
    iFileNr = FreeFile
    Open cPfad & "DATENUPD.TXT" For Binary As #iFileNr
    lPos = LOF(iFileNr) + 1
    ctmp = Format$(Now, "DD.MM.YYYY HH:MM:SS") & " " & cdatei & vbCrLf
    Put #iFileNr, lPos, ctmp
    Close iFileNr
    
    iStufe = 2
    If cdatei <> "MASTER!.000" Then
        cQuelle = cPfad & "IN\" & cdatei
        cZiel = cPfad & cdatei
        
        lRet = CopyFile(cQuelle, cZiel, lfail)
        If lRet = 0 Then
            MsgBox "Konnte " & cQuelle & " nicht kopieren!", vbInformation, "Winkiss Hinweis:"
        End If
        Kill cPfad & "IN\MASTER!.000"
        
        cQuelle = cPfad & "IN\" & cdatei
        cZiel = cPfad & "IN\MASTER!.000"
        
        lRet = CopyFile(cQuelle, cZiel, lfail)
        If lRet = 0 Then
            MsgBox "Konnte " & cQuelle & " nicht kopieren!", vbInformation, "Winkiss Hinweis:"
        End If
    End If
    
    Kill cPfad & "IN\*.CSV"
    
    '*** ENTPACKEN ***
    
    Zip_Unzip "ICHAG", cPfad & "IN", cPfad & "IN\MASTER!.000", txtstatus
    
    If FileExists(cPfad & "IN\MASTER!.000") = False Then
        Exit Function
    End If
       
   
    '*** KOPIEREN ***
    iFileNr = FreeFile
    Open cPfad & "IN\MLISRT.CSV" For Binary As #iFileNr
    lPos = LOF(iFileNr)
    If lPos = 0 Then
        Close iFileNr
        Kill cPfad & "IN\MLISRT.CSV"
    Else
        Close iFileNr
    End If
    
    cQuelle = cPfad & "IN\MLISRT.CSV"
    csvImport "MLISRT", gdBase, cQuelle, Label3
    Kill cQuelle
    
    iFileNr = FreeFile
    Open cPfad & "IN\LINBEZ.CSV" For Binary As #iFileNr
    lPos = LOF(iFileNr)
    If lPos = 0 Then
        Close iFileNr
        Kill cPfad & "IN\LINBEZ.CSV"
    Else
        Close iFileNr
    End If
    
    cQuelle = cPfad & "IN\LINBEZ.CSV"
    csvImport "MLINBEZ", gdBase, cQuelle, Label3
    Kill cQuelle
        
    iFileNr = FreeFile
    Open cPfad & "IN\MASTER.CSV" For Binary As #iFileNr
    lPos = LOF(iFileNr)
    If lPos = 0 Then
        Close iFileNr
        Kill cPfad & "IN\MASTER.CSV"
    Else
        Close iFileNr
    End If

    cQuelle = cPfad & "IN\MASTER.CSV"
    csvImport "MASTER", gdBase, cQuelle, Label3
    Kill cQuelle
    

    
    If NewTableSuchenDBKombi("MASTER", gdBase) Then
        If Datendrin("MASTER", gdBase) Then
            File1.Pattern = "*.*"
            File1.Refresh
    
            Kill cPfad & "IN\" & cdatei
            DeKompStada = True
        End If
    End If
    
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "DeKompStada"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen ist ein Fehler aufgetreten."
    
        Fehlermeldung1
    End If
End Function
Private Function HOFFStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long
    
        HOFFStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda
        

        '4. Anzahl der Datensätze ermitteln
        
       

        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        
        Dim lAnzSatz As Long
        Dim lAktSatz As Long
        Dim DSatz As Datensatz
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim lPos As Long
        Dim cEinzelsatz As String
        
        Dim lLinr As Long
        Dim cLinr As String
        Dim lfnr1 As Long
        lfnr1 = 0
        
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        iFileNr = FreeFile
        Open sHOFFPfad & "\" & sdat For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
    
            lAnzSatz = LOF(iFileNr)
            lAnzSatz = lAnzSatz - 1
            lAnzSatz = lAnzSatz / 130

            For lAktSatz = 0 To lAnzSatz - 1
                lPos = (lAktSatz * 130) + 1
                cEinzelsatz = Mid(cSatz1, lPos, 130)
    
                rsrs.AddNew
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                
                rsrs!linr = Mid(cEinzelsatz, 1, 6) '100560 'Hoffmann benkelberg 101030 Inter
                If lAktSatz = 0 Then
                    
                    cLinr = Mid(cEinzelsatz, 1, 6)
                End If
                rsrs!LIBESNR = Trim(Mid(cEinzelsatz, 8, 11))
               
                rsrs!BEZEICH = Mid(cEinzelsatz, 19, 29)
                
                rsrs!EAN = Trim(Mid(cEinzelsatz, 48, 13))
                rsrs!MWST = Mid(cEinzelsatz, 69, 1)
                
                rsrs!vkpr = Mid(cEinzelsatz, 77, 7)
                rsrs!lekpr = Mid(cEinzelsatz, 70, 7)
                rsrs!AGN = Val(Text1(3).Text) 'wunsch benkelberg
                rsrs!RKZ = Mid(cEinzelsatz, 61, 1)
                If rsrs!RKZ = "@" Then
                    rsrs!RKZ = "J"
                    rsrs!LPZ = 0
                Else
                    rsrs!RKZ = "N"
                    rsrs!LPZ = 1
                End If
                
                If IsNumeric(Mid(cEinzelsatz, 65, 3)) Then
                    rsrs!MINMEN = Mid(cEinzelsatz, 65, 3)
                Else
                    rsrs!MINMEN = 0
                End If
                
                rsrs!GEFUEHRT = "J"
'                rsrs!NOTIZEN = Mid(cEinzelsatz, 62, 2)
                rsrs.Update
                    
            Next lAktSatz
        Else
            
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
        
        
        
        

        anzeige "normal", "Die Datensätze werden überprüft...", Label3

        Pause (3)

        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
'            Command1(5).Enabled = False
'            Exit Function
        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        pbrStatus.Value = 75
        
        '9. Ermittle LINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3

        gcStadaLinr = cLinr
        lLinr = checkLinrInLISRT(cLinr)
                
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
        End If
        
        HOFFStep3 = True
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "HOFFStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
    End If
End Function
Private Function EDEKStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad           As String
        Dim cPfad1          As String
        Dim oldpath         As String
        Dim newpath1        As String
        Dim lfail           As Long
        Dim lRet            As Long
        Dim pa              As String
        Dim sSQL            As String
        Dim rsEH            As Recordset
        Dim i               As Integer
        Dim lWGN            As Long
        Dim sPfad           As String
        
        Dim lLINR_S         As Long
        Dim lLINR_L         As Long
        Dim lagn            As Long
        Dim sKuerzel        As String
        Dim lUebergabeLinr  As Long
        Dim sBo1            As String
        Dim sBo2            As String
        Dim sBo3            As String
        Dim sBo4            As String
       
        EDEKStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        loeschNEW "EDEK_WGN", gdBase
        CreateTableT2 "EDEK_WGN", gdBase
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        
        loeschNEW "meister", gdApp
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda
        
        oldpath = sEDEKApfad & "\" & sdat
        newpath1 = cPfad1 & "Stammda\EDEKA\" & sdat
        lRet = CopyFile(oldpath, newpath1, lfail)
    
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
       
        sPfad = gcDBPfad
        If Right(sPfad, 1) <> "\" Then
            sPfad = sPfad & "\"
        End If
        sPfad = sPfad & "IN"
        
        loeschNEW "EDEKA", gdBase
        
        sSQL = "Select * into EDEKA from " & Left(sdat, Len(sdat) - 4) & " IN '" & sPfad & "' 'dBase IV;'"
        gdBase.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 10
        
        sSQL = "Insert into EDEK_WGN Select distinct(WGR) as WGN from EDEKA "
        gdBase.Execute sSQL, dbFailOnError
        
        loeschNEW "alit", gdBase
        
        sSQL = "Select distinct(WGR) as WGN, count(artnr) as ANZ_L into alit from EDEKA "
        sSQL = sSQL & " where LWEG = 'L' group by WGR"
        gdBase.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 20
        
        sSQL = "Update EDEK_WGN w inner join alit a on w.wgn = a.wgn  "
        sSQL = sSQL & " set w.anz_l = a.anz_l "
        sSQL = sSQL & " , w.AUSGEWAEHLT_L = 'entfernt' "
        gdBase.Execute sSQL, dbFailOnError
        
        loeschNEW "alit", gdBase
        
        sSQL = "Select distinct(WGR) as WGN, count(artnr) as ANZ_S into alit from EDEKA "
        sSQL = sSQL & " where LWEG = 'S' group by WGR"
        gdBase.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 30
        
        sSQL = "Update EDEK_WGN w inner join alit a on w.wgn = a.wgn  "
        sSQL = sSQL & " set w.anz_s = a.anz_s "
        sSQL = sSQL & " , w.AUSGEWAEHLT_S = 'entfernt' "
        gdBase.Execute sSQL, dbFailOnError
        
        gb159 = True
        frmWKL159.Show 1
        
        If gb159 = False Then
            Exit Function
        End If
        
        sKuerzel = ermEDEKE("KUERZEL")
        lLINR_S = CLng(ermEDEKE("LINR_S"))
        lLINR_L = CLng(ermEDEKE("LINR_L"))
        lagn = CLng(ermEDEKE("AGN"))
        sBo1 = ermEDEKE("bo1")
        sBo2 = ermEDEKE("bo2")
        sBo3 = ermEDEKE("bo3")
        sBo4 = ermEDEKE("bo4")
        
        pbrStatus.Value = 40
        
        lUebergabeLinr = lLINR_L
        sSQL = "Select * from EDEK_WGN_HIST where AUSGEWAEHLT_L = 'ausgewählt' "
        Set rsEH = gdBase.OpenRecordset(sSQL)
        If Not rsEH.EOF Then
        
            rsEH.MoveLast
            pbrStatus.Max = rsEH.RecordCount
            pbrStatus.Value = 0
            rsEH.MoveFirst
            
            
            Do While Not rsEH.EOF
                lWGN = 0
                If Not IsNull(rsEH!WGN) Then
                    lWGN = rsEH!WGN
                    insert_into_meister_edeka lWGN, "L", lUebergabeLinr, lagn, sKuerzel, sBo1, sBo2, sBo3, sBo4
                    pbrStatus.Value = pbrStatus.Value + 1
                End If
                rsEH.MoveNext
            Loop
        End If
        rsEH.Close: Set rsEH = Nothing
        
        
        lUebergabeLinr = lLINR_S
        sSQL = "Select * from EDEK_WGN_HIST where AUSGEWAEHLT_S= 'ausgewählt' "
        Set rsEH = gdBase.OpenRecordset(sSQL)
        If Not rsEH.EOF Then
            rsEH.MoveLast
            pbrStatus.Max = rsEH.RecordCount
            pbrStatus.Value = 0
            rsEH.MoveFirst
            Do While Not rsEH.EOF
                lWGN = 0
                If Not IsNull(rsEH!WGN) Then
                    lWGN = rsEH!WGN
                    insert_into_meister_edeka lWGN, "S", lUebergabeLinr, lagn, sKuerzel, sBo1, sBo2, sBo3, sBo4
                    pbrStatus.Value = pbrStatus.Value + 1
                End If
                rsEH.MoveNext
            Loop
        End If
        rsEH.Close: Set rsEH = Nothing
    
        anzeige "normal", "EAN Duplikate werden entfernt...", Label3


        pbrStatus.Max = 160
        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        
        ErmittlungMeisterDuplisPlusDel_09
        
        anzeige "normal", "Die Artikeldaten werden überprüft...", Label3
        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        pbrStatus.Value = 75
        
        EDEKStep3 = True
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "EDEKStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
'        Resume Next
    End If
    
End Function
Private Sub insert_into_meister_edeka(lWGN As Long, sArtikelArt As String, lLinr As Long, lagn As Long, _
sKurz As String, sAend As String, sNeu As String, sAusl As String, sMitKurz As String)
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs    As DAO.Recordset
    Dim sSQL    As String
    Dim rsQ     As DAO.Recordset
    
    Dim slibesnr    As String
    Dim sEAN        As String
    Dim sBezeich    As String
    Dim sVK         As String
    Dim sEK         As String
    Dim iVPE        As Integer
    Dim sMWST       As String
    Dim sWert       As String
    Dim sRKZ        As String
    Dim bOr         As Boolean
    Dim i           As Integer
    Dim iCountKomma As Integer
    bOr = False
    
    sSQL = "Select * from Edeka where "
    sSQL = sSQL & " wgr = " & lWGN
    sSQL = sSQL & " and LWEG = '" & sArtikelArt & "' "
    
    If sAusl = "Wahr" Then
        If bOr = False Then
            sSQL = sSQL & " and ( "
        Else
            sSQL = sSQL & " or "
        End If
        sSQL = sSQL & "  KZ = 'LOE' "
        bOr = True
    End If
    
    If sNeu = "Wahr" Then
        If bOr = False Then
            sSQL = sSQL & " and ( "
        Else
            sSQL = sSQL & " or "
        End If
        sSQL = sSQL & "  KZ = 'NEU' "
        bOr = True
    End If
    
    If sAend = "Wahr" Then
        If bOr = False Then
            sSQL = sSQL & " and ( "
        Else
            sSQL = sSQL & " or "
        End If
        sSQL = sSQL & "  KZ = 'EK' or  KZ = 'VK' or KZ = 'ALL' "
        bOr = True
    End If
    
    If bOr = True Then
        sSQL = sSQL & " ) "
    End If
    
    Set rsrs = gdApp.OpenRecordset("MEISTER")
    
    Set rsQ = gdBase.OpenRecordset(sSQL)
    If Not rsQ.EOF Then
        rsQ.MoveFirst
        Do While Not rsQ.EOF
        
            slibesnr = ""
            sEAN = ""
            sBezeich = ""
            sVK = "0"
            sEK = "0"
            iVPE = 0
            sMWST = ""
            sWert = ""
            sRKZ = "N"
            If Not IsNull(rsQ!ARTNR_NEU) Then
                slibesnr = rsQ!ARTNR_NEU
            End If
            
            If Not IsNull(rsQ!EAN) Then
                sEAN = rsQ!EAN
            End If
            
            If Not IsNull(rsQ!LANG_TEXT) Then
                sBezeich = rsQ!LANG_TEXT
            End If
            
            If sMitKurz = "Wahr" Then
                If sKurz <> "" Then
                    sBezeich = sKurz & " " & sBezeich
                End If
            End If
            
            sWert = ""
            If Not IsNull(rsQ!vK_NEU) Then
                sWert = Trim(rsQ!vK_NEU)
                
                If Val(sWert) = 0 Then
                
                    If Not IsNull(rsQ!vK_ALT) Then
                        sWert = Trim(rsQ!vK_ALT)
                    End If
                End If
            Else
                If Not IsNull(rsQ!vK_ALT) Then
                    sWert = Trim(rsQ!vK_ALT)
                End If
            End If
            sVK = SwapStr(sWert, ".", ",")
            
            iCountKomma = 0
            For i = 1 To Len(sVK)
                If Mid(sVK, i, 1) = "," Then
                    iCountKomma = iCountKomma + 1
                End If
            Next i
            
            If iCountKomma > 1 Then
                sVK = SwapStr(sVK, ",", "")
                sVK = CDbl(sVK) / 100
            
                
            End If

            
            
            
            sWert = ""
            If Not IsNull(rsQ!EK_NEU) Then
                sWert = Trim(rsQ!EK_NEU)
                
                If Val(sWert) = 0 Then
                    If Not IsNull(rsQ!eK_ALT) Then
                        sWert = Trim(rsQ!eK_ALT)
                    End If
                End If
            Else
                If Not IsNull(rsQ!eK_ALT) Then
                    sWert = Trim(rsQ!eK_ALT)
                End If
                
            End If
            sEK = SwapStr(sWert, ".", ",")
            
            iCountKomma = 0
            For i = 1 To Len(sEK)
                If Mid(sEK, i, 1) = "," Then
                    iCountKomma = iCountKomma + 1
                End If
            Next i
            
            If iCountKomma > 1 Then
                sEK = SwapStr(sEK, ",", "")
                sEK = CDbl(sEK) / 100
            End If
            
            
            
            If Not IsNull(rsQ!GA) Then
                iVPE = Val(rsQ!GA)
            End If
            
            sWert = ""
            If Not IsNull(rsQ!MWST) Then
                sWert = rsQ!MWST
                If sWert = "2" Then
                    sMWST = "V"
                ElseIf sWert = "1" Then
                    sMWST = "E"
                ElseIf sWert = "0" Then
                    sMWST = "O"
                ElseIf sWert = "8" Then
                    sMWST = "O"
                ElseIf sWert = "9" Then
                    sMWST = "O"
                End If
            End If
            
            If Not IsNull(rsQ!KZ) Then
                sWert = rsQ!KZ
                
                If sWert = "LOE" Then
                    sRKZ = "J"
                Else
                    sRKZ = "N"
                End If
                
            End If
            
            rsrs.AddNew
            
            rsrs!LIBESNR = slibesnr
            rsrs!EAN = sEAN
            rsrs!BEZEICH = Left(sBezeich, 35)
            rsrs!lekpr = sEK
            rsrs!vkpr = sVK
            rsrs!MINMEN = iVPE
            rsrs!MWST = sMWST
            rsrs!LPZ = 1
            rsrs!AGN = lagn
            rsrs!linr = lLinr
            rsrs!RKZ = sRKZ
            rsrs!GEFUEHRT = "J"
            rsrs!GRUNDPREIS = "J"
            
            rsrs.Update
            
            rsQ.MoveNext
        Loop
    End If
    
    rsQ.Close: Set rsQ = Nothing
    
    rsrs.Close: Set rsrs = Nothing
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "insert_into_meister_edeka"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
'    Resume Next
End Sub
Private Function ermEDEKE(sSpalte As String) As String
    On Error GoTo LOKAL_ERROR
    
    Dim rsQ     As DAO.Recordset
    Dim sSQL    As String
    
    sSQL = "Select " & sSpalte & " as info from EDEKE"
    Set rsQ = gdBase.OpenRecordset(sSQL)
    If Not rsQ.EOF Then
        If Not IsNull(rsQ!Info) Then
            ermEDEKE = rsQ!Info
        End If
    End If
    
    rsQ.Close: Set rsQ = Nothing
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermEDEKE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function REWEStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR
    

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long
        Dim i       As Integer
       
    
        REWEStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        
        loeschNEW "REWE_AGN", gdApp
        CreateTableT2 "REWE_AGN", gdApp
        
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        
        loeschNEW "meister", gdApp
'        loeschNEW "meister", gdapp
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda
        
        oldpath = sREWEpfad & "\" & sdat
        newpath1 = cPfad1 & "Stammda\REWE\" & sdat
        lRet = CopyFile(oldpath, newpath1, lfail)
    
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        Dim lAnzSatz As Long
        Dim lAktSatz As Long
        Dim dEkpr As Double
        Dim dVkPr As Double
        Dim DSatz As Datensatz
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim lPos As Long
        Dim cEinzelsatz As String
        
        Dim lLinr As Long
        Dim lfnr1 As Long
        Dim ilen As Integer
        Dim cNumstring As String
        
        Dim cBezeich As String
        
        Dim rsagn As Recordset
        
        
        Dim lPosEnde As Long
        
        Dim lLenfil As Long
        Dim lposSemi As Long
        Dim lposSemiEnde As Long
        Dim cWert As String
        Dim cArtbez_1 As String
        Dim cArtbez_2 As String
        Dim cInhalt As String
        Dim cInhaltBez As String
        Dim cInhaltsangabegesamt As String
        Dim cAgn As String
        Dim cAGNBEZEICH As String
        Dim cWarengruppe As String
        
        Dim cLEKPR As String
        
        lfnr1 = 0
        
        lPos = 1
        lPosEnde = 1
        lposSemiEnde = 1
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")
        Set rsagn = gdApp.OpenRecordset("REWE_AGN")
        
        
        iFileNr = FreeFile
        Open sREWEpfad & "\" & sdat For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
    
            lLenfil = Len(cSatz1)
            
            lPosEnde = InStr(lPos, cSatz1, vbCrLf)
            lPos = lPos + lPosEnde - lPos + 2 'Kopfzeile überspringen
            
            Do
                lPosEnde = InStr(lPos, cSatz1, vbCrLf)
                
                cEinzelsatz = Mid(cSatz1, lPos, lPosEnde - lPos)
                lPos = lPos + lPosEnde - lPos + 2
                
                lposSemi = 1
                
                rsrs.AddNew
                rsagn.AddNew
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                
                'Libesnr
                cWert = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!LIBESNR = cWert
                
                'Liefnr ohne Bedeutung
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                'Liefname = Notizen
                cWert = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!NOTIZEN = cWert
                
                'WGRU = AGN
                cWert = ""
                cAgn = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                cAgn = cWert
                rsrs!AGN = CLng(cAgn)
                rsagn!RAGN = CLng(cAgn)
                
                'WGRU_BEZ
                cWert = ""
                cAGNBEZEICH = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                cAGNBEZEICH = Left(cWert, 30)
                cAGNBEZEICH = SwapStr(cAGNBEZEICH, "½", "Ä")
                cAGNBEZEICH = SwapStr(cAGNBEZEICH, "!", "Ü")
                cAGNBEZEICH = SwapStr(cAGNBEZEICH, "\", "Ö")
                rsagn!RAGTEXT = cAGNBEZEICH
                
                
                'Artbez_1
                cWert = ""
                cArtbez_1 = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                cArtbez_1 = cWert
                
                'Artbez_2
                cWert = ""
                cArtbez_2 = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                cArtbez_2 = cWert
            
                'ME_TEXT ohne Bedeutung
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                'EK = EKPR
                cWert = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                If IsNumeric(cWert) Then
                    rsrs!lekpr = cWert
                Else
                    rsrs!lekpr = 0
                End If
                
                'UVP = VKPR
                cWert = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                If IsNumeric(cWert) Then
                    rsrs!vkpr = cWert
'                    rsrs!vkpr = rsrs!vkpr / 100
                Else
                    rsrs!vkpr = 0
                End If
                
                'EAN
                cWert = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!EAN = cWert
                
                'MWST
                cWert = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                If cWert <> "" Then
                    If cWert = 1 Then
                        rsrs!MWST = "V"
                    ElseIf cWert = 2 Then
                        rsrs!MWST = "E"
                    End If
                End If
                
                'Einh = Minmen
                cWert = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!MINMEN = cWert
                
                'Inhalt
                cWert = ""
                cInhalt = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                cInhalt = Trim(cWert)
                
                
                
                'neu 21.04.15
                If cInhalt <> "" Then
                    cInhalt = SwapStr(cInhalt, ",", "")
                    cInhalt = CStr(CLng(cInhalt) / 10000)
                    cInhalt = Format(cInhalt, "####0.00")
                    
                    If Right(cInhalt, 3) = ",00" Then
                        cInhalt = Left(cInhalt, Len(cInhalt) - 3)
                    End If
                    
                    If Right(cInhalt, 2) = ",0" Then
                        cInhalt = Left(cInhalt, Len(cInhalt) - 2)
                    End If
                    
                    If Right(cInhalt, 1) = "0" And InStr(1, cInhalt, ",") > 0 Then
                        cInhalt = Left(cInhalt, Len(cInhalt) - 1)
                    End If
                End If
                'ende neu 21.04.15
                
                
                
                
                
                
                If cInhalt <> "" Then
                    If cInhalt = "0" Then
                        cInhalt = ""
                    Else
                        rsrs!INHALT = cInhalt
                    End If
                End If
                
                'Einheit des Inhalts
                cWert = ""
                cInhaltBez = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                cInhaltBez = Trim(cWert)
                rsrs!INHALTBEZ = cInhaltBez
                
                'Auslistung
                cWert = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                'UVP-Pflicht
                cWert = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                
                'EAN2
                cWert = ""
                
                
                
                Dim sRest As String
            
                If Len(cEinzelsatz) > lposSemiEnde Then
                    sRest = Mid(cEinzelsatz, lposSemi, Len(cEinzelsatz) - lposSemi + 1)
                    cWert = Trim(sRest)
                End If
                
                
                
                
                
                
                
                
                
                
                
                
                
'                lposSemiEnde = InStr(lposSemi, cEinzelsatz, vbTab)
'
'                If lposSemiEnde > 0 Then
'                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
'                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
'
'                End If
                
                If cWert <> "" Then
                    cWert = Val(cWert)
                    If Len(cWert) = 11 Then
                        cWert = "0" & cWert
                    End If
                End If
                
                rsrs!EAN2 = cWert
                rsrs!EAN3 = ""
                
                rsrs!GRUNDPREIS = "J"
                
                'Bezeichnung aufbauen
                
                cArtbez_2 = Trim(cArtbez_2)
                cArtbez_2 = SwapStr(cArtbez_2, "  ", " ")
                
                If Trim(cArtbez_2) <> "" Then
                    If Len(cArtbez_2) >= 8 Then
                        cArtbez_2 = Left(cArtbez_2, 8)
                    End If
                End If
                
                cBezeich = ""
                
                'neu
                If Trim(cArtbez_2) <> "" Then
                    cBezeich = Trim(cArtbez_2)
                End If
                
                
                cArtbez_1 = Trim(cArtbez_1)
                cArtbez_1 = SwapStr(cArtbez_1, "  ", " ")
                
                
                cInhalt = Trim(cInhalt)
                cInhaltBez = Trim(cInhaltBez)
                
                cInhaltsangabegesamt = cInhalt & cInhaltBez
                
                If cArtbez_1 <> "" Then
                    If cInhaltsangabegesamt <> "" Then
                        
                        cBezeich = cBezeich & " " & cArtbez_1
                        cBezeich = Left(cBezeich, 34 - Len(cInhaltsangabegesamt))
                        cBezeich = cBezeich & " " & cInhaltsangabegesamt
                        
                    Else
                        cBezeich = cBezeich & " " & cArtbez_1
                        cBezeich = Left(cBezeich, 35)
                    End If
                    
                End If
                
                rsrs!BEZEICH = cBezeich
                
                cWarengruppe = ""
                
                Select Case Left(cAgn, 2)
                    Case "09", "13", "15", "16", "21", "26", "27", "28", "31", "32", "33", "34", "35", "36"
                        cWarengruppe = "Lebensmittel"
                    Case "29", "68"
                        cWarengruppe = "Babynahrung/-bedarf"
                    Case "18", "72"
                        cWarengruppe = "Gartenbedarf"
                    Case "30", "53", "54", "56", "57", "58", "59", "61", "62", "74", "75", "76", "77", "82"
                        cWarengruppe = "Drogeriewaren"
                    Case "38", "39", "40", "64"
                        cWarengruppe = "Süßwaren, Chips"
                    Case "42", "43", "44", "45", "46", "47", "48"
                        cWarengruppe = "Getränke"
                    Case "49", "50", "51"
                        cWarengruppe = "Kaffee/Tee/Kakao/Tabak"
                    Case "65"
                        cWarengruppe = "Tiernahrung/-bedarf"
                    Case "95", "96", "98", "99"
                        cWarengruppe = "Sonstiges"
                    Case Else
                        cWarengruppe = "unbekannt"
                
                End Select
                
                rsrs!MARKE = cWarengruppe
                
                rsrs!LPZ = 1
                rsrs!linr = "400001"
                rsrs!RKZ = "N"
                rsrs!GEFUEHRT = "J"
                
                
                rsagn.Update
                rsrs.Update
                
            Loop While lLenfil >= lPos
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
        rsagn.Close: Set rsagn = Nothing
        
        '****************
        
        '****************
        'hier Reweagn's auf neue prüfen
        
        loeschNEW "REWE_AGN_DIS", gdApp
        
        sSQL = "Select ragn as agn, ragtext as agtext into REWE_AGN_DIS from REWE_AGN group by ragn,ragtext "
        gdApp.Execute sSQL, dbFailOnError
        
        loeschNEW "REWE_AGN", gdApp
        
        loeschNEW "REWE_AGN_DIS", gdBase
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "REWE_AGN_DIS"
        
        sSQL = "Delete from REWE_AGN_DIS where REWE_AGN_DIS.agn in (Select agn from agndbf)"
        gdBase.Execute sSQL, dbFailOnError
        
        sSQL = "Insert into agndbf select agn,agtext from REWE_AGN_DIS"
        gdBase.Execute sSQL, dbFailOnError
        
        loeschNEW "REWE_AGN_DIS", gdBase
        
        'Ende hier Reweagn's auf neue prüfen
        
        
        
'        Kill sREWEpfad & "\" & sDat
    
        anzeige "normal", "EAN Duplikate werden entfernt...", Label3
'        Pause (3)
        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        
        ErmittlungMeisterDuplisPlusDel_09
        
        sSQL = "Delete from Meister where LEKPR = 0 "
        gdApp.Execute sSQL, dbFailOnError
        
        anzeige "normal", "Die Artikeldaten werden überprüft...", Label3
        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Sortimentsübersicht wird erstellt...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loeschNEW "Importpri", gdBase
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"
        
        pbrStatus.Value = 80

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError
        
        frmWKL184.Show 1
        
        Me.Refresh
        
        If DatendrinSQL("Select * from Rewewgr where aktgew = true", gdBase) = False Then
            anzeige "Rot", "Abbruch durch Benutzer - keine Sortimente ausgewählt", Label3
            Exit Function
        End If
        
        pbrStatus.Value = 10
        loeschNEW "IMPOTTEMP", gdBase
        
        sSQL = "Select * into IMPOTTEMP from IMPORTPRI "
        gdBase.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 15
    
        loeschNEW "Importpri", gdBase
        
        anzeige "normal", "Die Sortimentsartikel werden verarbeitet...", Label3
        
        sSQL = "Select * into IMPORTPRI from IMPOTTEMP where marke in (Select rewewgrtext from rewewgr where aktgew = true) "
        gdBase.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 20
        
        sSQL = "Update IMPORTPRI set marke ='' "
        gdBase.Execute sSQL, dbFailOnError
        
        
        
        
'        'hier zwischen ARTEAN_K füllen
'        loeschNEW "artean_REWE", gdBase
'
'        sSQL = "Select IMPORTPRI.libesnr, IMPORTPRI.ean, 0 as Artnr into artean_REWE from IMPORTPRI "
'        sSQL = sSQL & " where val(ean) > 0 "
'        gdBase.Execute sSQL, dbFailOnError
'
'        sSQL = "Insert into artean_REWE Select IMPORTPRI.libesnr, IMPORTPRI.ean2 as ean, 0 as Artnr from IMPORTPRI "
'        sSQL = sSQL & " where val(ean2) > 0 "
'        gdBase.Execute sSQL, dbFailOnError
'        'ende hier zwischen ARTEAN_K füllen
        
        
        
        
        
        
        pbrStatus.Value = 25
        
        loeschNEW "IMPOTTEMP", gdBase
        
        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 65

        REWEStep3 = True
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "REWEStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
'        Resume Next
    End If
    
End Function
Private Function SIEStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR
    

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long
        Dim i       As Integer
       
    
        SIEStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        
        loeschNEW "REWE_AGN", gdApp
        CreateTableT2 "REWE_AGN", gdApp
        
        loeschNEW "EANZWEITE", gdApp
        CreateTableT2 "EANZWEITE", gdApp
        
        
        
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        
        loeschNEW "meister", gdApp
'        loeschNEW "meister", gdapp
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        sSQL = "Create Index libesnr on meister (libesnr)"
        gdApp.Execute sSQL, dbFailOnError
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda
        
        oldpath = sSIEpfad & "\" & sdat
        newpath1 = cPfad1 & "Stammda\SIE\" & sdat
        lRet = CopyFile(oldpath, newpath1, lfail)
    
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        Dim lAnzSatz As Long
        Dim lAktSatz As Long
        Dim dEkpr As Double
        Dim dVkPr As Double
        Dim DSatz As Datensatz
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim lPos As Long
        Dim cEinzelsatz As String
        
        Dim lLinr As Long
        Dim lfnr1 As Long
        Dim ilen As Integer
        Dim cNumstring As String
        
        Dim cBezeich As String
        
        Dim rsagn As Recordset
        Dim cLibesnrMerk As String
        Dim cEANMerk As String
        Dim dVPEMerk As Double
        
        
        Dim lPosEnde As Long
        
        Dim lLenfil As Long
        Dim lposSemi As Long
        Dim lposSemiEnde As Long
        Dim cWert As String
        Dim cArtbez_1 As String
        Dim cArtbez_2 As String
        Dim cInhalt As String
        Dim cInhaltBez As String
        Dim cInhaltsangabegesamt As String
        Dim cAgn As String
        Dim cAGNBEZEICH As String
        Dim cWarengruppe As String
        
        Dim cLEKPR As String
        
        lfnr1 = 0
        
        lPos = 1
        lPosEnde = 1
        lposSemiEnde = 1
        
        
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")
        Set rsagn = gdApp.OpenRecordset("REWE_AGN")
        
        
        iFileNr = FreeFile
        Open sSIEpfad & "\" & sdat For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
            
            
        
    
            lLenfil = Len(cSatz1)
            
            lPosEnde = InStr(lPos, cSatz1, vbCrLf)
            lPos = lPos + lPosEnde - lPos + 2 'Kopfzeile überspringen
            
            
            If Mid(cSatz1, 4, 1) = "#" Then
            
               
                
                lPosEnde = InStr(lPos, cSatz1, vbCrLf)
                lPos = lPos + lPosEnde - lPos + 2 'Kopfzeile überspringen und noch eine
            
                
            End If
            
            
            
            
            
            Do
                lPosEnde = InStr(lPos, cSatz1, vbCrLf)
                
                cEinzelsatz = Mid(cSatz1, lPos, lPosEnde - lPos)
                
                
                
                If Left(cEinzelsatz, 1) = Chr(34) Then
                    cEinzelsatz = SwapStr(cEinzelsatz, Chr(34), "")
                End If
                
                lPos = lPos + lPosEnde - lPos + 2
                
                lposSemi = 1
                
                
                
                'nix
                cWert = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                'nix
                cWert = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                'Libesnr
                cWert = ""
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                
                cLibesnrMerk = cWert
                
                'gibt es diese libesnr schon in MEISTER
                If DatendrinSQL("Select * from meister where libesnr = '" & cLibesnrMerk & "'", gdApp) = True Then
                
                Else
                
                    cLibesnrMerk = ""
                    rsrs.AddNew
                    rsagn.AddNew
                    lfnr1 = lfnr1 + 1
                End If
                
                If cLibesnrMerk <> "" Then
                
                    'Einh = Minmen
                    cWert = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    If cWert = "" Then cWert = "1"
                    
                    dVPEMerk = CDbl(cWert)
                    
                    'ohne Bedeutung
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                    'EAN
                    cWert = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    cEANMerk = cWert
                
                End If
                
                
                If cLibesnrMerk = "" Then
                
                    rsrs!lfnr = lfnr1
                    rsrs!LIBESNR = cWert
                    
                    'Einh = Minmen
                    cWert = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    If cWert = "" Then cWert = "1"
                    
                    
                    rsrs!MINMEN = cWert
                    
                    'ohne Bedeutung
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                    'EAN
                    cWert = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    rsrs!EAN = cWert
                    
                    'ohne Bedeutung
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    'ohne Bedeutung
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    'ohne Bedeutung
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    
                    
                    'Liefname = Notizen
                    cWert = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    rsrs!NOTIZEN = cWert
                    
                    'WGRU = AGN
                    cWert = ""
                    cAgn = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    If cWert = "" Then cWert = "1"
                    
                    cAgn = cWert
                    rsrs!AGN = CLng(cAgn)
                    rsagn!RAGN = CLng(cAgn)
                    
                    'WGRU_BEZ
                    cWert = ""
                    cAGNBEZEICH = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    cAGNBEZEICH = Left(cWert, 30)
                    cAGNBEZEICH = SwapStr(cAGNBEZEICH, "½", "Ä")
                    cAGNBEZEICH = SwapStr(cAGNBEZEICH, "!", "Ü")
                    cAGNBEZEICH = SwapStr(cAGNBEZEICH, "\", "Ö")
                    rsagn!RAGTEXT = cAGNBEZEICH
                    
                    
                    'Artbez_2
                    cWert = ""
                    cArtbez_2 = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    cArtbez_2 = cWert
                    
                    'Artbez_1
                    cWert = ""
                    cArtbez_1 = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    cArtbez_1 = cWert
                
                    'ME_TEXT ohne Bedeutung
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    
                    'Inhalt
                    cWert = ""
                    cInhalt = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    cInhalt = Trim(cWert)
                    
    '                'neu 21.04.15
    '                If cInhalt <> "" Then
    '                    cInhalt = SwapStr(cInhalt, ",", "")
    '                    cInhalt = CStr(CLng(cInhalt) / 10000)
    '                    cInhalt = Format(cInhalt, "####0.00")
    '
    '                    If Right(cInhalt, 3) = ",00" Then
    '                        cInhalt = Left(cInhalt, Len(cInhalt) - 3)
    '                    End If
    '
    '                    If Right(cInhalt, 2) = ",0" Then
    '                        cInhalt = Left(cInhalt, Len(cInhalt) - 2)
    '                    End If
    '
    '                    If Right(cInhalt, 1) = "0" And InStr(1, cInhalt, ",") > 0 Then
    '                        cInhalt = Left(cInhalt, Len(cInhalt) - 1)
    '                    End If
    '                End If
    '                'ende neu 21.04.15
                    
                    If cInhalt <> "" Then
                        If cInhalt = "0" Then
                            cInhalt = ""
                        Else
                            rsrs!INHALT = cInhalt
                        End If
                    End If
                    
                    'Einheit des Inhalts
                    cWert = ""
                    cInhaltBez = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    cInhaltBez = Trim(cWert)
                    rsrs!INHALTBEZ = cInhaltBez
                    
                    'EK = EKPR
                    cWert = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    cWert = Trim(SwapStr(cWert, "", ""))
                    If IsNumeric(cWert) Then
                        rsrs!lekpr = cWert
                    Else
                        rsrs!lekpr = 0
                    End If
                    
                    
                    'ohne Bedeutung
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    'ohne Bedeutung
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    'ohne Bedeutung
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    
                    
                    
                    'UVP = VKPR
                    cWert = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    cWert = Trim(SwapStr(cWert, "", ""))
                    If IsNumeric(cWert) Then
                        rsrs!vkpr = cWert
    '                    rsrs!vkpr = rsrs!vkpr / 100
                    Else
                        rsrs!vkpr = 0
                    End If
                    
                    'ohne Bedeutung
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    'ohne Bedeutung
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
                    
                    
                    'MWST
                    cWert = ""
                    lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                    cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                    lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                    
'                    If cWert <> "" Then
'                        If cWert = "Voll" Then
'                            rsrs!MWST = "V"
'                        ElseIf cWert = "Red" Then
'                            rsrs!MWST = "E"
'                        End If
'                    End If
                    
                    If cWert <> "" Then
                        If cWert = "1" Then
                            rsrs!MWST = "V"
                        ElseIf cWert = "2" Then
                            rsrs!MWST = "E"
                        End If
                    End If
    
                    rsrs!EAN2 = ""
                    rsrs!EAN3 = ""
                    
                    rsrs!GRUNDPREIS = "J"
                    
                    'Bezeichnung aufbauen
                    
                    cArtbez_2 = Trim(cArtbez_2)
                    cArtbez_2 = SwapStr(cArtbez_2, "  ", " ")
                    
                    If Trim(cArtbez_2) <> "" Then
                        If Len(cArtbez_2) >= 8 Then
                            cArtbez_2 = Left(cArtbez_2, 8)
                        End If
                    End If
                    
                    cBezeich = ""
                    
                    'neu
                    If Trim(cArtbez_2) <> "" Then
                        cBezeich = Trim(cArtbez_2)
                    End If
                    
                    
                    cArtbez_1 = Trim(cArtbez_1)
                    cArtbez_1 = SwapStr(cArtbez_1, "  ", " ")
                    
                    
                    cInhalt = Trim(cInhalt)
                    cInhaltBez = Trim(cInhaltBez)
                    
                    cInhaltsangabegesamt = cInhalt & cInhaltBez
                    
                    If cArtbez_1 <> "" Then
                        If cInhaltsangabegesamt <> "" Then
                            
                            cBezeich = cBezeich & " " & cArtbez_1
                            cBezeich = Left(cBezeich, 34 - Len(cInhaltsangabegesamt))
                            cBezeich = cBezeich & " " & cInhaltsangabegesamt
                            
                        Else
                            cBezeich = cBezeich & " " & cArtbez_1
                            cBezeich = Left(cBezeich, 35)
                        End If
                        
                    End If
                    
                    rsrs!BEZEICH = cBezeich
                    
                    cWarengruppe = ""
                    
                    Select Case Left(cAgn, 2)
                        Case "09", "13", "15", "16", "21", "26", "27", "28", "31", "32", "33", "34", "35", "36"
                            cWarengruppe = "Lebensmittel"
                        Case "29", "68"
                            cWarengruppe = "Babynahrung/-bedarf"
                        Case "18", "72"
                            cWarengruppe = "Gartenbedarf"
                        Case "30", "53", "54", "56", "57", "58", "59", "61", "62", "74", "75", "76", "77", "82"
                            cWarengruppe = "Drogeriewaren"
                        Case "38", "39", "40", "64"
                            cWarengruppe = "Süßwaren, Chips"
                        Case "42", "43", "44", "45", "46", "47", "48"
                            cWarengruppe = "Getränke"
                        Case "49", "50", "51"
                            cWarengruppe = "Kaffee/Tee/Kakao/Tabak"
                        Case "65"
                            cWarengruppe = "Tiernahrung/-bedarf"
                        Case "95", "96", "98", "99"
                            cWarengruppe = "Sonstiges"
                        Case Else
                            cWarengruppe = "unbekannt"
                    
                    End Select
                    
                    rsrs!MARKE = cWarengruppe
                    
                    rsrs!LPZ = 1
                    rsrs!linr = "400001"
                    rsrs!RKZ = "N"
                    rsrs!GEFUEHRT = "J"
                End If
                
                If cLibesnrMerk <> "" Then
                    sSQL = "Insert into EANZWEITE (Libesnr,ean,VPE) values ('" & cLibesnrMerk & "','" & cEANMerk & "'," & dVPEMerk & ") "
                    gdApp.Execute sSQL, dbFailOnError
                Else
                    rsagn.Update
                    rsrs.Update
                End If
                
            Loop While lLenfil >= lPos
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
        rsagn.Close: Set rsagn = Nothing
        
        
        
        
        sSQL = "Delete from Meister where libesnr = '' "
        gdApp.Execute sSQL, dbFailOnError
        
        
        
        
        
        
        loeschNEW "EANZWEITE_DIS", gdApp
        sSQL = "Select EANZWEITE.libesnr, Min(EANZWEITE.vpe) as MINMEN into EANZWEITE_DIS from EANZWEITE group by EANZWEITE.libesnr"
        gdApp.Execute sSQL, dbFailOnError
        
        
        sSQL = "Update Meister inner join EANZWEITE_DIS on Meister.libesnr = EANZWEITE_DIS.libesnr "
        sSQL = sSQL & " set Meister.MINMEN = EANZWEITE_DIS.MINMEN "
        sSQL = sSQL & " where EANZWEITE_DIS.MINMEN < Meister.MINMEN  "
        gdApp.Execute sSQL, dbFailOnError
        
        
        
        
        'hier zwischen ARTEAN_K füllen
        loeschNEW "artean_SIE", gdApp
        
        sSQL = "Select EANZWEITE.libesnr, EANZWEITE.ean, 0 as Artnr into artean_SIE from EANZWEITE"
        gdApp.Execute sSQL, dbFailOnError
        
        loesch "artean_SIE"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "artean_SIE"
        'ende hier zwischen ARTEAN_K füllen
        
        
        
        
        
        
        
        
        
        '****************
        
        '****************
        'hier Reweagn's auf neue prüfen
        
        loeschNEW "REWE_AGN_DIS", gdApp
        
        sSQL = "Select ragn as agn, ragtext as agtext into REWE_AGN_DIS from REWE_AGN group by ragn,ragtext "
        gdApp.Execute sSQL, dbFailOnError
        
        loeschNEW "REWE_AGN", gdApp
        
        loeschNEW "REWE_AGN_DIS", gdBase
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "REWE_AGN_DIS"
        
        sSQL = "Delete from REWE_AGN_DIS where REWE_AGN_DIS.agn in (Select agn from agndbf)"
        gdBase.Execute sSQL, dbFailOnError
        
        sSQL = "Insert into agndbf select agn,agtext from REWE_AGN_DIS"
        gdBase.Execute sSQL, dbFailOnError
        
        loeschNEW "REWE_AGN_DIS", gdBase
        
        'Ende hier Reweagn's auf neue prüfen
        
        
        
'        Kill sREWEpfad & "\" & sDat
    
        anzeige "normal", "EAN Duplikate werden entfernt...", Label3
'        Pause (3)
        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        
        ErmittlungMeisterDuplisPlusDel_09
        
        sSQL = "Delete from Meister where LEKPR = 0 "
        gdApp.Execute sSQL, dbFailOnError
        
        anzeige "normal", "Die Artikeldaten werden überprüft...", Label3
        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Sortimentsübersicht wird erstellt...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loeschNEW "Importpri", gdBase
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"
        
        pbrStatus.Value = 80

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError
        
        frmWKL184.Show 1
        
        Me.Refresh
        
        If DatendrinSQL("Select * from Rewewgr where aktgew = true", gdBase) = False Then
            anzeige "Rot", "Abbruch durch Benutzer - keine Sortimente ausgewählt", Label3
            Exit Function
        End If
        
        pbrStatus.Value = 10
        loeschNEW "IMPOTTEMP", gdBase
        
        sSQL = "Select * into IMPOTTEMP from IMPORTPRI "
        gdBase.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 15
    
        loeschNEW "Importpri", gdBase
        
        anzeige "normal", "Die Sortimentsartikel werden verarbeitet...", Label3
        
        sSQL = "Select * into IMPORTPRI from IMPOTTEMP where marke in (Select rewewgrtext from rewewgr where aktgew = true) "
        gdBase.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 20
        
        sSQL = "Update IMPORTPRI set marke ='' "
        gdBase.Execute sSQL, dbFailOnError
        
        
        
        
        
        
        
        
        
        pbrStatus.Value = 25
        
        loeschNEW "IMPOTTEMP", gdBase
        
        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError
        
        pbrStatus.Value = 65

        SIEStep3 = True
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "SIEStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
        Resume Next
    End If
    
End Function
Private Sub FuelleReweAgn()
    On Error GoTo LOKAL_ERROR

    Dim sSQL As String
    Dim lRAGN(3000) As Long
    Dim sRText(3000) As String
    Dim i As Integer
    Dim j As Integer
    
    i = -1
    
    i = i + 1: lRAGN(i) = 100: sRText(i) = "FRISCHFLEISCH"
    i = i + 1: lRAGN(i) = 110: sRText(i) = "FRISCHFLEISCH BEDIENUNG - BED."
    i = i + 1: lRAGN(i) = 111: sRText(i) = "RINDFLEISCH - BED."
    i = i + 1: lRAGN(i) = 112: sRText(i) = "SCHWEINEFLEISCH - BED."
    i = i + 1: lRAGN(i) = 113: sRText(i) = "PRODUKTE NACH HVO - BED."
    i = i + 1: lRAGN(i) = 114: sRText(i) = "KALBFLEISCH - BED."
    i = i + 1: lRAGN(i) = 115: sRText(i) = "LAMMFLEISCH- BED."
    i = i + 1: lRAGN(i) = 116: sRText(i) = "SAISONWARE - BED."
    i = i + 1: lRAGN(i) = 117: sRText(i) = "WILD - BED."
    i = i + 1: lRAGN(i) = 118: sRText(i) = "KASSELER - BED."
    i = i + 1: lRAGN(i) = 119: sRText(i) = "BIO-SORTIMENT - BED."
    i = i + 1: lRAGN(i) = 120: sRText(i) = "FRISCHFLEISCH SERVICE - SB"
    i = i + 1: lRAGN(i) = 121: sRText(i) = "RINDFLEISCH SERVICE - SB"
    i = i + 1: lRAGN(i) = 122: sRText(i) = "SCHWEINEFLEISCH SERVICE - SB"
    i = i + 1: lRAGN(i) = 123: sRText(i) = "PRODUKTE NACH HVO SERVICE - SB"
    i = i + 1: lRAGN(i) = 124: sRText(i) = "KALBFLEISCH SERVICE - SB"
    i = i + 1: lRAGN(i) = 125: sRText(i) = "LAMMFLEISCH SERVICE - SB"
    i = i + 1: lRAGN(i) = 126: sRText(i) = "SAISONWARE SERVICE - SB"
    i = i + 1: lRAGN(i) = 127: sRText(i) = "WILD SERVICE - SB"
    i = i + 1: lRAGN(i) = 128: sRText(i) = "KASSELER SERVICE - SB"
    i = i + 1: lRAGN(i) = 129: sRText(i) = "BIO-SORTIMENT SERVICE - SB"
    i = i + 1: lRAGN(i) = 130: sRText(i) = "TIEFKÜHLFLEISCH SERV.-SB(HA30)"
    i = i + 1: lRAGN(i) = 131: sRText(i) = "RINDFLEISCH - TK SERVICE -SB"
    i = i + 1: lRAGN(i) = 132: sRText(i) = "SCHWEINEFLEISCH -TK SERVICE-SB"
    i = i + 1: lRAGN(i) = 133: sRText(i) = "PRODUKT NACH HVO-TK SERVICE-SB"
    i = i + 1: lRAGN(i) = 134: sRText(i) = "KALBFLEISCH-TK SERVICE-SB"
    i = i + 1: lRAGN(i) = 135: sRText(i) = "LAMMFLEISCH-TK SERVICE -SB"
    i = i + 1: lRAGN(i) = 136: sRText(i) = "SAISONWARE-TK SERVICE -SB"
    i = i + 1: lRAGN(i) = 137: sRText(i) = "WILD-TK SERVICE-SB"
    i = i + 1: lRAGN(i) = 138: sRText(i) = "BIO-SORTIMENT-TK-SERVICE-SB"
    i = i + 1: lRAGN(i) = 150: sRText(i) = "SAMMELGRUPPE FLEISCH - BED/SB"
    i = i + 1: lRAGN(i) = 152: sRText(i) = "SAMMELGR.FLEISCH SERVICE-SB"
    i = i + 1: lRAGN(i) = 210: sRText(i) = "RINDFLEISCH - SB -"
    i = i + 1: lRAGN(i) = 220: sRText(i) = "SCHWEINEFLEISCH - SB -"
    i = i + 1: lRAGN(i) = 230: sRText(i) = "KALBFLEISCH - SB -"
    i = i + 1: lRAGN(i) = 240: sRText(i) = "LAMMFLEISCH - SB -"
    i = i + 1: lRAGN(i) = 320: sRText(i) = "INNEREIEN - SB -"
    i = i + 1: lRAGN(i) = 400: sRText(i) = "FLEISCH-SPEZIALITAET./VEREDELU"
    i = i + 1: lRAGN(i) = 410: sRText(i) = "FLEISCH-SPEZIALITAETEN  E-MWST"
    i = i + 1: lRAGN(i) = 412: sRText(i) = "VEREDELUNGSPRODUKTE"
    i = i + 1: lRAGN(i) = 413: sRText(i) = "HILFSSTOFFE ZUR VEREDELUNG"
    i = i + 1: lRAGN(i) = 420: sRText(i) = "FL.VEREDELUNGSP.HILFSST.V-MWST"
    i = i + 1: lRAGN(i) = 421: sRText(i) = "FL.VEREDELUNGSP.HILFSST.V-MWST"
    i = i + 1: lRAGN(i) = 500: sRText(i) = "GEFLUEGEL"
    i = i + 1: lRAGN(i) = 510: sRText(i) = "HAEHNCHEN - BED. -"
    i = i + 1: lRAGN(i) = 511: sRText(i) = "HAEHNCHEN - BED. -"
    i = i + 1: lRAGN(i) = 512: sRText(i) = "PUTEN - BED."
    i = i + 1: lRAGN(i) = 513: sRText(i) = "GEFLÜGELSAISON-BED."
    i = i + 1: lRAGN(i) = 514: sRText(i) = "BIO-GEFLÜGEL-BED."
    i = i + 1: lRAGN(i) = 520: sRText(i) = "GEFLÜGEL SERVICE - SB"
    i = i + 1: lRAGN(i) = 521: sRText(i) = "HÄHNCHEN SERVICE -SB"
    i = i + 1: lRAGN(i) = 522: sRText(i) = "PUTEN SERVICE-SB"
    i = i + 1: lRAGN(i) = 523: sRText(i) = "GEFLÜGELSAISON SERVICE-SB"
    i = i + 1: lRAGN(i) = 524: sRText(i) = "BIO-GEFLÜGEL SERVICE-SB"
    i = i + 1: lRAGN(i) = 560: sRText(i) = "SPEZIALITÄT GEFLÜGEL-BD"
    i = i + 1: lRAGN(i) = 570: sRText(i) = "WILD - BED. -"
    i = i + 1: lRAGN(i) = 590: sRText(i) = "FIXTASTE GEFLÜGEL BED."
    i = i + 1: lRAGN(i) = 700: sRText(i) = "FISCH U. MEERESFRUECHTE - BED."
    i = i + 1: lRAGN(i) = 710: sRText(i) = "LEBENDFISCH - BED. -"
    i = i + 1: lRAGN(i) = 711: sRText(i) = "FRISCHFISCH/LEBENDFISCH - BED."
    i = i + 1: lRAGN(i) = 712: sRText(i) = "PRE PACK FRISCHFISCH"
    i = i + 1: lRAGN(i) = 720: sRText(i) = "FRISCHFISCH - BED. -"
    i = i + 1: lRAGN(i) = 721: sRText(i) = "FISCH - TK SERVICE BED."
    i = i + 1: lRAGN(i) = 730: sRText(i) = "RAEUCHERFISCH LOSE/PRE PACK BD"
    i = i + 1: lRAGN(i) = 731: sRText(i) = "RAEUCHERFISCH LOSE - BED. -"
    i = i + 1: lRAGN(i) = 732: sRText(i) = "RÄUCHERFISCH PRE PACK"
    i = i + 1: lRAGN(i) = 740: sRText(i) = "MEERESFRUECHTE - BED. -"
    i = i + 1: lRAGN(i) = 741: sRText(i) = "MEERESFRUECHTE - BED. -"
    i = i + 1: lRAGN(i) = 750: sRText(i) = "MARINADEN - BED. -"
    i = i + 1: lRAGN(i) = 751: sRText(i) = "MARINADEN - BED. -"
    i = i + 1: lRAGN(i) = 760: sRText(i) = "FISCHSPEZIALITAETEN - BED. -"
    i = i + 1: lRAGN(i) = 761: sRText(i) = "FISCHSPEZIALITAETEN - BED. -"
    i = i + 1: lRAGN(i) = 770: sRText(i) = "SAMMELGR.FISCH U. MEERESFR.-BE"
    i = i + 1: lRAGN(i) = 771: sRText(i) = "SAMMELGR.FISCH U. MEERESFR.-BE"
    i = i + 1: lRAGN(i) = 780: sRText(i) = "FISCHSPEZIALITAETEN V-MWST -BE"
    i = i + 1: lRAGN(i) = 781: sRText(i) = "FISCHSPEZIALITAETEN V-MWST -BE"
    i = i + 1: lRAGN(i) = 790: sRText(i) = "FIXTASTE FISCH/FEINKOST"
    i = i + 1: lRAGN(i) = 800: sRText(i) = "FLEISCH CONV./WURST/SCHINK/BED"
    i = i + 1: lRAGN(i) = 810: sRText(i) = "BRUEHWURST - BED. -"
    i = i + 1: lRAGN(i) = 811: sRText(i) = "BRUEHWURST - BED. -"
    i = i + 1: lRAGN(i) = 812: sRText(i) = "BRUEHWURST SCHNELLE BEDIENUNG"
    i = i + 1: lRAGN(i) = 820: sRText(i) = "BRATWURST - BED. -"
    i = i + 1: lRAGN(i) = 821: sRText(i) = "BRATWURST - BED. -"
    i = i + 1: lRAGN(i) = 822: sRText(i) = "BRATWURST - SCHNELLE BEDIENUNG"
    i = i + 1: lRAGN(i) = 830: sRText(i) = "KOCHWURST - BED. -"
    i = i + 1: lRAGN(i) = 831: sRText(i) = "KOCHWURST - BED. -"
    i = i + 1: lRAGN(i) = 832: sRText(i) = "KOCHWURST - SCHNELLE BEDIENUNG"
    i = i + 1: lRAGN(i) = 840: sRText(i) = "ROH-/DAUERWURST - BED. -"
    i = i + 1: lRAGN(i) = 841: sRText(i) = "ROH-/DAUERWURST - BED. -"
    i = i + 1: lRAGN(i) = 842: sRText(i) = "ROH-/DAUERWURST - SCHNELLE BED"
    i = i + 1: lRAGN(i) = 843: sRText(i) = "ROHWURST STREICHFÄHIG - BED."
    i = i + 1: lRAGN(i) = 850: sRText(i) = "KOCHSCHINKEN - BED. -"
    i = i + 1: lRAGN(i) = 851: sRText(i) = "KOCHSCHINKEN - BED. -"
    i = i + 1: lRAGN(i) = 852: sRText(i) = "KOCHSCHINKEN - SCHNELLE BEDIEN"
    i = i + 1: lRAGN(i) = 860: sRText(i) = "ROHER SCHINKEN - BED. -"
    i = i + 1: lRAGN(i) = 861: sRText(i) = "ROHER SCHINKEN - BED. -"
    i = i + 1: lRAGN(i) = 862: sRText(i) = "ROHER SCHINKEN - SCHNELLE BEDI"
    i = i + 1: lRAGN(i) = 870: sRText(i) = "FLEISCH CONVENIENCE - BED. -"
    i = i + 1: lRAGN(i) = 871: sRText(i) = "FLEISCH CONVENIENCE - BED. -"
    i = i + 1: lRAGN(i) = 872: sRText(i) = "FLEISCH CONV. - SCHNELLE BEDIE"
    i = i + 1: lRAGN(i) = 880: sRText(i) = "ASPIKARTIKELi = i + 1: lRAGN(i) =SUELZEN - BED. -"
    i = i + 1: lRAGN(i) = 881: sRText(i) = "ASPIKARTIKELi = i + 1: lRAGN(i) = SUELZEN - BED. -"
    i = i + 1: lRAGN(i) = 882: sRText(i) = "ASPIKARTIKELi = i + 1: lRAGN(i) =SUELZE - SCHN.BED"
    i = i + 1: lRAGN(i) = 890: sRText(i) = "SAMMELGRUPPE WURST+SCHINKEN-BE"
    i = i + 1: lRAGN(i) = 891: sRText(i) = "SAMMELGRUPPE WURST+SCHINKEN-BE"
    i = i + 1: lRAGN(i) = 900: sRText(i) = "FLEISCH CONVEN./WURST/SCHINK/"
    i = i + 1: lRAGN(i) = 910: sRText(i) = "BAUCH- U. RUECKENSPECK - SB -"
    i = i + 1: lRAGN(i) = 911: sRText(i) = "BAUCH-U.RUECKENSPECK -SB-KUEHL"
    i = i + 1: lRAGN(i) = 912: sRText(i) = "BAUCH-U.RUECKENSPECK SB N.KUE"
    i = i + 1: lRAGN(i) = 920: sRText(i) = "BRUEH-/BRATWURST -SB -"
    i = i + 1: lRAGN(i) = 921: sRText(i) = "BRUEHWURST KUEHLBED.-SB"
    i = i + 1: lRAGN(i) = 922: sRText(i) = "BRUEHWURST NICHT KÜHLBED.-SB"
    i = i + 1: lRAGN(i) = 930: sRText(i) = "KOCHWURST - SB -"
    i = i + 1: lRAGN(i) = 931: sRText(i) = "KOCHWURST - SB -KUEHLBED."
    i = i + 1: lRAGN(i) = 932: sRText(i) = "KOCHWURST SB NICHT KUEHLBEDUER"
    i = i + 1: lRAGN(i) = 940: sRText(i) = "ROH-/DAUERWURST - SB -"
    i = i + 1: lRAGN(i) = 941: sRText(i) = "ROH-/DAUERWURST -SB- KUEHLBED."
    i = i + 1: lRAGN(i) = 942: sRText(i) = "ROH/DAUERWURST SB NICHT KUEHLB"
    i = i + 1: lRAGN(i) = 950: sRText(i) = "KOCHSCHI./GEG.POEKELPROD.-SB-"
    i = i + 1: lRAGN(i) = 951: sRText(i) = "KOCHSCH./GEG.POEKELPR.KUEHL-SB"
    i = i + 1: lRAGN(i) = 952: sRText(i) = "KOCHSCH./GEG.POEKELPR.N.K.-SB-"
    i = i + 1: lRAGN(i) = 960: sRText(i) = "ROHER SCHINKEN - SB -"
    i = i + 1: lRAGN(i) = 961: sRText(i) = "ROHER SCHINKEN -SB- KUEHLBED."
    i = i + 1: lRAGN(i) = 962: sRText(i) = "ROHER SCHINKEN SB NICHT KUEHLB"
    i = i + 1: lRAGN(i) = 970: sRText(i) = "FLEISCH CONVENIENCE - SB -"
    i = i + 1: lRAGN(i) = 971: sRText(i) = "FLEISCH CONVENIENCE -SB-KUEHLB"
    i = i + 1: lRAGN(i) = 972: sRText(i) = "FLEISCH CONVENIENCE SB N.KUEHL"
    i = i + 1: lRAGN(i) = 980: sRText(i) = "ASPIKARTIKELi = i + 1: lRAGN(i) = SUELZEN - SB -"
    i = i + 1: lRAGN(i) = 981: sRText(i) = "ASPIKARTIKELi = i + 1: lRAGN(i) = SUELZEN - SB -"
    i = i + 1: lRAGN(i) = 990: sRText(i) = "BRATWURST KÜHLBEDÜRFTIG SB"
    i = i + 1: lRAGN(i) = 991: sRText(i) = "BRATWURST KÜHLBEDÜRFTIG SB"
    i = i + 1: lRAGN(i) = 1000: sRText(i) = "KAESE - BED. -"
    i = i + 1: lRAGN(i) = 1010: sRText(i) = "SCHNITTKAESE/PRE PACK -BED"
    i = i + 1: lRAGN(i) = 1011: sRText(i) = "SCHNITTKAESE(+HALBFESTER) -BED"
    i = i + 1: lRAGN(i) = 1012: sRText(i) = "PRE PACK SCHNITTKAESE BED"
    i = i + 1: lRAGN(i) = 1030: sRText(i) = "HARTKAESE(+REIBK/PARMESAN-BED-"
    i = i + 1: lRAGN(i) = 1031: sRText(i) = "HARTKAESE+REIBK/PARMESAN -BED."
    i = i + 1: lRAGN(i) = 1032: sRText(i) = "PRE PACK HARTKAESE BED"
    i = i + 1: lRAGN(i) = 1040: sRText(i) = "WEICHKAESE - BED."
    i = i + 1: lRAGN(i) = 1041: sRText(i) = "WEICHKAESE - BED. -"
    i = i + 1: lRAGN(i) = 1042: sRText(i) = "PRE PACK WEICHKAESE BED"
    i = i + 1: lRAGN(i) = 1050: sRText(i) = "FRISCHKAESE - BED. -"
    i = i + 1: lRAGN(i) = 1051: sRText(i) = "FRISCHKAESE - BED. -"
    i = i + 1: lRAGN(i) = 1052: sRText(i) = "PRE PACK FRISCHKAESE BED"
    i = i + 1: lRAGN(i) = 1060: sRText(i) = "SAUERMILCHKAESE - BED. -"
    i = i + 1: lRAGN(i) = 1061: sRText(i) = "SAUERMILCHKAESE - BED. -"
    i = i + 1: lRAGN(i) = 1062: sRText(i) = "PRE PACK SAUERMILCHKAESE"
    i = i + 1: lRAGN(i) = 1070: sRText(i) = "SCHMELZKAESE - BED. -"
    i = i + 1: lRAGN(i) = 1071: sRText(i) = "SCHMELZKAESE - BED. -"
    i = i + 1: lRAGN(i) = 1072: sRText(i) = "PRE PACK SCHMELZKAESE BED"
    i = i + 1: lRAGN(i) = 1080: sRText(i) = "MILCHMISCHERZEUG./PRE PACK BED"
    i = i + 1: lRAGN(i) = 1081: sRText(i) = "MILCHMISCHERZEUGNISSE-BED."
    i = i + 1: lRAGN(i) = 1082: sRText(i) = "PRE PACK MILCHMISCHERZEUG.-BED"
    i = i + 1: lRAGN(i) = 1090: sRText(i) = "SAMMELGRUPPE KAESE -BED.-"
    i = i + 1: lRAGN(i) = 1091: sRText(i) = "KAESE -BED.-SAMMELGRUPPE"
    i = i + 1: lRAGN(i) = 1092: sRText(i) = "KAESE CONVIENENCE"
    i = i + 1: lRAGN(i) = 1093: sRText(i) = "LEBENSM.EIGENER ART BED (KÄSE)"
    i = i + 1: lRAGN(i) = 1100: sRText(i) = "KAESE - SB -"
    i = i + 1: lRAGN(i) = 1110: sRText(i) = "NATURKAESE - SB -"
    i = i + 1: lRAGN(i) = 1111: sRText(i) = "NATURKAESE SCHEIBEN - SB -"
    i = i + 1: lRAGN(i) = 1112: sRText(i) = "NATURKAESE PORTIONEN - SB -"
    i = i + 1: lRAGN(i) = 1120: sRText(i) = "SCHMELZKAESE/SCHEIBEN - SB -"
    i = i + 1: lRAGN(i) = 1121: sRText(i) = "SCHMELZKAESE STREICHFAEHIG -SB"
    i = i + 1: lRAGN(i) = 1122: sRText(i) = "SCHMELZKAESE SCHEIBEN - SB -"
    i = i + 1: lRAGN(i) = 1130: sRText(i) = "WEICHKAESE - SB -"
    i = i + 1: lRAGN(i) = 1131: sRText(i) = "WEICHKAESE - SB -"
    i = i + 1: lRAGN(i) = 1140: sRText(i) = "FRISCHKAESE - SB -"
    i = i + 1: lRAGN(i) = 1141: sRText(i) = "FRISCHKAESE - SB -"
    i = i + 1: lRAGN(i) = 1150: sRText(i) = "SAUERMILCHKAESE - SB -"
    i = i + 1: lRAGN(i) = 1151: sRText(i) = "SAUERMILCHKAESE - SB -"
    i = i + 1: lRAGN(i) = 1160: sRText(i) = "REIB-/FONDUEKAESE - SB -"
    i = i + 1: lRAGN(i) = 1161: sRText(i) = "REIB-/PARMESANKAESE -SB -"
    i = i + 1: lRAGN(i) = 1170: sRText(i) = "KAESESPEZIALITAETEN - SB -"
    i = i + 1: lRAGN(i) = 1171: sRText(i) = "KAESESPEZIALITAETEN - SB -"
    i = i + 1: lRAGN(i) = 1172: sRText(i) = "LEBENSM.EIGENER ART SB (KÄSE)"
    i = i + 1: lRAGN(i) = 1180: sRText(i) = "KÄSE CONVIENENCE"
    i = i + 1: lRAGN(i) = 1181: sRText(i) = "KÄSE CONVIENENCE V.MWST"
    i = i + 1: lRAGN(i) = 1190: sRText(i) = "MILCHMISCHERZEUGNISSE SB"
    i = i + 1: lRAGN(i) = 1191: sRText(i) = "MILCHMISCHERZEUGNISSE SB"
    i = i + 1: lRAGN(i) = 1200: sRText(i) = "BACKWAREN - BED. -"
    i = i + 1: lRAGN(i) = 1210: sRText(i) = "BROTLAIBE - BED. -"
    i = i + 1: lRAGN(i) = 1211: sRText(i) = "BROTLAIBE - BED. -"
    i = i + 1: lRAGN(i) = 1220: sRText(i) = "SCHNITTBROT - BED. -"
    i = i + 1: lRAGN(i) = 1221: sRText(i) = "SCHNITTBROT - BED. -"
    i = i + 1: lRAGN(i) = 1230: sRText(i) = "TOAST-/WEISSBROT/BAGUETTES-BED"
    i = i + 1: lRAGN(i) = 1231: sRText(i) = "TOAST-/WEISSBROT/BAGUETTES-BED"
    i = i + 1: lRAGN(i) = 1240: sRText(i) = "FRISCHKUCHEN/STOLLEN -BED.-"
    i = i + 1: lRAGN(i) = 1241: sRText(i) = "FRISCHKUCHEN/STOLLEN -BED.-"
    i = i + 1: lRAGN(i) = 1250: sRText(i) = "TORTEN/TORTENBOEDEN -BED.-"
    i = i + 1: lRAGN(i) = 1251: sRText(i) = "TORTEN/TORTENBOEDEN -BED.-"
    i = i + 1: lRAGN(i) = 1260: sRText(i) = "TEILCHEN  - BED. -"
    i = i + 1: lRAGN(i) = 1261: sRText(i) = "TEILCHEN  - BED. -"
    i = i + 1: lRAGN(i) = 1270: sRText(i) = "TEIGLINGE/AUFBACKWARE -BED-"
    i = i + 1: lRAGN(i) = 1271: sRText(i) = "TEIGL./AUFBACKWARE BRÖTCHEN"
    i = i + 1: lRAGN(i) = 1272: sRText(i) = "TEIGLINGE AUFBACKWARE BROT"
    i = i + 1: lRAGN(i) = 1273: sRText(i) = "TEIGLINGE AUFBACKW.BREZELN"
    i = i + 1: lRAGN(i) = 1274: sRText(i) = "TEIGLINGE AUFBACKW.KUCHEN/TEIL"
    i = i + 1: lRAGN(i) = 1280: sRText(i) = "BROETCHEN - BED. -"
    i = i + 1: lRAGN(i) = 1281: sRText(i) = "BROETCHEN - BED. -"
    i = i + 1: lRAGN(i) = 1290: sRText(i) = "SAMMELGRUPPE KUCHEN -BED.-"
    i = i + 1: lRAGN(i) = 1291: sRText(i) = "SAMMELGRUPPE KUCHEN -BED.-"
    i = i + 1: lRAGN(i) = 1300: sRText(i) = "BACKWAREN - SB -"
    i = i + 1: lRAGN(i) = 1310: sRText(i) = "BROTLAIBE - SB -"
    i = i + 1: lRAGN(i) = 1311: sRText(i) = "BROTLAIBE - SB -"
    i = i + 1: lRAGN(i) = 1320: sRText(i) = "BROETCHEN - SB -"
    i = i + 1: lRAGN(i) = 1321: sRText(i) = "BROETCHEN - SB -"
    i = i + 1: lRAGN(i) = 1330: sRText(i) = "SCHNITTBROT - SB -"
    i = i + 1: lRAGN(i) = 1331: sRText(i) = "SCHNITTBROT - SB -"
    i = i + 1: lRAGN(i) = 1340: sRText(i) = "TOAST-/WEISSBROT/BAGUETTES -SB"
    i = i + 1: lRAGN(i) = 1341: sRText(i) = "TOAST-/WEISSBROT/BAGUETTES -SB"
    i = i + 1: lRAGN(i) = 1350: sRText(i) = "AUFBACKWARE NASS U. TROCKEN -S"
    i = i + 1: lRAGN(i) = 1351: sRText(i) = "AUFBACKWARE NASS U. TROCKEN -S"
    i = i + 1: lRAGN(i) = 1360: sRText(i) = "KNAECKEBROT/ZWIEBACK"
    i = i + 1: lRAGN(i) = 1361: sRText(i) = "KNAECKEBROT/REISSSCHNITTEN"
    i = i + 1: lRAGN(i) = 1362: sRText(i) = "ZWIEBACK"
    i = i + 1: lRAGN(i) = 1370: sRText(i) = "HALTBARE KUCHEN/TEILCHEN - SB"
    i = i + 1: lRAGN(i) = 1371: sRText(i) = "HALTBARE KUCHEN/TEILCHEN - SB"
    i = i + 1: lRAGN(i) = 1380: sRText(i) = "STOLLEN - SB -"
    i = i + 1: lRAGN(i) = 1381: sRText(i) = "STOLLEN - SB -"
    i = i + 1: lRAGN(i) = 1390: sRText(i) = "TORTENBODEN - SB -"
    i = i + 1: lRAGN(i) = 1391: sRText(i) = "TORTENBODEN - SB -"
    i = i + 1: lRAGN(i) = 1400: sRText(i) = "FEINKOST/FERTIGSALATE/FRI.PIZZ"
    i = i + 1: lRAGN(i) = 1410: sRText(i) = "FERTIGSAL./DRESSING/FEINK. -BE"
    i = i + 1: lRAGN(i) = 1411: sRText(i) = "FERTIGSALATE (+DESSERT) - BED."
    i = i + 1: lRAGN(i) = 1412: sRText(i) = "SALATSAUCEN DRESSINGS GEK.-BED"
    i = i + 1: lRAGN(i) = 1413: sRText(i) = "FEINKOST - BED. -"
    i = i + 1: lRAGN(i) = 1415: sRText(i) = "ANTIPASTI BED"
    i = i + 1: lRAGN(i) = 1416: sRText(i) = "FEINKOST PRE PACK"
    i = i + 1: lRAGN(i) = 1420: sRText(i) = "FERTIGSALAT/ANTIPASTI/FEINK.SB"
    i = i + 1: lRAGN(i) = 1421: sRText(i) = "FERTIGSALATE (+DESSERT) - SB -"
    i = i + 1: lRAGN(i) = 1422: sRText(i) = "DRESSING GEKÜHLT O+G BEREICH"
    i = i + 1: lRAGN(i) = 1423: sRText(i) = "SALATSAUCEN DRESSINGS GEK. -SB"
    i = i + 1: lRAGN(i) = 1424: sRText(i) = "ANTIPASTI SB"
    i = i + 1: lRAGN(i) = 1425: sRText(i) = "SALATE GEKÜHLT CONVENIENCE SB"
    i = i + 1: lRAGN(i) = 1430: sRText(i) = "FERTIGGERICHTE GEKUEHLT - SB -"
    i = i + 1: lRAGN(i) = 1431: sRText(i) = "SNACKS GEKÜHLT - SB"
    i = i + 1: lRAGN(i) = 1432: sRText(i) = "TEILFERTIGGERICHTE GEKÜHLT-SB"
    i = i + 1: lRAGN(i) = 1433: sRText(i) = "KOMPLETTMENÜ TRADTION.GEK.-SB"
    i = i + 1: lRAGN(i) = 1434: sRText(i) = "KOMPLETTMENÜ MEDITE.GEKÜHLT-SB"
    i = i + 1: lRAGN(i) = 1435: sRText(i) = "KOMPLETTMENÜ ASIATISCH GEK.-SB"
    i = i + 1: lRAGN(i) = 1436: sRText(i) = "SUPPEN/EINTÖPFE GEKÜHLT-SB"
    i = i + 1: lRAGN(i) = 1437: sRText(i) = "SÜSSE FERTIGGERICHTE GEK.-SB"
    i = i + 1: lRAGN(i) = 1440: sRText(i) = "FISCHFEINKOST - SB -"
    i = i + 1: lRAGN(i) = 1441: sRText(i) = "FISCHFEINKOST - SB -"
    i = i + 1: lRAGN(i) = 1442: sRText(i) = "FISCHFEINKOST GEKÜHLT SB"
    i = i + 1: lRAGN(i) = 1450: sRText(i) = "FISCH GEKUEHLT - SB -"
    i = i + 1: lRAGN(i) = 1451: sRText(i) = "MARINADEN - SB -"
    i = i + 1: lRAGN(i) = 1452: sRText(i) = "RAEUCHERFISCH - SB -"
    i = i + 1: lRAGN(i) = 1453: sRText(i) = "HERINGE/-FILETS/MATJES - SB -"
    i = i + 1: lRAGN(i) = 1454: sRText(i) = "SEELACHSSCHEIBEN/-SCHNITZEL -S"
    i = i + 1: lRAGN(i) = 1455: sRText(i) = "FRISCH-FISCH - SB -"
    i = i + 1: lRAGN(i) = 1456: sRText(i) = "MEERESFRUECHTE - SB -"
    i = i + 1: lRAGN(i) = 1457: sRText(i) = "SUSHI SB"
    i = i + 1: lRAGN(i) = 1460: sRText(i) = "FRISCHE TEIGWAREN/PIZZEN/BAGUE"
    i = i + 1: lRAGN(i) = 1461: sRText(i) = "FRISCHNUDELN - SB -"
    i = i + 1: lRAGN(i) = 1462: sRText(i) = "PIZZEN/BAGUETTES/SANDWI/WRAPES"
    i = i + 1: lRAGN(i) = 1470: sRText(i) = "SAUCEN/UEBRIGE FOOD-ART GEKUEH"
    i = i + 1: lRAGN(i) = 1471: sRText(i) = "KUEHLPFLICHTGE SAUCEN"
    i = i + 1: lRAGN(i) = 1472: sRText(i) = "FERTIGTEIG GEKUEHLT"
    i = i + 1: lRAGN(i) = 1473: sRText(i) = "UEBR. KUEHLPFL. FOOD-ARTIKEL"
    i = i + 1: lRAGN(i) = 1474: sRText(i) = "FRISCHHEFE GEKÜHLT"
    i = i + 1: lRAGN(i) = 1480: sRText(i) = "KUEHLPFLICHTIGE GETRAENKE"
    i = i + 1: lRAGN(i) = 1481: sRText(i) = "KUEHLPFLICHTIGE GETRAENKE V-MWST"
    i = i + 1: lRAGN(i) = 1482: sRText(i) = "KUEHLPFLICHTIGE GETRÄNKE E-MWST"
    i = i + 1: lRAGN(i) = 1500: sRText(i) = "GASTRONOMIE / CONVENIENCE"
    i = i + 1: lRAGN(i) = 1510: sRText(i) = "FOOD SERVICE CONV.SELBST.VERKA"
    i = i + 1: lRAGN(i) = 1511: sRText(i) = "OBST CONVENIENCE VERK."
    i = i + 1: lRAGN(i) = 1512: sRText(i) = "SALAT U. GEMÜSE CONV. VERK."
    i = i + 1: lRAGN(i) = 1513: sRText(i) = "SÄFTE FRISCH GEPR.SHAKES/FRAPP"
    i = i + 1: lRAGN(i) = 1514: sRText(i) = "DESSERTS CONVENIENCE VERK."
    i = i + 1: lRAGN(i) = 1515: sRText(i) = "MENUES CONVENIENCE VERK."
    i = i + 1: lRAGN(i) = 1516: sRText(i) = "PIZZEN/BAGZETTES/WRAPS/S.CONVE"
    i = i + 1: lRAGN(i) = 1517: sRText(i) = "BACKWAREN SÜß CONV. VERK."
    i = i + 1: lRAGN(i) = 1518: sRText(i) = "GETRÄNKEAUSSCHANK CONV.  VERK."
    i = i + 1: lRAGN(i) = 1519: sRText(i) = "SAMMELGRUPPE CONV. VERK."
    i = i + 1: lRAGN(i) = 1520: sRText(i) = "FOOD SERVICE CONV.SELBSTV.VERZ"
    i = i + 1: lRAGN(i) = 1521: sRText(i) = "OBST CONVENIENCE VERZ."
    i = i + 1: lRAGN(i) = 1522: sRText(i) = "SALAT U. GEMÜSE CONV. VERZ."
    i = i + 1: lRAGN(i) = 1524: sRText(i) = "DESSERTS CONVENIENCE VERZ."
    i = i + 1: lRAGN(i) = 1525: sRText(i) = "MENUES CONVENIENVE VERZ."
    i = i + 1: lRAGN(i) = 1526: sRText(i) = "PIZZEN/BAGUETTES/WRAP.SA.CONV."
    i = i + 1: lRAGN(i) = 1527: sRText(i) = "BACKWAREN SÜß CONV. VERZ."
    i = i + 1: lRAGN(i) = 1528: sRText(i) = "GETRÄNKEAUSSCHANK CONV. VERZ."
    i = i + 1: lRAGN(i) = 1529: sRText(i) = "SAMMELGRUPPE CONV. VERZ."
    i = i + 1: lRAGN(i) = 1530: sRText(i) = "HEISSE THEKE VERKAUF"
    i = i + 1: lRAGN(i) = 1531: sRText(i) = "HEISSE THEKE VERKAUF"
    i = i + 1: lRAGN(i) = 1540: sRText(i) = "HEISSE THEKE VERZEHR"
    i = i + 1: lRAGN(i) = 1541: sRText(i) = "HEISSE THEKE VERZEHR"
    i = i + 1: lRAGN(i) = 1550: sRText(i) = "SAMMELGRUPPE CAFETERIA"
    i = i + 1: lRAGN(i) = 1551: sRText(i) = "SAMMELGRUPPE CAFETERIA"
    i = i + 1: lRAGN(i) = 1560: sRText(i) = "SAMMELGRUPPE CAFETERIA"
    i = i + 1: lRAGN(i) = 1561: sRText(i) = "SAMMELGRUPPE CAFETERIA"
    i = i + 1: lRAGN(i) = 1600: sRText(i) = "OBST"
    i = i + 1: lRAGN(i) = 1610: sRText(i) = "ZITRUSFRUECHTE"
    i = i + 1: lRAGN(i) = 1611: sRText(i) = "APFELSINEN/ORANGEN"
    i = i + 1: lRAGN(i) = 1612: sRText(i) = "CLEMENTINEN MANDARINEN"
    i = i + 1: lRAGN(i) = 1613: sRText(i) = "GRAPEFRUIT"
    i = i + 1: lRAGN(i) = 1614: sRText(i) = "ZITRONEN"
    i = i + 1: lRAGN(i) = 1615: sRText(i) = "LIMETTEN"
    i = i + 1: lRAGN(i) = 1620: sRText(i) = "BANANEN"
    i = i + 1: lRAGN(i) = 1621: sRText(i) = "BANANEN"
    i = i + 1: lRAGN(i) = 1630: sRText(i) = "KERNOBST"
    i = i + 1: lRAGN(i) = 1631: sRText(i) = "AEPFEL"
    i = i + 1: lRAGN(i) = 1632: sRText(i) = "BIRNEN"
    i = i + 1: lRAGN(i) = 1633: sRText(i) = "SONSTIGES KERNOBST"
    i = i + 1: lRAGN(i) = 1640: sRText(i) = "BEERENFRUECHTE"
    i = i + 1: lRAGN(i) = 1641: sRText(i) = "ERDBEEREN"
    i = i + 1: lRAGN(i) = 1642: sRText(i) = "SONSTIGE BEEREN"
    i = i + 1: lRAGN(i) = 1650: sRText(i) = "TAFELTRAUBEN"
    i = i + 1: lRAGN(i) = 1651: sRText(i) = "HELLE TRAUBEN"
    i = i + 1: lRAGN(i) = 1652: sRText(i) = "BLAUE TRAUBEN"
    i = i + 1: lRAGN(i) = 1653: sRText(i) = "TRAUBE HELL KERNLOS"
    i = i + 1: lRAGN(i) = 1654: sRText(i) = "TRAUBE BLAU KERNLOS"
    i = i + 1: lRAGN(i) = 1660: sRText(i) = "STEINOBST"
    i = i + 1: lRAGN(i) = 1661: sRText(i) = "KIRSCHEN"
    i = i + 1: lRAGN(i) = 1662: sRText(i) = "PFLAUMEN/ZWETSCHGEN"
    i = i + 1: lRAGN(i) = 1663: sRText(i) = "PFIRSICHE"
    i = i + 1: lRAGN(i) = 1664: sRText(i) = "NEKTARINEN"
    i = i + 1: lRAGN(i) = 1665: sRText(i) = "APRIKOSEN"
    i = i + 1: lRAGN(i) = 1670: sRText(i) = "TROCKENFRUECHTE/NUESSE/KOERNER"
    i = i + 1: lRAGN(i) = 1671: sRText(i) = "SCHALENNUESSE"
    i = i + 1: lRAGN(i) = 1672: sRText(i) = "DATTELN/FEIGEN"
    i = i + 1: lRAGN(i) = 1673: sRText(i) = "TROCKENOBST"
    i = i + 1: lRAGN(i) = 1674: sRText(i) = "KOERNER/SCHROTE"
    i = i + 1: lRAGN(i) = 1675: sRText(i) = "TUTTI FRUTTI/KANDIERTE FRUECHT"
    i = i + 1: lRAGN(i) = 1679: sRText(i) = "TROCKFRÜCHTE NÜSSE O. U. G."
    i = i + 1: lRAGN(i) = 1680: sRText(i) = "OBST-SPEZIALITAETEN EXOTEN"
    i = i + 1: lRAGN(i) = 1681: sRText(i) = "MELONEN"
    i = i + 1: lRAGN(i) = 1682: sRText(i) = "KIWI"
    i = i + 1: lRAGN(i) = 1683: sRText(i) = "OBST-EXOTEN"
    i = i + 1: lRAGN(i) = 1684: sRText(i) = "ANANAS"
    i = i + 1: lRAGN(i) = 1685: sRText(i) = "MANGO"
    i = i + 1: lRAGN(i) = 1686: sRText(i) = "PAPAYA"
    i = i + 1: lRAGN(i) = 1687: sRText(i) = "AVOCADO"
    i = i + 1: lRAGN(i) = 1690: sRText(i) = "OBST CONVE.INDUSTRI.VERP.VERK."
    i = i + 1: lRAGN(i) = 1691: sRText(i) = "OBST CONVENIENCE ENDVERBRAUCHE"
    i = i + 1: lRAGN(i) = 1692: sRText(i) = "OBST CONVENIENCE GROßVERBRAUCH"
    i = i + 1: lRAGN(i) = 1693: sRText(i) = "DESSERT CONVENIENCE ENDVERBRAU"
    i = i + 1: lRAGN(i) = 1694: sRText(i) = "DESSERT CONVENIENCE GROßVERBRA"
    i = i + 1: lRAGN(i) = 1695: sRText(i) = "SAMMELGRUPPE OBST UND GEMÜSE"
    i = i + 1: lRAGN(i) = 1700: sRText(i) = "GEMUESE/KARTOFFELN"
    i = i + 1: lRAGN(i) = 1710: sRText(i) = "KARTOFFELN"
    i = i + 1: lRAGN(i) = 1711: sRText(i) = "KARTOFFELN LOSE"
    i = i + 1: lRAGN(i) = 1712: sRText(i) = "KARTOFFELN BEUTEL U. GROSSPAC"
    i = i + 1: lRAGN(i) = 1713: sRText(i) = "SÜSSKARTOFFFEL V-MWST"
    i = i + 1: lRAGN(i) = 1719: sRText(i) = "SAMMELGRUPPE GEMUESE (GH)"
    i = i + 1: lRAGN(i) = 1720: sRText(i) = "ZWIEBELN GEWUERZGEMUESE"
    i = i + 1: lRAGN(i) = 1721: sRText(i) = "ZWIEBELN"
    i = i + 1: lRAGN(i) = 1722: sRText(i) = "GEWUERZGEMUESE"
    i = i + 1: lRAGN(i) = 1730: sRText(i) = "KOHL- UND BLATTGEMUESE"
    i = i + 1: lRAGN(i) = 1731: sRText(i) = "KOHLGEMUESE"
    i = i + 1: lRAGN(i) = 1732: sRText(i) = "BLATTGEMUESE"
    i = i + 1: lRAGN(i) = 1733: sRText(i) = "BLUMENKOHL"
    i = i + 1: lRAGN(i) = 1740: sRText(i) = "BLATTSALAT"
    i = i + 1: lRAGN(i) = 1741: sRText(i) = "BLATTSALAT"
    i = i + 1: lRAGN(i) = 1750: sRText(i) = "WURZELGEMUESE"
    i = i + 1: lRAGN(i) = 1751: sRText(i) = "WURZELGEMUESE"
    i = i + 1: lRAGN(i) = 1760: sRText(i) = "FRUCHTGEMUESE"
    i = i + 1: lRAGN(i) = 1761: sRText(i) = "GURKEN FRISCH"
    i = i + 1: lRAGN(i) = 1762: sRText(i) = "TOMATEN"
    i = i + 1: lRAGN(i) = 1763: sRText(i) = "PAPRIKA"
    i = i + 1: lRAGN(i) = 1764: sRText(i) = "HUELSENFRUECHTE FRISCH"
    i = i + 1: lRAGN(i) = 1765: sRText(i) = "GEMUESE-EXOTEN"
    i = i + 1: lRAGN(i) = 1770: sRText(i) = "FEIN- UND STENGELGEMUESE"
    i = i + 1: lRAGN(i) = 1771: sRText(i) = "FEIN U. STENGELGEMUESE"
    i = i + 1: lRAGN(i) = 1772: sRText(i) = "SPARGEL"
    i = i + 1: lRAGN(i) = 1780: sRText(i) = "SPEZIALITAETEN PILZE KRAEUTER"
    i = i + 1: lRAGN(i) = 1781: sRText(i) = "PILZE"
    i = i + 1: lRAGN(i) = 1782: sRText(i) = "KRAEUTER"
    i = i + 1: lRAGN(i) = 1790: sRText(i) = "GEMÜSE CONV.INDUSTR.VERP.VERKA"
    i = i + 1: lRAGN(i) = 1791: sRText(i) = "GEMÜSE CONVENIENCE ENDVERBRAU."
    i = i + 1: lRAGN(i) = 1792: sRText(i) = "GEMÜSE CONVENIENCE GROSSVERBR."
    i = i + 1: lRAGN(i) = 1800: sRText(i) = "BLUMEN/-ERDE SAEMEREIEN DUENGE"
    i = i + 1: lRAGN(i) = 1810: sRText(i) = "SCHNITTBLUMEN FRISCHE GESTECKE"
    i = i + 1: lRAGN(i) = 1811: sRText(i) = "SCHNITTBLUMEN"
    i = i + 1: lRAGN(i) = 1813: sRText(i) = "SCHNITTBLUMENVERSAND"
    i = i + 1: lRAGN(i) = 1814: sRText(i) = "FERTIGGESTECKE FRISCH"
    i = i + 1: lRAGN(i) = 1820: sRText(i) = "TOPFBLUMEN"
    i = i + 1: lRAGN(i) = 1821: sRText(i) = "TOPFBLUMEN GRUEN"
    i = i + 1: lRAGN(i) = 1822: sRText(i) = "TOPFBLUMEN BLUEHEND"
    i = i + 1: lRAGN(i) = 1823: sRText(i) = "BEPFL.GEFAESSE VEREDELUNG LE"
    i = i + 1: lRAGN(i) = 1830: sRText(i) = "GRABSCHMUCK/ADVENT E-MWST."
    i = i + 1: lRAGN(i) = 1831: sRText(i) = "GRABSCHMUCK E-MWST"
    i = i + 1: lRAGN(i) = 1832: sRText(i) = "ADVENTSGESTECKE E-MWST"
    i = i + 1: lRAGN(i) = 1833: sRText(i) = "TANNEN GESCHLAGEN"
    i = i + 1: lRAGN(i) = 1834: sRText(i) = "TANNEN IM TOPF"
    i = i + 1: lRAGN(i) = 1835: sRText(i) = "TANNENGRÜN UND ROHLINGE"
    i = i + 1: lRAGN(i) = 1840: sRText(i) = "TEXTILBL.GRABSCHM.GEST."
    i = i + 1: lRAGN(i) = 1841: sRText(i) = "GRABSCHMUCK V-MWST"
    i = i + 1: lRAGN(i) = 1842: sRText(i) = "GESTECKE V-MWST."
    i = i + 1: lRAGN(i) = 1843: sRText(i) = "TEXTILBLUMEN V-MWST."
    i = i + 1: lRAGN(i) = 1844: sRText(i) = "TROCKENBLUMEN V-MWST."
    i = i + 1: lRAGN(i) = 1850: sRText(i) = "BEET-/BALKONPFLANZENKONIFEREN"
    i = i + 1: lRAGN(i) = 1851: sRText(i) = "BEET-/BALKONPFLANZEN"
    i = i + 1: lRAGN(i) = 1852: sRText(i) = "NADELGEHÖLZE"
    i = i + 1: lRAGN(i) = 1853: sRText(i) = "ROSEN"
    i = i + 1: lRAGN(i) = 1854: sRText(i) = "WINTERHARTE STAUDEN"
    i = i + 1: lRAGN(i) = 1855: sRText(i) = "BEPFLANZTE GEFÄSSE AUSSEN"
    i = i + 1: lRAGN(i) = 1856: sRText(i) = "OBSTGEHÖLZE"
    i = i + 1: lRAGN(i) = 1857: sRText(i) = "TERASSENPFLANZEN (TOPF > 17CM)"
    i = i + 1: lRAGN(i) = 1858: sRText(i) = "GEMÜSEPFLANZEN"
    i = i + 1: lRAGN(i) = 1859: sRText(i) = "LAUBGEHÖLZE"
    i = i + 1: lRAGN(i) = 1860: sRText(i) = "BLUMENERDE/TORF/ZUBEHOER"
    i = i + 1: lRAGN(i) = 1861: sRText(i) = "BLUMENERDE/HUMUS UNIVERSAL"
    i = i + 1: lRAGN(i) = 1862: sRText(i) = "TORF"
    i = i + 1: lRAGN(i) = 1863: sRText(i) = "GRANULAT"
    i = i + 1: lRAGN(i) = 1864: sRText(i) = "HYDROKULTUR- ZUBEHOER V-MWST"
    i = i + 1: lRAGN(i) = 1865: sRText(i) = "SAEMEREIEN/BLUMENZWIEBELN V-MW"
    i = i + 1: lRAGN(i) = 1866: sRText(i) = "ZUBEHOER (BLUMEN ETC.)"
    i = i + 1: lRAGN(i) = 1867: sRText(i) = "BLUMENERDE SPEZIELLE PFLANZEN"
    i = i + 1: lRAGN(i) = 1868: sRText(i) = "BODENVERBESSERUNG"
    i = i + 1: lRAGN(i) = 1870: sRText(i) = "RINDENMULCH/HYDROKULTUR/SONSTI"
    i = i + 1: lRAGN(i) = 1871: sRText(i) = "RINDENMULCH"
    i = i + 1: lRAGN(i) = 1872: sRText(i) = "HYDROKULTUR E-MWST"
    i = i + 1: lRAGN(i) = 1873: sRText(i) = "TIERISCHE U. PFLANZL. DUENGEMI"
    i = i + 1: lRAGN(i) = 1880: sRText(i) = "DUENGEMITTEL/PFLANZENSCHUTZ"
    i = i + 1: lRAGN(i) = 1881: sRText(i) = "DUENGEMITTEL"
    i = i + 1: lRAGN(i) = 1882: sRText(i) = "RASENDÜNGER"
    i = i + 1: lRAGN(i) = 1883: sRText(i) = "BLUMENDÜNGER SPEZIELLE"
    i = i + 1: lRAGN(i) = 1884: sRText(i) = "MITTEL GEGEN INSEKTEN"
    i = i + 1: lRAGN(i) = 1885: sRText(i) = "MITTEL GEGEN UNKRAUT"
    i = i + 1: lRAGN(i) = 1886: sRText(i) = "MITTEL GEGEN PILZE"
    i = i + 1: lRAGN(i) = 1887: sRText(i) = "MITTEL GEGEN NAGER"
    i = i + 1: lRAGN(i) = 1888: sRText(i) = "MITTEL GEG.SCHNECKEN PFLANZEN"
    i = i + 1: lRAGN(i) = 1890: sRText(i) = "SAEMEREIEN/BLUMENZWIEBELN"
    i = i + 1: lRAGN(i) = 1891: sRText(i) = "SAEMEREIEN E-MWST"
    i = i + 1: lRAGN(i) = 1892: sRText(i) = "BLUMENZWIEBELN FRÜHJAHR"
    i = i + 1: lRAGN(i) = 1893: sRText(i) = "KEIMSPROSSEN"
    i = i + 1: lRAGN(i) = 1894: sRText(i) = "BLUMENZWIEBELN HERBST"
    i = i + 1: lRAGN(i) = 1895: sRText(i) = "RASENSAMEN"
    i = i + 1: lRAGN(i) = 1900: sRText(i) = "EIER"
    i = i + 1: lRAGN(i) = 1910: sRText(i) = "EIER PACKUNG"
    i = i + 1: lRAGN(i) = 1911: sRText(i) = "EIER PACKUNG KAEFIG"
    i = i + 1: lRAGN(i) = 1920: sRText(i) = "EIER PACKUNG FREILAND"
    i = i + 1: lRAGN(i) = 1921: sRText(i) = "EIER PACKUNG FREILAND"
    i = i + 1: lRAGN(i) = 1930: sRText(i) = "EIER PACKUNG BODENHALTUNG"
    i = i + 1: lRAGN(i) = 1931: sRText(i) = "EIER PACKUNG BODENHALTUNG"
    i = i + 1: lRAGN(i) = 1940: sRText(i) = "EIER SPEZ.(+BODENHALT./MEHRKOR"
    i = i + 1: lRAGN(i) = 1941: sRText(i) = "EIER PACKUNG OEKO/BIO"
    i = i + 1: lRAGN(i) = 1950: sRText(i) = "EIER LOSE"
    i = i + 1: lRAGN(i) = 1951: sRText(i) = "EIER LOSE KAEFIG"
    i = i + 1: lRAGN(i) = 1952: sRText(i) = "EIER LOSE BODENHALTUNG"
    i = i + 1: lRAGN(i) = 1953: sRText(i) = "EIER LOSE FREILAND"
    i = i + 1: lRAGN(i) = 1954: sRText(i) = "EIER LOSE OEKO/BIO"
    i = i + 1: lRAGN(i) = 1960: sRText(i) = "EIER GEKOCHT"
    i = i + 1: lRAGN(i) = 1961: sRText(i) = "EIER GEKOCHT"
    i = i + 1: lRAGN(i) = 2000: sRText(i) = "BUTTER FETTE"
    i = i + 1: lRAGN(i) = 2010: sRText(i) = "BUTTER"
    i = i + 1: lRAGN(i) = 2011: sRText(i) = "BUTTER"
    i = i + 1: lRAGN(i) = 2012: sRText(i) = "BUTTERZUBEREITUNG"
    i = i + 1: lRAGN(i) = 2020: sRText(i) = "MARGARINE"
    i = i + 1: lRAGN(i) = 2021: sRText(i) = "MARGARINE"
    i = i + 1: lRAGN(i) = 2022: sRText(i) = "DIAET/LEICHT-MARGARINE"
    i = i + 1: lRAGN(i) = 2030: sRText(i) = "MISCH- UND SPEISEFETT"
    i = i + 1: lRAGN(i) = 2031: sRText(i) = "MISCH- UND SPEISEFETT"
    i = i + 1: lRAGN(i) = 2040: sRText(i) = "SCHMALZ"
    i = i + 1: lRAGN(i) = 2041: sRText(i) = "SCHMALZ - SB  -"
    i = i + 1: lRAGN(i) = 2042: sRText(i) = "SCHMALZ - BED -"
    i = i + 1: lRAGN(i) = 2100: sRText(i) = "MILCH UND MOLKEREIPRODUKTE"
    i = i + 1: lRAGN(i) = 2110: sRText(i) = "FRISCHMILCH/-GETRAENKE"
    i = i + 1: lRAGN(i) = 2111: sRText(i) = "FRISCHMILCH EINWEG"
    i = i + 1: lRAGN(i) = 2114: sRText(i) = "KAKAO/MILCHMISCHGETRÄNKE FRISC"
    i = i + 1: lRAGN(i) = 2117: sRText(i) = "KAKAO/FRISCHMILCH MEHRWEG"
    i = i + 1: lRAGN(i) = 2120: sRText(i) = "SAUERMILCH"
    i = i + 1: lRAGN(i) = 2121: sRText(i) = "BUTTERMILCH/DICKMILCH"
    i = i + 1: lRAGN(i) = 2123: sRText(i) = "KEFIR/MOLKE"
    i = i + 1: lRAGN(i) = 2130: sRText(i) = "MISCHGETRÄNKE E-MWST"
    i = i + 1: lRAGN(i) = 2131: sRText(i) = "H-MILCH E-MWST"
    i = i + 1: lRAGN(i) = 2132: sRText(i) = "H-MILCH MEHRWEG E-MWST"
    i = i + 1: lRAGN(i) = 2133: sRText(i) = "H-KAKAO MISCH SONST.GETR.E-MWS"
    i = i + 1: lRAGN(i) = 2140: sRText(i) = "MISCHGETRÄNKE V-MWST"
    i = i + 1: lRAGN(i) = 2141: sRText(i) = "MISCHGETRAENKE-KÜHLB. V-MWST"
    i = i + 1: lRAGN(i) = 2142: sRText(i) = "H-MISCHGETRÄNKE V-MWST"
    i = i + 1: lRAGN(i) = 2150: sRText(i) = "KONDENSMILCH/MILCHPULVER"
    i = i + 1: lRAGN(i) = 2151: sRText(i) = "KONDENSMILCH/KAFFEESAHNE/WEISS"
    i = i + 1: lRAGN(i) = 2160: sRText(i) = "SPEISEQUARK UND SCHICHTKAESE"
    i = i + 1: lRAGN(i) = 2161: sRText(i) = "SPEISEQUARK U. SCHICHTKAESE"
    i = i + 1: lRAGN(i) = 2162: sRText(i) = "KRAUETER- U. GEWUERZQUARK"
    i = i + 1: lRAGN(i) = 2163: sRText(i) = "FRUCHTQUARK"
    i = i + 1: lRAGN(i) = 2164: sRText(i) = "DIAETQUARK"
    i = i + 1: lRAGN(i) = 2165: sRText(i) = "QUARK MEHRWEG"
    i = i + 1: lRAGN(i) = 2167: sRText(i) = "FRUCHTQUARK MW"
    i = i + 1: lRAGN(i) = 2168: sRText(i) = "DIAETQUARK MW"
    i = i + 1: lRAGN(i) = 2170: sRText(i) = "SAHNE / SCHMAND U. CREME"
    i = i + 1: lRAGN(i) = 2171: sRText(i) = "SUESSE SAHNE"
    i = i + 1: lRAGN(i) = 2172: sRText(i) = "SAURE SAHNE / SCHMAND"
    i = i + 1: lRAGN(i) = 2173: sRText(i) = "SPRUEHSAHNE/H-SAHNE/H-SAUERRAH"
    i = i + 1: lRAGN(i) = 2175: sRText(i) = "CREME FRAICHE"
    i = i + 1: lRAGN(i) = 2176: sRText(i) = "SAHNE MEHRWEG"
    i = i + 1: lRAGN(i) = 2180: sRText(i) = "JOGHURT"
    i = i + 1: lRAGN(i) = 2181: sRText(i) = "NATURJOGHURT"
    i = i + 1: lRAGN(i) = 2182: sRText(i) = "FRUCHTJOGHURT"
    i = i + 1: lRAGN(i) = 2183: sRText(i) = "DIAETJOGHURT"
    i = i + 1: lRAGN(i) = 2184: sRText(i) = "H-JOGHURT/H-TRINKJOGHURT"
    i = i + 1: lRAGN(i) = 2185: sRText(i) = "TRINKJOGHURT EIN- U. MEHRWEG"
    i = i + 1: lRAGN(i) = 2186: sRText(i) = "NATURJOGHURT MEHRWEG"
    i = i + 1: lRAGN(i) = 2187: sRText(i) = "FRUCHTJOGHURT MEHRWEG"
    i = i + 1: lRAGN(i) = 2189: sRText(i) = "3100 ZABELBERG"
    i = i + 1: lRAGN(i) = 2190: sRText(i) = "DESSERTS"
    i = i + 1: lRAGN(i) = 2191: sRText(i) = "PUDDING/DESSERT/MILCHREIS"
    i = i + 1: lRAGN(i) = 2192: sRText(i) = "DIAET-DESSERT"
    i = i + 1: lRAGN(i) = 2193: sRText(i) = "GOETTERSPEISE/GRUETZE"
    i = i + 1: lRAGN(i) = 2194: sRText(i) = "H-DESSERTS/H-PUDDING/H-MILCHRE"
    i = i + 1: lRAGN(i) = 2196: sRText(i) = "KUEHLBEDUERFTIGE RIEGEL"
    i = i + 1: lRAGN(i) = 2200: sRText(i) = "TK-FLEISCH -FISCH -SPEZIALITAE"
    i = i + 1: lRAGN(i) = 2210: sRText(i) = "TK-FLEISCH(OHNE GEFLUEGEL/WILD"
    i = i + 1: lRAGN(i) = 2211: sRText(i) = "TK-FLEISCH RIND"
    i = i + 1: lRAGN(i) = 2212: sRText(i) = "TK-FLEISCH SCHWEIN"
    i = i + 1: lRAGN(i) = 2213: sRText(i) = "TK-FLEISCH KALB"
    i = i + 1: lRAGN(i) = 2214: sRText(i) = "TK-FLEISCH LAMM"
    i = i + 1: lRAGN(i) = 2215: sRText(i) = "TK-HACKFLEISCH"
    i = i + 1: lRAGN(i) = 2220: sRText(i) = "TK-HAEHNCHEN"
    i = i + 1: lRAGN(i) = 2221: sRText(i) = "TK-HAEHNCHEN (BIS 1.100G)"
    i = i + 1: lRAGN(i) = 2222: sRText(i) = "TK-HAEHNCHEN (AB 1.200G)"
    i = i + 1: lRAGN(i) = 2223: sRText(i) = "TK-SUPPENHUHN"
    i = i + 1: lRAGN(i) = 2224: sRText(i) = "TK-HAEHNCHENSCHENKEL"
    i = i + 1: lRAGN(i) = 2225: sRText(i) = "TK-INNEREIEN"
    i = i + 1: lRAGN(i) = 2226: sRText(i) = "TK-HAEHNCHENTEILE/CONVENIENCE"
    i = i + 1: lRAGN(i) = 2230: sRText(i) = "TK-PUTEN/ENTEN"
    i = i + 1: lRAGN(i) = 2231: sRText(i) = "TK-PUTEN"
    i = i + 1: lRAGN(i) = 2232: sRText(i) = "TK-ENTEN"
    i = i + 1: lRAGN(i) = 2233: sRText(i) = "TK-PUTENTEILE/INNEREIEN/CONVEN"
    i = i + 1: lRAGN(i) = 2234: sRText(i) = "TK-ENTENTEILE/CONVENIENCE"
    i = i + 1: lRAGN(i) = 2240: sRText(i) = "TK-GAENSE"
    i = i + 1: lRAGN(i) = 2241: sRText(i) = "TK-GAENSE"
    i = i + 1: lRAGN(i) = 2243: sRText(i) = "TK-GAENSEKLEIN U.-TEILE/CONVEN"
    i = i + 1: lRAGN(i) = 2250: sRText(i) = "TK-WILDPRODUKTE"
    i = i + 1: lRAGN(i) = 2251: sRText(i) = "TK-HASEN"
    i = i + 1: lRAGN(i) = 2252: sRText(i) = "TK-KANINCHEN"
    i = i + 1: lRAGN(i) = 2253: sRText(i) = "TK-RESTLICHE WILDPRODUKTE"
    i = i + 1: lRAGN(i) = 2260: sRText(i) = "TK-FISCHPRODUKTE/MEERESFRUECHT"
    i = i + 1: lRAGN(i) = 2261: sRText(i) = "TK-FISCHSTAEBCHEN"
    i = i + 1: lRAGN(i) = 2262: sRText(i) = "TK-NATURFISC/FISCHFILET/STEAKS"
    i = i + 1: lRAGN(i) = 2263: sRText(i) = "TK-FISCHGERICHTE (+FRIKADELLEN"
    i = i + 1: lRAGN(i) = 2265: sRText(i) = "TK-MEERESFRUECHTE"
    i = i + 1: lRAGN(i) = 2270: sRText(i) = "TK-SPEZIALITAETEN"
    i = i + 1: lRAGN(i) = 2271: sRText(i) = "TK-SPEZIALITAETEN"
    i = i + 1: lRAGN(i) = 2280: sRText(i) = "TK-SPEZIALITAETEN V-MWST."
    i = i + 1: lRAGN(i) = 2281: sRText(i) = "TK-SPEZIALITAETEN V-MWST."
    i = i + 1: lRAGN(i) = 2300: sRText(i) = "TK-FERTIGGERICHTE/TK-O+G"
    i = i + 1: lRAGN(i) = 2310: sRText(i) = "TK-FERTIGGERICHTE"
    i = i + 1: lRAGN(i) = 2311: sRText(i) = "TK-SUPPEN"
    i = i + 1: lRAGN(i) = 2312: sRText(i) = "TK-KNOEDEL/-TEIGWAREN"
    i = i + 1: lRAGN(i) = 2313: sRText(i) = "TK-FERTIGGERICHTE"
    i = i + 1: lRAGN(i) = 2314: sRText(i) = "TK-FLEISCH-CONVENIENCE"
    i = i + 1: lRAGN(i) = 2320: sRText(i) = "TK-PIZZEN BAGUETTES QUICHES"
    i = i + 1: lRAGN(i) = 2321: sRText(i) = "TK-PIZZEN / FLAMMKUCHEN"
    i = i + 1: lRAGN(i) = 2322: sRText(i) = "TK-BAGUETTES"
    i = i + 1: lRAGN(i) = 2330: sRText(i) = "TK-KARTOFFELPRODUKTE"
    i = i + 1: lRAGN(i) = 2331: sRText(i) = "TK-POMMES FRITES/BACK-FRITES"
    i = i + 1: lRAGN(i) = 2332: sRText(i) = "TK-KROKETTEN/K-KNOEDEL/-PUFFER"
    i = i + 1: lRAGN(i) = 2340: sRText(i) = "TK-GEMUESE"
    i = i + 1: lRAGN(i) = 2341: sRText(i) = "TK-SPINAT"
    i = i + 1: lRAGN(i) = 2345: sRText(i) = "TK-GEMUESEMISCHUNGEN"
    i = i + 1: lRAGN(i) = 2346: sRText(i) = "TK-KRAEUTER UND GEWUERZE"
    i = i + 1: lRAGN(i) = 2348: sRText(i) = "TK-KOHLGEMUESE"
    i = i + 1: lRAGN(i) = 2349: sRText(i) = "TK-UEBRIGES GEMUESE"
    i = i + 1: lRAGN(i) = 2350: sRText(i) = "TK-FRUECHTE/-BEEREN/-SAEFTE"
    i = i + 1: lRAGN(i) = 2351: sRText(i) = "TK-FRUECHTE/-BEEREN/-SAEFTE"
    i = i + 1: lRAGN(i) = 2360: sRText(i) = "TK-SNACKS"
    i = i + 1: lRAGN(i) = 2361: sRText(i) = "TK-SNACKS"
    i = i + 1: lRAGN(i) = 2400: sRText(i) = "TK-EIS BACK- UND SUESSWAREN"
    i = i + 1: lRAGN(i) = 2410: sRText(i) = "TK-BACK- UND SUESSWAREN"
    i = i + 1: lRAGN(i) = 2411: sRText(i) = "TK-TORTEN/KUCHEN"
    i = i + 1: lRAGN(i) = 2413: sRText(i) = "TK-SUESSSPEISEN"
    i = i + 1: lRAGN(i) = 2414: sRText(i) = "TK-FERTIGTEIG"
    i = i + 1: lRAGN(i) = 2415: sRText(i) = "TK-AUFBACKBROTWAREN"
    i = i + 1: lRAGN(i) = 2420: sRText(i) = "SPEISEEIS HAUSHALTSPACKUNGEN"
    i = i + 1: lRAGN(i) = 2421: sRText(i) = "SPEISEEIS HAUSHALTSPACKUNGEN"
    i = i + 1: lRAGN(i) = 2440: sRText(i) = "MULTIPACKUNGEN EIS"
    i = i + 1: lRAGN(i) = 2441: sRText(i) = "MULTIPACKUNGEN EIS"
    i = i + 1: lRAGN(i) = 2450: sRText(i) = "EISCREME KLEINPACKUNGEN"
    i = i + 1: lRAGN(i) = 2451: sRText(i) = "EISCREME KLEINPACKUNGEN"
    i = i + 1: lRAGN(i) = 2500: sRText(i) = "CAFETERIA HEISSE THEKE BEZUG"
    i = i + 1: lRAGN(i) = 2510: sRText(i) = "FLEISCH WURST FRISCHGEFL.BEZUG"
    i = i + 1: lRAGN(i) = 2511: sRText(i) = "FLEISCH BEZUG"
    i = i + 1: lRAGN(i) = 2512: sRText(i) = "WURST BEZUG"
    i = i + 1: lRAGN(i) = 2513: sRText(i) = "FRISCHGEFLUEGEL BEZUG"
    i = i + 1: lRAGN(i) = 2520: sRText(i) = "FISCH FEINKOST BEZUG"
    i = i + 1: lRAGN(i) = 2521: sRText(i) = "FISCH BEZUG"
    i = i + 1: lRAGN(i) = 2522: sRText(i) = "FERTIGSALATE BEZUG"
    i = i + 1: lRAGN(i) = 2523: sRText(i) = "FEINKOST BEZUG"
    i = i + 1: lRAGN(i) = 2530: sRText(i) = "OBST UND GEMUESE BEZUG"
    i = i + 1: lRAGN(i) = 2531: sRText(i) = "OBST BEZUG"
    i = i + 1: lRAGN(i) = 2532: sRText(i) = "GEMUESE BEZUG"
    i = i + 1: lRAGN(i) = 2533: sRText(i) = "SALAT BEZUG"
    i = i + 1: lRAGN(i) = 2540: sRText(i) = "MOLKEREIPRODUKTE BEZUG"
    i = i + 1: lRAGN(i) = 2541: sRText(i) = "KAESE BEZUG"
    i = i + 1: lRAGN(i) = 2542: sRText(i) = "JOGHURT DESSERTS BEZUG"
    i = i + 1: lRAGN(i) = 2543: sRText(i) = "SONST.MOLKEREIPRODUKTE BEZUG"
    i = i + 1: lRAGN(i) = 2544: sRText(i) = "EIER/BUTTER/FETTE BEZUG"
    i = i + 1: lRAGN(i) = 2550: sRText(i) = "TIEFKUEHLKOST BEZUG"
    i = i + 1: lRAGN(i) = 2551: sRText(i) = "TK FLEISCH BEZUG"
    i = i + 1: lRAGN(i) = 2552: sRText(i) = "TK GEFLUEGEL BEZUG"
    i = i + 1: lRAGN(i) = 2553: sRText(i) = "TK FISCH BEZUG"
    i = i + 1: lRAGN(i) = 2554: sRText(i) = "TK GEMUESE BEZUG"
    i = i + 1: lRAGN(i) = 2555: sRText(i) = "TK BACKWAREN BEZUG"
    i = i + 1: lRAGN(i) = 2556: sRText(i) = "TK KARTOFFELPRODUKTE BEZUG"
    i = i + 1: lRAGN(i) = 2557: sRText(i) = "TK EIS BEZUG"
    i = i + 1: lRAGN(i) = 2558: sRText(i) = "TK PIZZA U.SNACKS BEZUG"
    i = i + 1: lRAGN(i) = 2560: sRText(i) = "NAEHRMITTEL BEZUG"
    i = i + 1: lRAGN(i) = 2561: sRText(i) = "KAFFEE/TEE/KAKAO BEZUG"
    i = i + 1: lRAGN(i) = 2562: sRText(i) = "KONSERVEN BEZUG"
    i = i + 1: lRAGN(i) = 2563: sRText(i) = "FERTIGGERICHTE BEZUG"
    i = i + 1: lRAGN(i) = 2564: sRText(i) = "TEIGWAREN BEZUG"
    i = i + 1: lRAGN(i) = 2565: sRText(i) = "GEWUERZE/SALZ/ESSIG BEZUG"
    i = i + 1: lRAGN(i) = 2566: sRText(i) = "SUPPEN UND SOSSEN BEZUG"
    i = i + 1: lRAGN(i) = 2567: sRText(i) = "BROTAUFSTRICHE BEZUG"
    i = i + 1: lRAGN(i) = 2568: sRText(i) = "SONSTIGE NAEHRMITTEL BEZUG"
    i = i + 1: lRAGN(i) = 2570: sRText(i) = "BACKWAREN BEZUG"
    i = i + 1: lRAGN(i) = 2571: sRText(i) = "BROETCHEN BEZUG"
    i = i + 1: lRAGN(i) = 2572: sRText(i) = "WEISSBROT BAGUETTE BEZUG"
    i = i + 1: lRAGN(i) = 2573: sRText(i) = "BROT BEZUG"
    i = i + 1: lRAGN(i) = 2574: sRText(i) = "KUCHEN TORTEN BEZUG"
    i = i + 1: lRAGN(i) = 2575: sRText(i) = "TEILCHEN BEZUG"
    i = i + 1: lRAGN(i) = 2580: sRText(i) = "SUESSWAREN BEZUG"
    i = i + 1: lRAGN(i) = 2581: sRText(i) = "SCHOKOLADE/RIEGEL BEZUG"
    i = i + 1: lRAGN(i) = 2582: sRText(i) = "SUESSGEBAECK BEZUG"
    i = i + 1: lRAGN(i) = 2583: sRText(i) = "SALZGEBAECK BEZUG"
    i = i + 1: lRAGN(i) = 2590: sRText(i) = "GETRAENKE BEZUG"
    i = i + 1: lRAGN(i) = 2591: sRText(i) = "BIER BEZUG"
    i = i + 1: lRAGN(i) = 2592: sRText(i) = "WASSER BEZUG"
    i = i + 1: lRAGN(i) = 2593: sRText(i) = "COLA UND LIMONADEN BEZUG"
    i = i + 1: lRAGN(i) = 2594: sRText(i) = "SAEFTE BEZUG"
    i = i + 1: lRAGN(i) = 2595: sRText(i) = "WEIN/SEKT BEZUG"
    i = i + 1: lRAGN(i) = 2596: sRText(i) = "SPIRITUOSEN BEZUG"
    i = i + 1: lRAGN(i) = 2600: sRText(i) = "MEHL ZUCKER UND EINMACHPRODUKT"
    i = i + 1: lRAGN(i) = 2610: sRText(i) = "MEHL"
    i = i + 1: lRAGN(i) = 2611: sRText(i) = "MEHL"
    i = i + 1: lRAGN(i) = 2620: sRText(i) = "ZUCKER"
    i = i + 1: lRAGN(i) = 2621: sRText(i) = "ZUCKER INKL. TRAUBENZUCKER STR"
    i = i + 1: lRAGN(i) = 2630: sRText(i) = "EINMACHPRODUKTE V-MWST."
    i = i + 1: lRAGN(i) = 2631: sRText(i) = "EINMACHPRODUKTE V-MWST."
    i = i + 1: lRAGN(i) = 2640: sRText(i) = "EINMACHPRODUKTE E-MWST."
    i = i + 1: lRAGN(i) = 2641: sRText(i) = "EINMACHPRODUKTE E-MWST."
    i = i + 1: lRAGN(i) = 2700: sRText(i) = "NAEHRMITTEL"
    i = i + 1: lRAGN(i) = 2710: sRText(i) = "KARTOFFELTROCKENPRODUKTE"
    i = i + 1: lRAGN(i) = 2711: sRText(i) = "KNOEDEL"
    i = i + 1: lRAGN(i) = 2712: sRText(i) = "PUEREE"
    i = i + 1: lRAGN(i) = 2713: sRText(i) = "KARTOFFELPUFFER/BRATKARTOFFELN"
    i = i + 1: lRAGN(i) = 2714: sRText(i) = "KARTOFFEL-FERTIGGERICHTE"
    i = i + 1: lRAGN(i) = 2720: sRText(i) = "TEIGWAREN"
    i = i + 1: lRAGN(i) = 2721: sRText(i) = "DEUTSCHE TEIGWAREN BIS 250 G"
    i = i + 1: lRAGN(i) = 2722: sRText(i) = "DEUTSCHE TEIGWAREN UEBER 250 G"
    i = i + 1: lRAGN(i) = 2723: sRText(i) = "SCHWEIZER TEIGWAREN"
    i = i + 1: lRAGN(i) = 2724: sRText(i) = "ITALIENISCHE TEIGWAREN"
    i = i + 1: lRAGN(i) = 2725: sRText(i) = "INT.TEIGWAREN / GLAS-REISNUDE"
    i = i + 1: lRAGN(i) = 2730: sRText(i) = "PANIERMEHL SEMMELBROESEL"
    i = i + 1: lRAGN(i) = 2731: sRText(i) = "PANIERMEHL SEMMELBROESEL"
    i = i + 1: lRAGN(i) = 2740: sRText(i) = "REIS"
    i = i + 1: lRAGN(i) = 2741: sRText(i) = "REIS NORMALVERPACKUNG"
    i = i + 1: lRAGN(i) = 2742: sRText(i) = "REIS IM KOCHBEUTEL"
    i = i + 1: lRAGN(i) = 2743: sRText(i) = "REIS-SPEZIALITAETEN"
    i = i + 1: lRAGN(i) = 2750: sRText(i) = "HUELSENFRUECHTE"
    i = i + 1: lRAGN(i) = 2751: sRText(i) = "HUELSENFRUECHTE"
    i = i + 1: lRAGN(i) = 2760: sRText(i) = "STAERKEMITTEL GRIES"
    i = i + 1: lRAGN(i) = 2761: sRText(i) = "STAERKEMITTEL GRIES"
    i = i + 1: lRAGN(i) = 2770: sRText(i) = "HAFERFLOCKEN MUESLI CEREALIEN"
    i = i + 1: lRAGN(i) = 2771: sRText(i) = "HAFERFLOCKEN"
    i = i + 1: lRAGN(i) = 2772: sRText(i) = "MUESLI"
    i = i + 1: lRAGN(i) = 2773: sRText(i) = "MUESLI-RIEGEL"
    i = i + 1: lRAGN(i) = 2774: sRText(i) = "CEREALIEN"
    i = i + 1: lRAGN(i) = 2775: sRText(i) = "GETREIDE"
    i = i + 1: lRAGN(i) = 2776: sRText(i) = "OEL- U. KEIMSAATEN"
    i = i + 1: lRAGN(i) = 2780: sRText(i) = "BULK FOOD NAEHRMITTEL"
    i = i + 1: lRAGN(i) = 2781: sRText(i) = "BULK FOOD NAEHRMITTEL"
    i = i + 1: lRAGN(i) = 2800: sRText(i) = "BACKARTIKEL PUDDING"
    i = i + 1: lRAGN(i) = 2810: sRText(i) = "NUESSE MANDELN SULTANINEN"
    i = i + 1: lRAGN(i) = 2811: sRText(i) = "NUESSE"
    i = i + 1: lRAGN(i) = 2812: sRText(i) = "MANDELN"
    i = i + 1: lRAGN(i) = 2813: sRText(i) = "SULTAN. KORINTH. KOKOSRAS. USW"
    i = i + 1: lRAGN(i) = 2820: sRText(i) = "FERTIGTEIG BACKMISCHUNGEN"
    i = i + 1: lRAGN(i) = 2821: sRText(i) = "BACKMISCHUNGEN"
    i = i + 1: lRAGN(i) = 2830: sRText(i) = "TORTENGUSS"
    i = i + 1: lRAGN(i) = 2831: sRText(i) = "TORTENGUSS"
    i = i + 1: lRAGN(i) = 2840: sRText(i) = "BACKZUTATEN SONSTIGE BACKARTIK"
    i = i + 1: lRAGN(i) = 2841: sRText(i) = "BACKZUTATEN BACKHILFEN"
    i = i + 1: lRAGN(i) = 2842: sRText(i) = "KUVERTUER. BLOCKSCHOKO. GLAS"
    i = i + 1: lRAGN(i) = 2843: sRText(i) = "AROMEN"
    i = i + 1: lRAGN(i) = 2844: sRText(i) = "BACKDEKOR"
    i = i + 1: lRAGN(i) = 2850: sRText(i) = "SONSTIGE BACKHILFEN V-MWST."
    i = i + 1: lRAGN(i) = 2851: sRText(i) = "SONSTIGE BACKHILFEN V-MWST"
    i = i + 1: lRAGN(i) = 2860: sRText(i) = "PUDDING-/DESSERTPULVER"
    i = i + 1: lRAGN(i) = 2861: sRText(i) = "PUDDING- / DESSERTPULVER"
    i = i + 1: lRAGN(i) = 2900: sRText(i) = "BABYNAHRUNG"
    i = i + 1: lRAGN(i) = 2910: sRText(i) = "BABYKOST GLAS"
    i = i + 1: lRAGN(i) = 2911: sRText(i) = "GEMUESE BABYKOST (GLAS)"
    i = i + 1: lRAGN(i) = 2912: sRText(i) = "FRUECHTE BABYKOST-GLAS/SCHALE"
    i = i + 1: lRAGN(i) = 2913: sRText(i) = "MENUES BABYKOST (GLAS/SCHALE)"
    i = i + 1: lRAGN(i) = 2914: sRText(i) = "FERTIGBREIE BABYKOST (GLAS)"
    i = i + 1: lRAGN(i) = 2920: sRText(i) = "FERTIGBREIE BABYKOST (PK/DOSE)"
    i = i + 1: lRAGN(i) = 2921: sRText(i) = "FERTIGBREIE BABYKOST (PK/DOSE)"
    i = i + 1: lRAGN(i) = 2930: sRText(i) = "NAEHRMITTEL/MILCH/PULVER/PRODU"
    i = i + 1: lRAGN(i) = 2931: sRText(i) = "NAEHRMITTEL/MILCH/PULVER/PRODU"
    i = i + 1: lRAGN(i) = 2940: sRText(i) = "SUESSWAREN/SNACKS BABYKOST"
    i = i + 1: lRAGN(i) = 2941: sRText(i) = "SUESSWAREN/SNACKS BABYKOST"
    i = i + 1: lRAGN(i) = 2950: sRText(i) = "TEE BABYKOST"
    i = i + 1: lRAGN(i) = 2951: sRText(i) = "TEE BABYKOST"
    i = i + 1: lRAGN(i) = 2960: sRText(i) = "FRUCHTSAFT/FENCHELH/TEE EMWST"
    i = i + 1: lRAGN(i) = 2970: sRText(i) = "FRUCHTS./FENCHELHON/TEE VMWST"
    i = i + 1: lRAGN(i) = 2971: sRText(i) = "FRUCHTS./FENCHELH./TEE VMWST"
   

        
    For j = 0 To i
        sSQL = "Insert into ReweAGN (REWEAGN,REWEAGTEXT) values (" & lRAGN(j) & ",'" & sRText(j) & "')"
        gdBase.Execute sSQL, dbFailOnError
    Next j
        
Exit Sub
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "FuelleReweAgn"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1

End Sub
Private Sub FuelleReweAgn2()
    On Error GoTo LOKAL_ERROR

    Dim sSQL As String
    Dim lRAGN(3000) As Long
    Dim sRText(3000) As String
    Dim i As Integer
    Dim j As Integer
    
    i = -1
    
    
    i = i + 1: lRAGN(i) = 3000: sRText(i) = "BIO-DIAETKOST/HEIL-STAERKUNG"
    i = i + 1: lRAGN(i) = 3010: sRText(i) = "DIAET-KONSERVEN/FERTIGGERICHTE"
    i = i + 1: lRAGN(i) = 3011: sRText(i) = "DIAET-KONSERVEN/OBST U. GEMUES"
    i = i + 1: lRAGN(i) = 3020: sRText(i) = "DIAET-BROTAUFSTRICH"
    i = i + 1: lRAGN(i) = 3021: sRText(i) = "DIAET-BROTAUFSTRICH"
    i = i + 1: lRAGN(i) = 3022: sRText(i) = "VEGETARISCHE BROTAUFSTRICHE"
    i = i + 1: lRAGN(i) = 3030: sRText(i) = "SÜSSUNGSMIT.-STOFF/DIABET.ZUCK"
    i = i + 1: lRAGN(i) = 3031: sRText(i) = "SUESSSTOFF U. DIABETIKERZUCKER"
    i = i + 1: lRAGN(i) = 3032: sRText(i) = "SÜSSUNGSMITTEL - BIO"
    i = i + 1: lRAGN(i) = 3040: sRText(i) = "REDUKTIONSKOST/SPORTLERNAHRUNG"
    i = i + 1: lRAGN(i) = 3041: sRText(i) = "REDUKTIONSKOST"
    i = i + 1: lRAGN(i) = 3042: sRText(i) = "EIWEISS/MINERAL/RIEGEL/SPORTLE"
    i = i + 1: lRAGN(i) = 3050: sRText(i) = "HEIL- U. STAERKUNGSMITTEL E-MW"
    i = i + 1: lRAGN(i) = 3051: sRText(i) = "HEIL-/STAERKUNGSM. E-MWST FREI"
    i = i + 1: lRAGN(i) = 3052: sRText(i) = "DIAETGETRAENKE E-MWST"
    i = i + 1: lRAGN(i) = 3053: sRText(i) = "HEILTEE E-MWST"
    i = i + 1: lRAGN(i) = 3054: sRText(i) = "NAHRUNGSERGÄNZ.HAUT(KAP/TABL)"
    i = i + 1: lRAGN(i) = 3060: sRText(i) = "HEIL- U. STAERKUNGSMITTEL V-MW"
    i = i + 1: lRAGN(i) = 3061: sRText(i) = "HEIL-/STAERKUNGSM. V-MWST FREI"
    i = i + 1: lRAGN(i) = 3062: sRText(i) = "DIAETGETRAENKE V-MWST"
    i = i + 1: lRAGN(i) = 3063: sRText(i) = "HEILTEE V-MWST"
    i = i + 1: lRAGN(i) = 3064: sRText(i) = "GESUNDHEITS/-ERKAELTUNGSBAEDER"
    i = i + 1: lRAGN(i) = 3070: sRText(i) = "DIAET-SUESSWAREN U. GEBAECK"
    i = i + 1: lRAGN(i) = 3071: sRText(i) = "DIAET-SUESSWAREN"
    i = i + 1: lRAGN(i) = 3072: sRText(i) = "DIAET-GEBAECK"
    i = i + 1: lRAGN(i) = 3080: sRText(i) = "BIOKOST/VOLLW/REFORM E-MWST"
    i = i + 1: lRAGN(i) = 3081: sRText(i) = "BIO-/VOLLWERT-/REFORMKO.E-MWST"
    i = i + 1: lRAGN(i) = 3082: sRText(i) = "MAKROBIOTIK E-MWST"
    i = i + 1: lRAGN(i) = 3083: sRText(i) = "SOJA BIO"
    i = i + 1: lRAGN(i) = 3084: sRText(i) = "TOFU / SEITAN"
    i = i + 1: lRAGN(i) = 3085: sRText(i) = "FEINKOST NICHT GEKÜHLT (BIO)"
    i = i + 1: lRAGN(i) = 3086: sRText(i) = "SOJA-REIS- UND HAFERGETRÄNKE"
    i = i + 1: lRAGN(i) = 3090: sRText(i) = "BIOKOST/VOLLW/REFORM V-MWST"
    i = i + 1: lRAGN(i) = 3091: sRText(i) = "BIO-/VOLLWERT-/REFORMKO.V-MWST"
    i = i + 1: lRAGN(i) = 3092: sRText(i) = "MAKROBIOTIK V-MWST"
    i = i + 1: lRAGN(i) = 3093: sRText(i) = "SOJA-REIS- U. HAFERGETR.V-MWST"
    i = i + 1: lRAGN(i) = 3100: sRText(i) = "SUPPEN U. FERTIGGERICHTE"
    i = i + 1: lRAGN(i) = 3110: sRText(i) = "TROCKENSUPPEN"
    i = i + 1: lRAGN(i) = 3111: sRText(i) = "TROCKENSUPPEN-BEUTEL/-PAECKCHE"
    i = i + 1: lRAGN(i) = 3112: sRText(i) = "INSTANTSUPPEN"
    i = i + 1: lRAGN(i) = 3113: sRText(i) = "SUPPENZUTATEN"
    i = i + 1: lRAGN(i) = 3120: sRText(i) = "DOSENSUPPEN"
    i = i + 1: lRAGN(i) = 3121: sRText(i) = "SUPPEN UND EINTÖPFE BIS 426ML"
    i = i + 1: lRAGN(i) = 3122: sRText(i) = "SUPPEN UND EINTÖPFE 427-850ML"
    i = i + 1: lRAGN(i) = 3123: sRText(i) = "SUPPEN/EINTÖPFE AB 851ML"
    i = i + 1: lRAGN(i) = 3124: sRText(i) = "FERTIGGERICHTE NASS TEIGWAREN"
    i = i + 1: lRAGN(i) = 3130: sRText(i) = "FERTIGGERICHTE KONSERVEN"
    i = i + 1: lRAGN(i) = 3140: sRText(i) = "FERTIGGERICHTE TROCKEN"
    i = i + 1: lRAGN(i) = 3141: sRText(i) = "FERTIGGERICHTE TROCKEN TEIGWAR"
    i = i + 1: lRAGN(i) = 3142: sRText(i) = "FERTIGGERICHTE INSTANT"
    i = i + 1: lRAGN(i) = 3150: sRText(i) = "FERTIGGERICHTE SCHALEN"
    i = i + 1: lRAGN(i) = 3151: sRText(i) = "FERTIGGERICHTE SCHALEN"
    i = i + 1: lRAGN(i) = 3200: sRText(i) = "GEWUERZE SALZ ESSIG OEL SENF"
    i = i + 1: lRAGN(i) = 3210: sRText(i) = "SALZ"
    i = i + 1: lRAGN(i) = 3211: sRText(i) = "SALZ E-MWST"
    i = i + 1: lRAGN(i) = 3220: sRText(i) = "ESSIG UND ESSIGESSENZ"
    i = i + 1: lRAGN(i) = 3221: sRText(i) = "ESSIG UND ESSIGESSENZ"
    i = i + 1: lRAGN(i) = 3222: sRText(i) = "BALSAMICO ESSIGE"
    i = i + 1: lRAGN(i) = 3230: sRText(i) = "SPEISEOEL"
    i = i + 1: lRAGN(i) = 3231: sRText(i) = "SPEISEOEL"
    i = i + 1: lRAGN(i) = 3240: sRText(i) = "SENF/MEERRETTICH"
    i = i + 1: lRAGN(i) = 3241: sRText(i) = "SENF TUBE/PORTION"
    i = i + 1: lRAGN(i) = 3242: sRText(i) = "SENF GLAS/BECHER/TASSE"
    i = i + 1: lRAGN(i) = 3243: sRText(i) = "MEERRETTICH GLAS/TUBE"
    i = i + 1: lRAGN(i) = 3250: sRText(i) = "GEWUERZE (INKL. BORDE)"
    i = i + 1: lRAGN(i) = 3251: sRText(i) = "GEWUERZE BEUTEL"
    i = i + 1: lRAGN(i) = 3252: sRText(i) = "GEWUERZE STREUER/ROESTZWIEBEL"
    i = i + 1: lRAGN(i) = 3260: sRText(i) = "WUERZEN / WUERZMISCHUNGEN"
    i = i + 1: lRAGN(i) = 3261: sRText(i) = "WUERZEN / WUERZMISCHUNGEN"
    i = i + 1: lRAGN(i) = 3300: sRText(i) = "SAUCEN BRUEHEN FEINKOST"
    i = i + 1: lRAGN(i) = 3310: sRText(i) = "SAUCEN U. FIXPRODUKTE"
    i = i + 1: lRAGN(i) = 3311: sRText(i) = "SAUCEN"
    i = i + 1: lRAGN(i) = 3312: sRText(i) = "FIXPRODUKTE"
    i = i + 1: lRAGN(i) = 3320: sRText(i) = "BRUEHEN U. BOUILLONS"
    i = i + 1: lRAGN(i) = 3321: sRText(i) = "BRUEHEN U. BOUILLONS"
    i = i + 1: lRAGN(i) = 3330: sRText(i) = "KETCHUP UND FERTIGSAUCEN"
    i = i + 1: lRAGN(i) = 3331: sRText(i) = "GRILLSAUCEN"
    i = i + 1: lRAGN(i) = 3332: sRText(i) = "KETCHUP"
    i = i + 1: lRAGN(i) = 3333: sRText(i) = "TOMATENMARK U. -SAUCEN"
    i = i + 1: lRAGN(i) = 3334: sRText(i) = "NUDELFERTIGSAUCEN"
    i = i + 1: lRAGN(i) = 3335: sRText(i) = "FERTIGSAUCEN SPEZIALITÄTEN"
    i = i + 1: lRAGN(i) = 3336: sRText(i) = "WÜRZSAUCEN NASS/FLÜSSIG"
    i = i + 1: lRAGN(i) = 3340: sRText(i) = "FEINKOST NICHT GEKUEHLT E-MWST"
    i = i + 1: lRAGN(i) = 3341: sRText(i) = "OLIVEN/KNOBL./KAPERN/ARTISCH./"
    i = i + 1: lRAGN(i) = 3342: sRText(i) = "SALATSAUCEN NASS"
    i = i + 1: lRAGN(i) = 3344: sRText(i) = "SPEZIALITAETEN/EXOTEN"
    i = i + 1: lRAGN(i) = 3345: sRText(i) = "SCHNECKEN"
    i = i + 1: lRAGN(i) = 3346: sRText(i) = "GETROCKNETE PILZE"
    i = i + 1: lRAGN(i) = 3347: sRText(i) = "SALATSAUCEN TROCKEN"
    i = i + 1: lRAGN(i) = 3350: sRText(i) = "FEINKOST NICHT GEKUEHLT V-MWST"
    i = i + 1: lRAGN(i) = 3351: sRText(i) = "FEINKOST NICHT GEKUEHLT V-MWST."
    i = i + 1: lRAGN(i) = 3352: sRText(i) = "SALZ V-MWST"
    i = i + 1: lRAGN(i) = 3360: sRText(i) = "MAYONNAISE"
    i = i + 1: lRAGN(i) = 3361: sRText(i) = "MAYONNAISE TUBE/PORTIONEN"
    i = i + 1: lRAGN(i) = 3362: sRText(i) = "MAYONNAISE GLAS/BECHER/TASSE"
    i = i + 1: lRAGN(i) = 3370: sRText(i) = "REMOULADE"
    i = i + 1: lRAGN(i) = 3371: sRText(i) = "REMOULADE TUBE/PORTION"
    i = i + 1: lRAGN(i) = 3372: sRText(i) = "REMOULADE GLAS/BECHER/TASSE"
    i = i + 1: lRAGN(i) = 3400: sRText(i) = "BROTAUFSTRICH/FERTIGSAUCEN"
    i = i + 1: lRAGN(i) = 3410: sRText(i) = "FRUCHTBROTAUFSTRICHE"
    i = i + 1: lRAGN(i) = 3411: sRText(i) = "KONFITUEREN/MARMELADEN/GELEES"
    i = i + 1: lRAGN(i) = 3412: sRText(i) = "LEICHTKONFIT./-MARMELAD./-GELE"
    i = i + 1: lRAGN(i) = 3413: sRText(i) = "MUS- KRAUT- U. SIRUPAUFSTRICH"
    i = i + 1: lRAGN(i) = 3420: sRText(i) = "NUSS-SCHOKO-CREME"
    i = i + 1: lRAGN(i) = 3421: sRText(i) = "NUSS-SCHOKO-CREME"
    i = i + 1: lRAGN(i) = 3430: sRText(i) = "HONIG"
    i = i + 1: lRAGN(i) = 3431: sRText(i) = "HONIG"
    i = i + 1: lRAGN(i) = 3450: sRText(i) = "SUESSE FERTIGSAUCEN"
    i = i + 1: lRAGN(i) = 3451: sRText(i) = "SUESSE FERTIGSAUCEN"
    i = i + 1: lRAGN(i) = 3500: sRText(i) = "FLEISCH- WURST-U. FISCHKONSERV"
    i = i + 1: lRAGN(i) = 3510: sRText(i) = "FLEISCH- U. WILDKONSERVEN"
    i = i + 1: lRAGN(i) = 3511: sRText(i) = "FLEISCH- U. WILDKONSERVEN"
    i = i + 1: lRAGN(i) = 3520: sRText(i) = "WURSTKONSERVEN/PASTETEN"
    i = i + 1: lRAGN(i) = 3521: sRText(i) = "WURSTKONSERVEN"
    i = i + 1: lRAGN(i) = 3522: sRText(i) = "PASTETEN (WURST)"
    i = i + 1: lRAGN(i) = 3530: sRText(i) = "WUERSTCHENKONSERVEN"
    i = i + 1: lRAGN(i) = 3531: sRText(i) = "WUERSTCHENKONSERVEN"
    i = i + 1: lRAGN(i) = 3540: sRText(i) = "SUELZEN"
    i = i + 1: lRAGN(i) = 3541: sRText(i) = "SUELZEN"
    i = i + 1: lRAGN(i) = 3550: sRText(i) = "FISCHKONSERVEN U. -PRAESERVEN"
    i = i + 1: lRAGN(i) = 3551: sRText(i) = "HERINGS- U. MAKRELENFILETS"
    i = i + 1: lRAGN(i) = 3552: sRText(i) = "THUNFISCH"
    i = i + 1: lRAGN(i) = 3553: sRText(i) = "OELSARDINEN"
    i = i + 1: lRAGN(i) = 3554: sRText(i) = "PRAESERVEN"
    i = i + 1: lRAGN(i) = 3555: sRText(i) = "MEERESFRUECHTE (KONSERVEN)"
    i = i + 1: lRAGN(i) = 3556: sRText(i) = "RAEUCHERFISCH"
    i = i + 1: lRAGN(i) = 3557: sRText(i) = "PASTETEN (FISCHKONSERVEN)"
    i = i + 1: lRAGN(i) = 3600: sRText(i) = "OBST- U. GEMUESEKONSERVEN"
    i = i + 1: lRAGN(i) = 3610: sRText(i) = "OBSTKONSERVEN GLAS/PACKUNG"
    i = i + 1: lRAGN(i) = 3611: sRText(i) = "OBSTKONSERVEN GLAS/PACKUNG"
    i = i + 1: lRAGN(i) = 3620: sRText(i) = "OBSTKONSERVEN DOSE"
    i = i + 1: lRAGN(i) = 3621: sRText(i) = "OBSTKONSERVEN DOSE"
    i = i + 1: lRAGN(i) = 3630: sRText(i) = "GEMUESE GLAS"
    i = i + 1: lRAGN(i) = 3631: sRText(i) = "GEMUESE GLAS/PACKUNG"
    i = i + 1: lRAGN(i) = 3632: sRText(i) = "ANTIPASTI GLAS MED."
    i = i + 1: lRAGN(i) = 3640: sRText(i) = "GEMUESE DOSE"
    i = i + 1: lRAGN(i) = 3641: sRText(i) = "GEMUESE DOSE"
    i = i + 1: lRAGN(i) = 3650: sRText(i) = "PILZKONSERVEN"
    i = i + 1: lRAGN(i) = 3651: sRText(i) = "PILZKONSERVEN"
    i = i + 1: lRAGN(i) = 3660: sRText(i) = "SPARGELKONSERVEN"
    i = i + 1: lRAGN(i) = 3661: sRText(i) = "SPARGELKONSERVEN"
    i = i + 1: lRAGN(i) = 3670: sRText(i) = "SCHAEL U. PIZZATOMATEN"
    i = i + 1: lRAGN(i) = 3671: sRText(i) = "SCHAEL U. PIZZATOMATEN"
    i = i + 1: lRAGN(i) = 3680: sRText(i) = "SAUERKRAUT/ROTKRAUT"
    i = i + 1: lRAGN(i) = 3681: sRText(i) = "SAUERKRAUT"
    i = i + 1: lRAGN(i) = 3682: sRText(i) = "ROTKRAUT"
    i = i + 1: lRAGN(i) = 3690: sRText(i) = "SAUERKONSERVEN/GURKEN"
    i = i + 1: lRAGN(i) = 3691: sRText(i) = "GURKEN (KONSERVEN)"
    i = i + 1: lRAGN(i) = 3692: sRText(i) = "SONSTIGE SAUERKONSERVEN"
    i = i + 1: lRAGN(i) = 3700: sRText(i) = "LEBENSMITTEL  GILT BIS 311204"
    i = i + 1: lRAGN(i) = 3710: sRText(i) = "LEBENSMITTEL  GILT BIS 12/04"
    i = i + 1: lRAGN(i) = 3800: sRText(i) = "SCHOKOLADENWAREN"
    i = i + 1: lRAGN(i) = 3810: sRText(i) = "SCHOKOLADE MASSIV"
    i = i + 1: lRAGN(i) = 3811: sRText(i) = "SCHOKOLADE BIS 100 G"
    i = i + 1: lRAGN(i) = 3812: sRText(i) = "SCHOKOLADE UEBER 100 G"
    i = i + 1: lRAGN(i) = 3830: sRText(i) = "SCHOKORIEGEL"
    i = i + 1: lRAGN(i) = 3831: sRText(i) = "SCHOKORIEGEL EINZEL"
    i = i + 1: lRAGN(i) = 3832: sRText(i) = "SCHOKORIEGEL MULTIS"
    i = i + 1: lRAGN(i) = 3833: sRText(i) = "SCHOKORIEGEL MINIS"
    i = i + 1: lRAGN(i) = 3840: sRText(i) = "SPEZIALITAETEN/S.SCHOKOLADENWA"
    i = i + 1: lRAGN(i) = 3844: sRText(i) = "SCHOKODRAGEES"
    i = i + 1: lRAGN(i) = 3845: sRText(i) = "SPEZIALI./KANDIERTE SCHOKO/PUF"
    i = i + 1: lRAGN(i) = 3850: sRText(i) = "PRALINEN"
    i = i + 1: lRAGN(i) = 3851: sRText(i) = "MONOPRALINEN"
    i = i + 1: lRAGN(i) = 3852: sRText(i) = "PRALINENMISCHUNGEN"
    i = i + 1: lRAGN(i) = 3853: sRText(i) = "PRALINEN MIT ALKOHOL"
    i = i + 1: lRAGN(i) = 3860: sRText(i) = "PRALINENAEHNLICHE PRODUKTE"
    i = i + 1: lRAGN(i) = 3861: sRText(i) = "PRALINENAEHNLICHE PRODUKTE"
    i = i + 1: lRAGN(i) = 3900: sRText(i) = "ZUCKERWAREN"
    i = i + 1: lRAGN(i) = 3910: sRText(i) = "BONBONS"
    i = i + 1: lRAGN(i) = 3911: sRText(i) = "FRUCHTBONBONS"
    i = i + 1: lRAGN(i) = 3912: sRText(i) = "KARAMEL-/SCHOKOBONBONS"
    i = i + 1: lRAGN(i) = 3913: sRText(i) = "KRAEUTER-/HUSTENBONBONS (FRUCH"
    i = i + 1: lRAGN(i) = 3914: sRText(i) = "BRAUSE-/KAUBONBONS/TRAUBENZ.TA"
    i = i + 1: lRAGN(i) = 3915: sRText(i) = "LUTSCHER"
    i = i + 1: lRAGN(i) = 3920: sRText(i) = "KAUGUMMI"
    i = i + 1: lRAGN(i) = 3921: sRText(i) = "KAUGUMMI EINZELN"
    i = i + 1: lRAGN(i) = 3922: sRText(i) = "KAUGUMMI MULTI"
    i = i + 1: lRAGN(i) = 3930: sRText(i) = "KAUGUMMI U. SUESSWAREN V-MWST."
    i = i + 1: lRAGN(i) = 3931: sRText(i) = "KAUGUMMI  V-MWST"
    i = i + 1: lRAGN(i) = 3932: sRText(i) = "SUESSWAREN  V-MWST"
    i = i + 1: lRAGN(i) = 3940: sRText(i) = "FRUCHTGUMMI LAKRITZE"
    i = i + 1: lRAGN(i) = 3941: sRText(i) = "FRUCHTGUMMI LAKRITZE"
    i = i + 1: lRAGN(i) = 3950: sRText(i) = "SONSTIGE SUESSWAREN(+GELEEFR.)"
    i = i + 1: lRAGN(i) = 3951: sRText(i) = "SONST.SUESSWAREN(+GELEE/EISKON"
    i = i + 1: lRAGN(i) = 3960: sRText(i) = "BULK FOOD SUESSWAREN"
    i = i + 1: lRAGN(i) = 3961: sRText(i) = "BULK FOOD SUESSWAREN"
    i = i + 1: lRAGN(i) = 4000: sRText(i) = "GEBAECK"
    i = i + 1: lRAGN(i) = 4010: sRText(i) = "SUESSGEBAECK"
    i = i + 1: lRAGN(i) = 4011: sRText(i) = "SUESSGEBAECK BEUTEL"
    i = i + 1: lRAGN(i) = 4012: sRText(i) = "SUESSGEBAECK PACKUNG/DOSE MONO"
    i = i + 1: lRAGN(i) = 4013: sRText(i) = "SUESSGEBAECK PACK./DOSE MISCHU"
    i = i + 1: lRAGN(i) = 4014: sRText(i) = "SUESSGEBAECK ROLLEN"
    i = i + 1: lRAGN(i) = 4015: sRText(i) = "EISTUETEN - WAFFELN"
    i = i + 1: lRAGN(i) = 4020: sRText(i) = "SALZGEBAECK/SNACKS"
    
    
    i = i + 1: lRAGN(i) = 4021: sRText(i) = "LAUGENGEBAECK"
    i = i + 1: lRAGN(i) = 4022: sRText(i) = "CRAECKER,KAESE-,REISGEBAECK"
    i = i + 1: lRAGN(i) = 4023: sRText(i) = "CHIPS UND STICKS"
    i = i + 1: lRAGN(i) = 4024: sRText(i) = "EXTRUDER"
    i = i + 1: lRAGN(i) = 4025: sRText(i) = "INTERN. CHIPS-SPEZIALITAETEN"
    i = i + 1: lRAGN(i) = 4030: sRText(i) = "KNABBERKERNE"
    i = i + 1: lRAGN(i) = 4031: sRText(i) = "ERDNUESSE, SONST.KERNE"
    i = i + 1: lRAGN(i) = 4032: sRText(i) = "STUDENTENFUTTER"
    i = i + 1: lRAGN(i) = 4033: sRText(i) = "POPKORN"
    i = i + 1: lRAGN(i) = 4200: sRText(i) = "WEIN"
    i = i + 1: lRAGN(i) = 4210: sRText(i) = "WEISSWEIN DEUTSCHLAND TEIL 1"
    i = i + 1: lRAGN(i) = 4211: sRText(i) = "WEISSWEIN BADEN"
    i = i + 1: lRAGN(i) = 4212: sRText(i) = "WEISSWEIN WUERTTEMBERG"
    i = i + 1: lRAGN(i) = 4213: sRText(i) = "WEISSWEIN MOSEL"
    i = i + 1: lRAGN(i) = 4214: sRText(i) = "WEISSWEIN RHEINGAU"
    i = i + 1: lRAGN(i) = 4215: sRText(i) = "WEISSWEIN RHEINHESSEN"
    i = i + 1: lRAGN(i) = 4216: sRText(i) = "WEISSWEIN PFALZ"
    i = i + 1: lRAGN(i) = 4217: sRText(i) = "WEISSWEIN FRANKEN"
    i = i + 1: lRAGN(i) = 4218: sRText(i) = "WEISSWEIN AHR"
    i = i + 1: lRAGN(i) = 4219: sRText(i) = "WEISSWEIN NAHE"
    i = i + 1: lRAGN(i) = 4220: sRText(i) = "WEISSWEIN DEUTSCHLAND TEIL 2"
    i = i + 1: lRAGN(i) = 4221: sRText(i) = "WEISSWEIN HESS. BERGSTRASSE"
    i = i + 1: lRAGN(i) = 4222: sRText(i) = "WEISSWEIN SAALE-UNSTRUT"
    i = i + 1: lRAGN(i) = 4223: sRText(i) = "WEISSWEIN SACHSEN"
    i = i + 1: lRAGN(i) = 4224: sRText(i) = "WEISSWEIN SONSTIGE DEUTSCHLAND"
    i = i + 1: lRAGN(i) = 4230: sRText(i) = "WEISSWEIN AUSLAND EUROPA"
    i = i + 1: lRAGN(i) = 4231: sRText(i) = "WEISSWEIN FRANKREICH"
    i = i + 1: lRAGN(i) = 4232: sRText(i) = "WEISSWEIN ITALIEN"
    i = i + 1: lRAGN(i) = 4233: sRText(i) = "WEISSWEIN GRIECHENLAND"
    i = i + 1: lRAGN(i) = 4234: sRText(i) = "WEISSWEIN SPANIEN/PORTUGAL"
    i = i + 1: lRAGN(i) = 4235: sRText(i) = "WEISSWEIN OSTEUROPA"
    i = i + 1: lRAGN(i) = 4236: sRText(i) = "WEISSWEIN ÖSTERREICH/SCHWEIZ"
    i = i + 1: lRAGN(i) = 4237: sRText(i) = "WEISSWEIN EG-TAFELWEIN"
    i = i + 1: lRAGN(i) = 4238: sRText(i) = "WEISSWEIN SONSTIGE EUROPA"
    i = i + 1: lRAGN(i) = 4240: sRText(i) = "WEISSWEIN AUSLAND ÜBERSEE"
    i = i + 1: lRAGN(i) = 4241: sRText(i) = "WEISSWEIN CHILE"
    i = i + 1: lRAGN(i) = 4242: sRText(i) = "WEISSWEIN ARGENTINIEN"
    i = i + 1: lRAGN(i) = 4243: sRText(i) = "WEISSWEIN AUSTRALIEN/NEUSEELAND"
    i = i + 1: lRAGN(i) = 4244: sRText(i) = "WEISSWEIN ASIEN"
    i = i + 1: lRAGN(i) = 4245: sRText(i) = "WEISSWEIN USA"
    i = i + 1: lRAGN(i) = 4246: sRText(i) = "WEISSWEIN AFRIKA"
    i = i + 1: lRAGN(i) = 4250: sRText(i) = "ROTWEIN DEUTSCHLAND TEIL 1"
    i = i + 1: lRAGN(i) = 4251: sRText(i) = "ROTWEIN BADEN"
    i = i + 1: lRAGN(i) = 4252: sRText(i) = "ROTWEIN WUERTTEMBERG"
    i = i + 1: lRAGN(i) = 4253: sRText(i) = "ROTWEIN MOSEL"
    i = i + 1: lRAGN(i) = 4254: sRText(i) = "ROTWEIN RHEINGAU"
    i = i + 1: lRAGN(i) = 4255: sRText(i) = "ROTWEIN RHEINHESSEN"
    i = i + 1: lRAGN(i) = 4256: sRText(i) = "ROTWEIN PFALZ"
    i = i + 1: lRAGN(i) = 4257: sRText(i) = "ROTWEIN FRANKEN"
    i = i + 1: lRAGN(i) = 4258: sRText(i) = "ROTWEIN AHR"
    i = i + 1: lRAGN(i) = 4259: sRText(i) = "ROTWEIN NAHE"
    i = i + 1: lRAGN(i) = 4260: sRText(i) = "ROTWEIN DEUTSCHLAND TEIL 2"
    i = i + 1: lRAGN(i) = 4261: sRText(i) = "ROTWEIN HESS. BERGSTRASSE"
    i = i + 1: lRAGN(i) = 4262: sRText(i) = "ROTWEIN SAALE-UNSTRUT"
    i = i + 1: lRAGN(i) = 4263: sRText(i) = "ROTWEIN SACHSEN"
    i = i + 1: lRAGN(i) = 4264: sRText(i) = "ROTWEIN SONSTIGE DEUTSCHLAND"
    i = i + 1: lRAGN(i) = 4270: sRText(i) = "ROTWEIN AUSLAND EUROPA"
    i = i + 1: lRAGN(i) = 4271: sRText(i) = "ROTWEIN FRANKREICH"
    i = i + 1: lRAGN(i) = 4272: sRText(i) = "ROTWEIN ITALIEN"
    i = i + 1: lRAGN(i) = 4273: sRText(i) = "ROTWEIN SPANIEN / PORTUGAL"
    i = i + 1: lRAGN(i) = 4274: sRText(i) = "ROTWEIN GRIECHENLAND"
    i = i + 1: lRAGN(i) = 4275: sRText(i) = "ROTWEIN ÖSTERREICH/SCHWEIZ"
    i = i + 1: lRAGN(i) = 4276: sRText(i) = "ROTWEIN OSTEUROPA"
    i = i + 1: lRAGN(i) = 4277: sRText(i) = "ROTWEIN EG-TAFELWEIN"
    i = i + 1: lRAGN(i) = 4278: sRText(i) = "ROTWEIN SONSTIGE EUROPA"
    i = i + 1: lRAGN(i) = 4280: sRText(i) = "ROTWEIN AUSLAND ÜBERSEE"
    i = i + 1: lRAGN(i) = 4281: sRText(i) = "ROTWEIN CHILE"
    i = i + 1: lRAGN(i) = 4282: sRText(i) = "ROTWEIN ARGENTINIEN"
    i = i + 1: lRAGN(i) = 4283: sRText(i) = "ROTWEIN AUSTRALIEN/NEUSEELAND"
    i = i + 1: lRAGN(i) = 4284: sRText(i) = "ROTWEIN ASIEN"
    i = i + 1: lRAGN(i) = 4285: sRText(i) = "ROTWEIN USA"
    i = i + 1: lRAGN(i) = 4286: sRText(i) = "ROTWEIN AFRIKA"
    i = i + 1: lRAGN(i) = 4300: sRText(i) = "ROSEWEIN/LIKÖRWEIN/WERMUT"
    i = i + 1: lRAGN(i) = 4310: sRText(i) = "ROSEWEIN DEUTSCHLAND TEIL 1"
    i = i + 1: lRAGN(i) = 4311: sRText(i) = "ROSEWEIN BADEN"
    i = i + 1: lRAGN(i) = 4312: sRText(i) = "ROSEWEIN WUERTTEMBERG"
    i = i + 1: lRAGN(i) = 4313: sRText(i) = "ROSEWEIN MOSEL"
    i = i + 1: lRAGN(i) = 4314: sRText(i) = "ROSEWEIN RHEINGAU"
    i = i + 1: lRAGN(i) = 4315: sRText(i) = "ROSEWEIN RHEINHESSEN"
    i = i + 1: lRAGN(i) = 4316: sRText(i) = "ROSEWEIN PFALZ"
    i = i + 1: lRAGN(i) = 4317: sRText(i) = "ROSEWEIN FRANKEN"
    i = i + 1: lRAGN(i) = 4318: sRText(i) = "ROSEWEIN AHR"
    i = i + 1: lRAGN(i) = 4319: sRText(i) = "ROSEWEIN NAHE"
    i = i + 1: lRAGN(i) = 4320: sRText(i) = "ROSEWEIN DEUTSCHLAND TEIL 2"
    i = i + 1: lRAGN(i) = 4321: sRText(i) = "ROSEWEIN HESS. BERGSTRASSE"
    i = i + 1: lRAGN(i) = 4322: sRText(i) = "ROSEWEIN SAALE-UNSTRUT"
    i = i + 1: lRAGN(i) = 4323: sRText(i) = "ROSEWEIN SACHSEN"
    i = i + 1: lRAGN(i) = 4324: sRText(i) = "ROSEWEIN SONSTIGE DEUTSCHLAND"
    i = i + 1: lRAGN(i) = 4330: sRText(i) = "ROSEWEIN AUSLAND EUROPA"
    i = i + 1: lRAGN(i) = 4331: sRText(i) = "ROSEWEIN FRANKREICH"
    i = i + 1: lRAGN(i) = 4332: sRText(i) = "ROSEWEIN ITALIEN"
    i = i + 1: lRAGN(i) = 4333: sRText(i) = "ROSEWEIN SPANIEN/PORTUGAL"
    i = i + 1: lRAGN(i) = 4334: sRText(i) = "ROSEWEIN GRIECHENLAND"
    i = i + 1: lRAGN(i) = 4335: sRText(i) = "ROSEWEIN ÖSTERREICH/SCHWEIZ"
    i = i + 1: lRAGN(i) = 4336: sRText(i) = "ROSEWEIN OSTEUROPA"
    i = i + 1: lRAGN(i) = 4337: sRText(i) = "ROSEWEIN EG-TAFELWEIN"
    i = i + 1: lRAGN(i) = 4338: sRText(i) = "ROSEWEIN SONSTIGE EUROPA"
    i = i + 1: lRAGN(i) = 4340: sRText(i) = "ROSEWEIN AUSLAND ÜBERSEE"
    i = i + 1: lRAGN(i) = 4341: sRText(i) = "ROSEWEIN CHILE"
    i = i + 1: lRAGN(i) = 4342: sRText(i) = "ROSEWEIN ARGENTINIEN"
    i = i + 1: lRAGN(i) = 4343: sRText(i) = "ROSEWEIN AUSTRALIEN/NEUSEELAND"
    i = i + 1: lRAGN(i) = 4344: sRText(i) = "ROSEWEIN ASIEN"
    i = i + 1: lRAGN(i) = 4345: sRText(i) = "ROSEWEIN USA"
    i = i + 1: lRAGN(i) = 4346: sRText(i) = "ROSEWEIN AFRIKA"
    i = i + 1: lRAGN(i) = 4350: sRText(i) = "LIKÖRWEIN U. WERMUT"
    i = i + 1: lRAGN(i) = 4351: sRText(i) = "SHERRY/MALAGA"
    i = i + 1: lRAGN(i) = 4352: sRText(i) = "PORTWEIN/MADEIRA"
    i = i + 1: lRAGN(i) = 4353: sRText(i) = "WERMUT"
    i = i + 1: lRAGN(i) = 4354: sRText(i) = "LIKÖR-/DESSERTWEIN/ASIA"
    i = i + 1: lRAGN(i) = 4400: sRText(i) = "SPIRITUOSEN"
    i = i + 1: lRAGN(i) = 4410: sRText(i) = "WEINBRAND U. COGNAC"
    i = i + 1: lRAGN(i) = 4411: sRText(i) = "WEINBRAND"
    i = i + 1: lRAGN(i) = 4412: sRText(i) = "COGNAC"
    i = i + 1: lRAGN(i) = 4413: sRText(i) = "WEINB./COGNAC KLEIN- U. MULTIP"
    i = i + 1: lRAGN(i) = 4420: sRText(i) = "KLARE UND KORN"
    i = i + 1: lRAGN(i) = 4421: sRText(i) = "KLARE, KORN, WACHOLDER"
    i = i + 1: lRAGN(i) = 4422: sRText(i) = "OBSTBRAENDE"
    i = i + 1: lRAGN(i) = 4423: sRText(i) = "WODKA"
    i = i + 1: lRAGN(i) = 4424: sRText(i) = "GIN"
    i = i + 1: lRAGN(i) = 4425: sRText(i) = "AQUAVIT"
    i = i + 1: lRAGN(i) = 4426: sRText(i) = "KLARE/KORN MIT FRUCHT"
    i = i + 1: lRAGN(i) = 4427: sRText(i) = "KLARE/KORN KLEIN- U. MULTIPACK"
    i = i + 1: lRAGN(i) = 4428: sRText(i) = "GRAPPA"
    i = i + 1: lRAGN(i) = 4429: sRText(i) = "OUZO"
    i = i + 1: lRAGN(i) = 4430: sRText(i) = "WHISKY"
    i = i + 1: lRAGN(i) = 4431: sRText(i) = "WHISKY"
    i = i + 1: lRAGN(i) = 4432: sRText(i) = "WHISKY KLEIN- U. MULITPACKUNGE"
    i = i + 1: lRAGN(i) = 4440: sRText(i) = "RUM"
    i = i + 1: lRAGN(i) = 4441: sRText(i) = "RUM"
    i = i + 1: lRAGN(i) = 4442: sRText(i) = "RUM KLEIN- U. MULTIPACKUNGEN"
    i = i + 1: lRAGN(i) = 4443: sRText(i) = "CACHACA"
    i = i + 1: lRAGN(i) = 4450: sRText(i) = "LIKOERE"
    i = i + 1: lRAGN(i) = 4451: sRText(i) = "FRUCHT- UND CREMELIKOERE"
    i = i + 1: lRAGN(i) = 4452: sRText(i) = "BITTER- UND KRAEUTERLIKOERE"
    i = i + 1: lRAGN(i) = 4453: sRText(i) = "LIKOERE KLEINFL. U. MULTIPACKU"
    i = i + 1: lRAGN(i) = 4460: sRText(i) = "AUSLAENDISCHE SPIRITUOSEN-SPEZ"
    i = i + 1: lRAGN(i) = 4461: sRText(i) = "AUSLAENDISCHE SPIRITUOSEN SPEZ"
    i = i + 1: lRAGN(i) = 4462: sRText(i) = "PREMIX GETRÄNKE"
    i = i + 1: lRAGN(i) = 4463: sRText(i) = "TEQUILLA"
    i = i + 1: lRAGN(i) = 4464: sRText(i) = "CALVADOS"
    i = i + 1: lRAGN(i) = 4470: sRText(i) = "FRUECHTE IN ALKOHOL"
    i = i + 1: lRAGN(i) = 4471: sRText(i) = "FRUECHTE IN ALKOHOL"
    i = i + 1: lRAGN(i) = 4500: sRText(i) = "BIER"
    i = i + 1: lRAGN(i) = 4510: sRText(i) = "PILS"
    i = i + 1: lRAGN(i) = 4511: sRText(i) = "PILS FLASCHE MEHRWEG"
    i = i + 1: lRAGN(i) = 4512: sRText(i) = "PILS FLASCHE EINWEG"
    i = i + 1: lRAGN(i) = 4513: sRText(i) = "PILS DOSE"
    i = i + 1: lRAGN(i) = 4514: sRText(i) = "PILS FASS"
    i = i + 1: lRAGN(i) = 4520: sRText(i) = "EXPORT"
    i = i + 1: lRAGN(i) = 4521: sRText(i) = "EXPORT FLASCHE MEHRWEG"
    i = i + 1: lRAGN(i) = 4522: sRText(i) = "EXPORT FLASCHE EINWEG"
    i = i + 1: lRAGN(i) = 4523: sRText(i) = "EXPORT DOSE"
    i = i + 1: lRAGN(i) = 4524: sRText(i) = "EXPORT FASS"
    i = i + 1: lRAGN(i) = 4530: sRText(i) = "WEISSBIER (INKL. WEIZENBIER)"
    i = i + 1: lRAGN(i) = 4531: sRText(i) = "WEISSBIER FLASCHE MEHRWEG"
    i = i + 1: lRAGN(i) = 4532: sRText(i) = "WEISSBIER FLASCHE EINWEG"
    i = i + 1: lRAGN(i) = 4533: sRText(i) = "WEISSBIER DOSE"
    i = i + 1: lRAGN(i) = 4534: sRText(i) = "BERLINER WEISSE MEHRWEG"
    i = i + 1: lRAGN(i) = 4535: sRText(i) = "BERLINER WEISSE EINWEG"
    i = i + 1: lRAGN(i) = 4536: sRText(i) = "BERLINER WEISSE DOSE"
    i = i + 1: lRAGN(i) = 4540: sRText(i) = "SPEZIALBIER MEHRWEG"
    i = i + 1: lRAGN(i) = 4541: sRText(i) = "HELL MEHRWEG"
    i = i + 1: lRAGN(i) = 4542: sRText(i) = "KÖLSCH MEHRWEG"
    i = i + 1: lRAGN(i) = 4543: sRText(i) = "ALT MEHRWEG"
    i = i + 1: lRAGN(i) = 4544: sRText(i) = "SCHWARZBIER MEHRWEG"
    i = i + 1: lRAGN(i) = 4545: sRText(i) = "BOCK- UND STARKBIER > 7%"
    i = i + 1: lRAGN(i) = 4546: sRText(i) = "MÄRZEN MEHRWEG"
    i = i + 1: lRAGN(i) = 4547: sRText(i) = "ZWICKEL-/KRÄUSEN/KELLERBIER MW"
    i = i + 1: lRAGN(i) = 4548: sRText(i) = "LAGERBIER MEHRWEG"
    i = i + 1: lRAGN(i) = 4549: sRText(i) = "SAISONBIER(OKT.WEIHN.OSTERN)MW"
    i = i + 1: lRAGN(i) = 4550: sRText(i) = "SPEZIALBIER EINWEG"
    i = i + 1: lRAGN(i) = 4551: sRText(i) = "HELL EINWEG"
    i = i + 1: lRAGN(i) = 4552: sRText(i) = "KÖLSCH EINWEG"
    i = i + 1: lRAGN(i) = 4553: sRText(i) = "ALT EINWEG"
    i = i + 1: lRAGN(i) = 4554: sRText(i) = "SCHWARZBIER EINWEG"
    i = i + 1: lRAGN(i) = 4555: sRText(i) = "BOCK - UND STARKBIER > 7% EW"
    i = i + 1: lRAGN(i) = 4556: sRText(i) = "MÄRZEN EINWEG"
    i = i + 1: lRAGN(i) = 4557: sRText(i) = "ZWICKEL-/KRÄUSEN/KELLERBIER EW"
    i = i + 1: lRAGN(i) = 4558: sRText(i) = "LAGERBIER EINWEG"
    i = i + 1: lRAGN(i) = 4559: sRText(i) = "SAISONBIER(OKT.WEIHN.OSTEN)EW"
    i = i + 1: lRAGN(i) = 4560: sRText(i) = "ALKOHOLFR.-,LEICHT,-DIÄTBIER"
    i = i + 1: lRAGN(i) = 4561: sRText(i) = "ALKOHOLFREIES BIER FL. MEHRWEG"
    i = i + 1: lRAGN(i) = 4562: sRText(i) = "ALKOHOLFREIES BIER FL. EINWEG"
    i = i + 1: lRAGN(i) = 4563: sRText(i) = "ALKOHOLFREIES BIER DOSE"
    i = i + 1: lRAGN(i) = 4564: sRText(i) = "LEICHTBIER MEHRWEG"
    i = i + 1: lRAGN(i) = 4565: sRText(i) = "LEICHTBIER EINWEG"
    i = i + 1: lRAGN(i) = 4566: sRText(i) = "LEICHTBIER DOSE"
    i = i + 1: lRAGN(i) = 4567: sRText(i) = "DIÄT BIER MEHRWEG"
    i = i + 1: lRAGN(i) = 4568: sRText(i) = "DIÄT BIER EINWEG"
    i = i + 1: lRAGN(i) = 4569: sRText(i) = "DIÄT BIER DOSE"
    i = i + 1: lRAGN(i) = 4570: sRText(i) = "MALZGETRAENK"
    i = i + 1: lRAGN(i) = 4571: sRText(i) = "MALZGETRAENK FLASCHE MEHRWEG"
    i = i + 1: lRAGN(i) = 4572: sRText(i) = "MALZGETRAENK FLASCHE EINWEG"
    i = i + 1: lRAGN(i) = 4573: sRText(i) = "MALZGETRAENK DOSE"
    i = i + 1: lRAGN(i) = 4580: sRText(i) = "AUSLÄNDISCHE BIERE"
    i = i + 1: lRAGN(i) = 4581: sRText(i) = "AUSLÄNDISCHE BIEREMEHRWEG"
    i = i + 1: lRAGN(i) = 4582: sRText(i) = "AUSLÄNDISCHE BIERE EINWEG"
    i = i + 1: lRAGN(i) = 4583: sRText(i) = "AUSLÄNDISCHE BIERE DOSE"
    i = i + 1: lRAGN(i) = 4590: sRText(i) = "BIERMISCHGETRAENKE"
    i = i + 1: lRAGN(i) = 4591: sRText(i) = "BIERMISCHGETRAENKE FL MEHRWEG"
    i = i + 1: lRAGN(i) = 4592: sRText(i) = "BIERMISCHGETRAENKE FL EINWEG"
    i = i + 1: lRAGN(i) = 4593: sRText(i) = "BIERMISCHGETRAENKE DOSE"
    i = i + 1: lRAGN(i) = 4600: sRText(i) = "ALKOHOLFR.GETRAENKE,WASSER,LIM"
    i = i + 1: lRAGN(i) = 4610: sRText(i) = "MINERALWASSER, TAFELWASSER"
    i = i + 1: lRAGN(i) = 4611: sRText(i) = "MINERAL-/TAFELWASSER FL. MEHRW"
    i = i + 1: lRAGN(i) = 4612: sRText(i) = "MINERAL-/TAFELWASSER FL.EW GLA"
    i = i + 1: lRAGN(i) = 4613: sRText(i) = "MINERAL-/TAFELWASSER DOSE"
    i = i + 1: lRAGN(i) = 4614: sRText(i) = "MINERAL-/TAFELWASSER PK/PET EW"
    i = i + 1: lRAGN(i) = 4615: sRText(i) = "MINERAL-/TAFELWASSER PET CYCLE"
    i = i + 1: lRAGN(i) = 4620: sRText(i) = "STILLE WASSER/HEILWASSER"
    i = i + 1: lRAGN(i) = 4621: sRText(i) = "STILLE-/HEILWASSER FL. MEHRWEG"
    i = i + 1: lRAGN(i) = 4622: sRText(i) = "STILLE-/HEILWASSER FL.EW GLAS"
    i = i + 1: lRAGN(i) = 4623: sRText(i) = "STILLE-/HEILWASSER DOSE"
    i = i + 1: lRAGN(i) = 4624: sRText(i) = "STILLE-/HEILWASSER PK/PET EW"
    i = i + 1: lRAGN(i) = 4625: sRText(i) = "STILLE-/HEILWASSER PET CYCLE"
    i = i + 1: lRAGN(i) = 4630: sRText(i) = "COLA-PRODUKTE"
    i = i + 1: lRAGN(i) = 4631: sRText(i) = "COLA-PRODUKTE FLASCHEN MEHRWEG"
    i = i + 1: lRAGN(i) = 4632: sRText(i) = "COLA-PRODUKTE FLASCHEN EW GLAS"
    i = i + 1: lRAGN(i) = 4633: sRText(i) = "COLA-PRODUKTE DOSE"
    i = i + 1: lRAGN(i) = 4634: sRText(i) = "COLA-PRODUKTE,PACKUNG/PET EW"
    i = i + 1: lRAGN(i) = 4635: sRText(i) = "COLA PRODUKTE PET CYCLE"
    i = i + 1: lRAGN(i) = 4640: sRText(i) = "LIMONADEN"
    i = i + 1: lRAGN(i) = 4641: sRText(i) = "LIMONADEN FLASCHE MEHRWEG"
    i = i + 1: lRAGN(i) = 4642: sRText(i) = "LIMONADEN FLASCHE EW GLAS"
    i = i + 1: lRAGN(i) = 4643: sRText(i) = "LIMONADEN KLEINPACK./DOSE"
    i = i + 1: lRAGN(i) = 4644: sRText(i) = "LIMONADEN,PACKUNG/PET EW"
    i = i + 1: lRAGN(i) = 4645: sRText(i) = "LIMONADEN PET CYCLE"
    i = i + 1: lRAGN(i) = 4650: sRText(i) = "MIX- UND BITTERGETRAENKE"
    i = i + 1: lRAGN(i) = 4651: sRText(i) = "MIX-/BITTERGETRÄNKE FL. MEHRWEG"
    i = i + 1: lRAGN(i) = 4652: sRText(i) = "MIX-U.BITTERGETR.FL.EW GLAS"
    i = i + 1: lRAGN(i) = 4653: sRText(i) = "MIX- U. BITTERGETRAENKE DOSE"
    i = i + 1: lRAGN(i) = 4654: sRText(i) = "MIX-U.BITTERGETRÄNKE PET/PK EW"
    i = i + 1: lRAGN(i) = 4655: sRText(i) = "MIX UND BITTERGETR.PET CYCLE"
    i = i + 1: lRAGN(i) = 4660: sRText(i) = "SPORTDRINKS + SONSTIGE GETRAEN"
    i = i + 1: lRAGN(i) = 4661: sRText(i) = "SPORTDRINKS/SONST. GETR. FL.ME"
    i = i + 1: lRAGN(i) = 4662: sRText(i) = "SPORTDRINKS/SONST.G.FL.EW.GLAS"
    i = i + 1: lRAGN(i) = 4663: sRText(i) = "SPORTDRINKS/SONST. GETR. DOSE"
    i = i + 1: lRAGN(i) = 4664: sRText(i) = "SPORTDRINKS INSTANT"
    i = i + 1: lRAGN(i) = 4665: sRText(i) = "SPORTDRI.SONST.GETR.PET/PK EW"
    i = i + 1: lRAGN(i) = 4666: sRText(i) = "SPORTDRINKS/SONST.GETR.PET CY."
    i = i + 1: lRAGN(i) = 4670: sRText(i) = "EISTEE"
    i = i + 1: lRAGN(i) = 4671: sRText(i) = "EISTEE FLASCHE MEHRWEG"
    i = i + 1: lRAGN(i) = 4672: sRText(i) = "EISTEE FLASCHE EINWEG GLAS"
    i = i + 1: lRAGN(i) = 4673: sRText(i) = "EISTEE PACKUNG/PET EINWEG"
    i = i + 1: lRAGN(i) = 4674: sRText(i) = "EISTEE KLEINPACKUNG, DOSE"
    i = i + 1: lRAGN(i) = 4675: sRText(i) = "EISTEE PET CYCLE"
    i = i + 1: lRAGN(i) = 4680: sRText(i) = "SCHORLEN"
    i = i + 1: lRAGN(i) = 4681: sRText(i) = "SCHORLE FLASCHE MEHRWEG"
    i = i + 1: lRAGN(i) = 4682: sRText(i) = "SCHORLE FLASCHE EINWEG/GLAS"
    i = i + 1: lRAGN(i) = 4683: sRText(i) = "SCHORLE KLEINPACKUNG DOSE"
    i = i + 1: lRAGN(i) = 4684: sRText(i) = "SCHORLE PACKUNG/PET/EINWEG"
    i = i + 1: lRAGN(i) = 4685: sRText(i) = "SCHORLE PET CYCLE"
    i = i + 1: lRAGN(i) = 4700: sRText(i) = "SAEFTE,NEKTARE U. FRUCHTSAFTGE"
    i = i + 1: lRAGN(i) = 4710: sRText(i) = "ORANGENSAEFTE,NEKTARE ETC."
    i = i + 1: lRAGN(i) = 4711: sRText(i) = "ORANGENSAEFTE FLASCHE MEHRWEG"
    i = i + 1: lRAGN(i) = 4712: sRText(i) = "ORANGENSAEFTE FL.EW GLAS/PET"
    i = i + 1: lRAGN(i) = 4713: sRText(i) = "ORANGENSAEFTE PACKUNG"
    i = i + 1: lRAGN(i) = 4714: sRText(i) = "ORANGENSAEFTE KLEINPACK., DOSE"
    i = i + 1: lRAGN(i) = 4715: sRText(i) = "ORANGENSÄFTE PET CYCLE"
    i = i + 1: lRAGN(i) = 4720: sRText(i) = "APFELSAEFTE, NEKTARE ETC."
    i = i + 1: lRAGN(i) = 4721: sRText(i) = "APFELSAEFTE FLASCHE MEHRWEG"
    i = i + 1: lRAGN(i) = 4722: sRText(i) = "APFELSAEFTE FL.EW.GLAS/PET"
    i = i + 1: lRAGN(i) = 4723: sRText(i) = "APFELSAEFTE PACKUNG"
    i = i + 1: lRAGN(i) = 4724: sRText(i) = "APFELSAEFTE KLEINPACKUNG, DOSE"
    i = i + 1: lRAGN(i) = 4725: sRText(i) = "APFELSÄFTE PET CYCLE"
    i = i + 1: lRAGN(i) = 4730: sRText(i) = "MEHRFRUCHTSAEFTE, NEKTARE ETC."
    i = i + 1: lRAGN(i) = 4731: sRText(i) = "MEHRFRUCHTSAEFTE FLASCHE MEHRW"
    i = i + 1: lRAGN(i) = 4732: sRText(i) = "MEHRFRUCHTSAEF.FL.EW GLAS/PET"
    i = i + 1: lRAGN(i) = 4733: sRText(i) = "MEHRFRUCHTSAEFTE PACKUNG"
    i = i + 1: lRAGN(i) = 4734: sRText(i) = "MEHRFRUCHTSAEFTE KLEINP.,DOSE"
    i = i + 1: lRAGN(i) = 4735: sRText(i) = "MEHRFRUCHTSÄFTE PET CYCLE"
    i = i + 1: lRAGN(i) = 4740: sRText(i) = "SONST. OBSTSAEFTE, NEKTARE ETC"
    i = i + 1: lRAGN(i) = 4741: sRText(i) = "SONSTIGE OBSTSAEFTE FL. MEHRWE"
    i = i + 1: lRAGN(i) = 4742: sRText(i) = "SONS.OBSTSÄFTE FL.EW GLAS/PET"
    i = i + 1: lRAGN(i) = 4743: sRText(i) = "SONSTIGE OBSTSAEFTE PACKUNG"
    i = i + 1: lRAGN(i) = 4744: sRText(i) = "SONSTIGE OBSTSAEFTE KLEINPACKU"
    i = i + 1: lRAGN(i) = 4745: sRText(i) = "SONSTIGE OBSTSÄFTE PET CYCLE"
    i = i + 1: lRAGN(i) = 4750: sRText(i) = "GEMUESESAEFTE"
    i = i + 1: lRAGN(i) = 4751: sRText(i) = "GEMUESESAEFTE FLASCHE MEHRWEG"
    i = i + 1: lRAGN(i) = 4752: sRText(i) = "GEMUESESAEFTE FL.EW GLAS/PET"
    i = i + 1: lRAGN(i) = 4753: sRText(i) = "GEMUESESAEFTE PACKUNG"
    i = i + 1: lRAGN(i) = 4754: sRText(i) = "GEMUESESAEFTE KLEINPACKUNG"
    i = i + 1: lRAGN(i) = 4755: sRText(i) = "GEMÜSESÄFTE PET CYCLE"
    i = i + 1: lRAGN(i) = 4760: sRText(i) = "APFELWEIN/MOST/CIDRE"
    i = i + 1: lRAGN(i) = 4761: sRText(i) = "APFELWEIN/MOST/CIDRE MEHRWEG"
    i = i + 1: lRAGN(i) = 4762: sRText(i) = "APFELWEIN/MOST/CIDRE EINWEG"
    i = i + 1: lRAGN(i) = 4770: sRText(i) = "FRUCHTSIR./KONZ./INST.(WASSER)"
    i = i + 1: lRAGN(i) = 4771: sRText(i) = "FRUCHTSIRUP/KONZENTRAT/INSTANT"
    i = i + 1: lRAGN(i) = 4772: sRText(i) = "KONZENTR.F.WASSERAUFB.V-MWST."
    i = i + 1: lRAGN(i) = 4780: sRText(i) = "GETRAENKE E.-MWST."
    i = i + 1: lRAGN(i) = 4781: sRText(i) = "GETR.PUL.SPORT.DRI.SIR.E-MWST."
    i = i + 1: lRAGN(i) = 4782: sRText(i) = "KONZENTR. F.WASSERAUFB.E-MWST."
    i = i + 1: lRAGN(i) = 4790: sRText(i) = "KUEHLPFLICHTIGE GETRAENKE"
    i = i + 1: lRAGN(i) = 4800: sRText(i) = "SEKT U. SCHAUMWEIN"
    i = i + 1: lRAGN(i) = 4810: sRText(i) = "SEKT U. SCHAUMWEIN"
    i = i + 1: lRAGN(i) = 4811: sRText(i) = "SEKT U. SCHAUMWEIN DEUTSCHLAND"
    i = i + 1: lRAGN(i) = 4812: sRText(i) = "SEKT U. SCHAUMWEIN FRANKREICH"
    i = i + 1: lRAGN(i) = 4813: sRText(i) = "SEKT U. SCHAUMWEIN ITALIEN"
    i = i + 1: lRAGN(i) = 4814: sRText(i) = "SEKT U. SCHAUMWEIN SPANIEN"
    i = i + 1: lRAGN(i) = 4815: sRText(i) = "SEKT UKRAINE"
    i = i + 1: lRAGN(i) = 4816: sRText(i) = "SEKT SONSTIGE AUSLAND"
    i = i + 1: lRAGN(i) = 4817: sRText(i) = "CHAMPAGNER"
    i = i + 1: lRAGN(i) = 4818: sRText(i) = "WEINHALTIGE/WEINÄHNL. GETRÄNKE"
    i = i + 1: lRAGN(i) = 4819: sRText(i) = "WEINHALTIGE HEISSGETRÄNKE"
    i = i + 1: lRAGN(i) = 4820: sRText(i) = "FRUCHT U. BEERENSCHAUMWEIN"
    i = i + 1: lRAGN(i) = 4821: sRText(i) = "FRUCHTSCHAUMWEIN"
    i = i + 1: lRAGN(i) = 4822: sRText(i) = "FRUCHTWEIN"
    i = i + 1: lRAGN(i) = 4830: sRText(i) = "PERLWEIN/COOLER/SOMMERGETRÄNKE"
    i = i + 1: lRAGN(i) = 4831: sRText(i) = "PERLWEIN/COOLER/SOMMERGETRÄNKE"
    i = i + 1: lRAGN(i) = 4900: sRText(i) = "TABAKWAREN"
    i = i + 1: lRAGN(i) = 4910: sRText(i) = "TABAK"
    i = i + 1: lRAGN(i) = 4912: sRText(i) = "TABAK"
    i = i + 1: lRAGN(i) = 4920: sRText(i) = "ZIGARETTEN"
    i = i + 1: lRAGN(i) = 4921: sRText(i) = "ZIGARETTEN"
    i = i + 1: lRAGN(i) = 4922: sRText(i) = "ZIGARETTEN AUTOMATENPACKUNG"
    i = i + 1: lRAGN(i) = 4930: sRText(i) = "ZIGARREN, ZIGARILLOS"
    i = i + 1: lRAGN(i) = 4931: sRText(i) = "ZIGARREN, ZIGARILLOS"
    i = i + 1: lRAGN(i) = 4940: sRText(i) = "BEDARFSARTIKEL RAUCHEN"
    i = i + 1: lRAGN(i) = 4941: sRText(i) = "BEDARFSARTIKEL RAUCHEN"
    i = i + 1: lRAGN(i) = 5000: sRText(i) = "KAFFEE"
    i = i + 1: lRAGN(i) = 5010: sRText(i) = "BOHNENKAFFEE GANZE BOHNEN"
    i = i + 1: lRAGN(i) = 5011: sRText(i) = "BOHNENKAFFEE GANZE BOHNEN"
    i = i + 1: lRAGN(i) = 5020: sRText(i) = "BOHNENKAFFEE GEMAHLEN"
    i = i + 1: lRAGN(i) = 5021: sRText(i) = "BOHNENKAFFEE GEMAHLEN"
    i = i + 1: lRAGN(i) = 5030: sRText(i) = "INSTANTKAFFEE"
    i = i + 1: lRAGN(i) = 5031: sRText(i) = "INSTANTKAFFEE E-MWST."
    i = i + 1: lRAGN(i) = 5032: sRText(i) = "ESPRESSO GEMAHLEN"
    i = i + 1: lRAGN(i) = 5033: sRText(i) = "KAFFEE-/CAPPUCIONSPEZ.HEISS"
    i = i + 1: lRAGN(i) = 5034: sRText(i) = "KAFFEE-/CAPPUCIONESPEZ. KALT"
    i = i + 1: lRAGN(i) = 5035: sRText(i) = "ESPRESSO BOHNE"
    i = i + 1: lRAGN(i) = 5036: sRText(i) = "KAFFEE PADS- U. KAPSELSYSTEME"
    i = i + 1: lRAGN(i) = 5050: sRText(i) = "KAFFEE-ERSATZ"
    i = i + 1: lRAGN(i) = 5051: sRText(i) = "KAFFEE-ERSATZ"
    i = i + 1: lRAGN(i) = 5100: sRText(i) = "TEE UND KAKAO"
    i = i + 1: lRAGN(i) = 5110: sRText(i) = "SCHWARZER TEE/GRÜNER TEE"
    i = i + 1: lRAGN(i) = 5111: sRText(i) = "SCHWARZER TEE LOSE"
    i = i + 1: lRAGN(i) = 5112: sRText(i) = "SCHWARZER TEE DOSE"
    i = i + 1: lRAGN(i) = 5113: sRText(i) = "SCHWARZER TEE BEUTEL"
    i = i + 1: lRAGN(i) = 5114: sRText(i) = "GRÜNER TEE BEUTEL"
    i = i + 1: lRAGN(i) = 5115: sRText(i) = "GRÜNER TEE LOSE"
    i = i + 1: lRAGN(i) = 5120: sRText(i) = "INSTANT-TEE"
    i = i + 1: lRAGN(i) = 5121: sRText(i) = "INSTANT-TEE"
    i = i + 1: lRAGN(i) = 5122: sRText(i) = "TEE PADS- U. KAPSELSYSTEME"
    i = i + 1: lRAGN(i) = 5130: sRText(i) = "KRAEUTER-/FRUECHTE-TEE E-MWST."
    i = i + 1: lRAGN(i) = 5131: sRText(i) = "KRAEUTER-/FRUECHTE-TEE BEUTEL"
    i = i + 1: lRAGN(i) = 5132: sRText(i) = "KRAEUTER-/FRUECHTE-TEE LOSE"
    i = i + 1: lRAGN(i) = 5140: sRText(i) = "KAKAO UND INSTANT"
    i = i + 1: lRAGN(i) = 5141: sRText(i) = "KAKAO"
    i = i + 1: lRAGN(i) = 5142: sRText(i) = "INSTANTPUL.SCHOKO/FRUCHT"
    i = i + 1: lRAGN(i) = 5143: sRText(i) = "KAKAO PADS- U. KAPSELSYSTEME"
    i = i + 1: lRAGN(i) = 5300: sRText(i) = "WASCHMITTEL"
    i = i + 1: lRAGN(i) = 5310: sRText(i) = "GROB- UND VOLLWASCHMITTEL"
    i = i + 1: lRAGN(i) = 5311: sRText(i) = "GROB- U. VOLLWASCHMITTEL PULVE"
    i = i + 1: lRAGN(i) = 5312: sRText(i) = "GROB- U. VOLLWASCHMITTEL FLUES"
    i = i + 1: lRAGN(i) = 5320: sRText(i) = "FEIN- UND SPEZIALWASCHMITTEL"
    i = i + 1: lRAGN(i) = 5321: sRText(i) = "FEIN- U.WOLLWASCHMITTEL PULVER"
    i = i + 1: lRAGN(i) = 5322: sRText(i) = "FEIN- U.WOLLWASCHMITTEL FLUESS"
    i = i + 1: lRAGN(i) = 5324: sRText(i) = "GARDINENWASCHMITTEL"
    i = i + 1: lRAGN(i) = 5330: sRText(i) = "WEICHSPUELER"
    i = i + 1: lRAGN(i) = 5331: sRText(i) = "WEICHSPUELER"
    i = i + 1: lRAGN(i) = 5340: sRText(i) = "STAERKE,BUEGELHILFEN"
    i = i + 1: lRAGN(i) = 5341: sRText(i) = "STAERKE, BUEGELHILFE"
    i = i + 1: lRAGN(i) = 5350: sRText(i) = "FLECKENREINIG/ENTFAERBER/FARBE"
    i = i + 1: lRAGN(i) = 5351: sRText(i) = "FLECKENREINIGER,-SALZ,ENTFAERB"
    i = i + 1: lRAGN(i) = 5352: sRText(i) = "FAERBEMITTEL, FAERBESALZ"
    i = i + 1: lRAGN(i) = 5360: sRText(i) = "WASSERENTHAERTER"
    i = i + 1: lRAGN(i) = 5361: sRText(i) = "WASSERENTHAERTER"
    i = i + 1: lRAGN(i) = 5362: sRText(i) = "DESTILLIERTES WASSER"
    i = i + 1: lRAGN(i) = 5400: sRText(i) = "PUTZ- UND REINIGUNGSMITTEL"
    i = i + 1: lRAGN(i) = 5410: sRText(i) = "GESCHIRRSPUELMITTEL"
    i = i + 1: lRAGN(i) = 5411: sRText(i) = "HANDGESCHIRRSPUELMITTEL"
    i = i + 1: lRAGN(i) = 5412: sRText(i) = "MASCH.GESCHIRRSPUELM./KLARSPUE"
    i = i + 1: lRAGN(i) = 5413: sRText(i) = "MASCHINENPFLEGE/SALZ"
    i = i + 1: lRAGN(i) = 5420: sRText(i) = "HAUSHALTSREINIGER"
    i = i + 1: lRAGN(i) = 5421: sRText(i) = "ALLZWECKREINIGER, SCHMIERSEIFE"
    i = i + 1: lRAGN(i) = 5422: sRText(i) = "SCHEUERMITTEL FLUESSIG U. PULV"
    i = i + 1: lRAGN(i) = 5423: sRText(i) = "BAD-,WC-,SANITAER- U. ABFLUßRE"
    i = i + 1: lRAGN(i) = 5424: sRText(i) = "WC-STEINE/WC-GELE"
    i = i + 1: lRAGN(i) = 5425: sRText(i) = "GLAS-/FENSTERREINIGER/SPIRITUS"
    i = i + 1: lRAGN(i) = 5430: sRText(i) = "SCHUH- UND LEDERPFLEGE"
    i = i + 1: lRAGN(i) = 5431: sRText(i) = "SCHUH- UND LEDERPFLEGE"
    i = i + 1: lRAGN(i) = 5440: sRText(i) = "LUFTVERBESSERER U. HH.INSEKTIZ"
    i = i + 1: lRAGN(i) = 5441: sRText(i) = "LUFTVERBESSERER"
    i = i + 1: lRAGN(i) = 5442: sRText(i) = "HAUSHALTSINSEKTIZIDE"
    i = i + 1: lRAGN(i) = 5450: sRText(i) = "HAUSHALTSPFLEGE/SPEZIALREINIGE"
    i = i + 1: lRAGN(i) = 5451: sRText(i) = "BODENPFLEGE"
    i = i + 1: lRAGN(i) = 5452: sRText(i) = "TEPPICH- U. POLSTERPFLEGE"
    i = i + 1: lRAGN(i) = 5453: sRText(i) = "MOEBELPFLEGE"
    i = i + 1: lRAGN(i) = 5454: sRText(i) = "METALLPFLEGEMITTEL"
    i = i + 1: lRAGN(i) = 5455: sRText(i) = "HERD- U. BACKOFENREINIGER"
    i = i + 1: lRAGN(i) = 5456: sRText(i) = "TEXTIL-CONDITIONER"
    i = i + 1: lRAGN(i) = 5460: sRText(i) = "ANZUENDER/ENTRUSSER/BRENNSTOFF"
    i = i + 1: lRAGN(i) = 5461: sRText(i) = "STEICHHOELZER/EINWEGFEUERZEUGE"
    i = i + 1: lRAGN(i) = 5462: sRText(i) = "HEIZHILFEN/GRILLANZUENDER"
    i = i + 1: lRAGN(i) = 5463: sRText(i) = "FEUERZEUGBENZIN, -GAS"
    i = i + 1: lRAGN(i) = 5464: sRText(i) = "LAMPENOEL / -PETROLEUM"
    i = i + 1: lRAGN(i) = 5600: sRText(i) = "HAARPFLEGEMITTEL"
    i = i + 1: lRAGN(i) = 5610: sRText(i) = "HAARSHAMPOO"
    i = i + 1: lRAGN(i) = 5611: sRText(i) = "HAARSHAMPOO"
    i = i + 1: lRAGN(i) = 5620: sRText(i) = "HAARSPRAY/-LACK"
    i = i + 1: lRAGN(i) = 5621: sRText(i) = "HAARSPRAY/-LACK PUMPZERSTAEUBE"
    i = i + 1: lRAGN(i) = 5622: sRText(i) = "HAARSPRAY/-LACK (AEROSOL)"
    i = i + 1: lRAGN(i) = 5630: sRText(i) = "HAARFESTIGER/FRISIERMITTEL"
    i = i + 1: lRAGN(i) = 5631: sRText(i) = "SCHAUM-/FLÜSSIGFESTIGER"
    i = i + 1: lRAGN(i) = 5632: sRText(i) = "FRISIERMITTEL/STYLINGGEL/WACHS"
    i = i + 1: lRAGN(i) = 5640: sRText(i) = "SPUELUNGEN/SCHAUMBALSAM"
    i = i + 1: lRAGN(i) = 5641: sRText(i) = "SPUELUNGEN/SCHAUMBALSAM"
    i = i + 1: lRAGN(i) = 5650: sRText(i) = "HAARKUREN"
    i = i + 1: lRAGN(i) = 5651: sRText(i) = "HAARKUREN"
    i = i + 1: lRAGN(i) = 5660: sRText(i) = "HAARWASSER/-OEL"
    i = i + 1: lRAGN(i) = 5661: sRText(i) = "HAARWASSER/-OEL"
    i = i + 1: lRAGN(i) = 5680: sRText(i) = "HAARFAERBE-/DAUERWELLMITTEL"
    i = i + 1: lRAGN(i) = 5681: sRText(i) = "HAARFARBEN, AUSWASCHBAR"
    i = i + 1: lRAGN(i) = 5682: sRText(i) = "HAARFARBEN, HALTBAR BIS 24 WAE"
    i = i + 1: lRAGN(i) = 5683: sRText(i) = "HAARFARBEN, DAUERHAFT HALTBAR"
    i = i + 1: lRAGN(i) = 5684: sRText(i) = "DAUERWELLMITTEL"
    i = i + 1: lRAGN(i) = 5700: sRText(i) = "MUNDPFLEGEMITTEL"
    i = i + 1: lRAGN(i) = 5710: sRText(i) = "ZAHNCREME"
    i = i + 1: lRAGN(i) = 5711: sRText(i) = "ZAHNCREME"
    i = i + 1: lRAGN(i) = 5720: sRText(i) = "MUNDWASSER"
    i = i + 1: lRAGN(i) = 5721: sRText(i) = "MUNDWASSER KONZENTRIERT /-SPRA"
    i = i + 1: lRAGN(i) = 5722: sRText(i) = "MUNDSPUELUNGEN"
    i = i + 1: lRAGN(i) = 5730: sRText(i) = "ZAHNBUERSTEN/ZAHNPFLEGEARTIKEL"
    i = i + 1: lRAGN(i) = 5731: sRText(i) = "ERWACHSENE ZAHNBÜRSTEN"
    i = i + 1: lRAGN(i) = 5732: sRText(i) = "ZAHNPFLEGEARTIKEL"
    i = i + 1: lRAGN(i) = 5733: sRText(i) = "KINDER ZAHNBÜRSTEN"
    i = i + 1: lRAGN(i) = 5734: sRText(i) = "ELEKTR.U.AUFSTECKZAHNBÜRSTEN"
    i = i + 1: lRAGN(i) = 5740: sRText(i) = "ZAHNERSATZPFLEGE"
    i = i + 1: lRAGN(i) = 5741: sRText(i) = "GEBISSREINIGER/TABLETTEN/PULVE"
    i = i + 1: lRAGN(i) = 5742: sRText(i) = "HAFTMITTEL/ZAHNERSATZPFL/ZUBEH"
    i = i + 1: lRAGN(i) = 5800: sRText(i) = "KOERPERPFLEGEMITTEL"
    i = i + 1: lRAGN(i) = 5810: sRText(i) = "HAUT- U. GESICHTSPFLEGE"
    i = i + 1: lRAGN(i) = 5811: sRText(i) = "HAUT-/ALLZWECKCREME"
    i = i + 1: lRAGN(i) = 5812: sRText(i) = "KOERPERPFLEGE"
    i = i + 1: lRAGN(i) = 5813: sRText(i) = "HAND-/NAGELPFLEGE"
    i = i + 1: lRAGN(i) = 5814: sRText(i) = "GESICHTS- U. AUGENPFLEGE"
    i = i + 1: lRAGN(i) = 5815: sRText(i) = "GESICHTSREINIGUNG"
    i = i + 1: lRAGN(i) = 5816: sRText(i) = "LIPPENPFLEGE(STIFTE,CREMES,BAL"
    i = i + 1: lRAGN(i) = 5817: sRText(i) = "GESICHTSMASKEN"
    i = i + 1: lRAGN(i) = 5820: sRText(i) = "SEIFEN/INTIMPFLEGE"
    i = i + 1: lRAGN(i) = 5821: sRText(i) = "SEIFEN STUECK, PASTE"
    i = i + 1: lRAGN(i) = 5822: sRText(i) = "SEIFEN STUECK(PARFUEM-FRUCHT.."
    i = i + 1: lRAGN(i) = 5823: sRText(i) = "SEIFEN FLUESSIG/WASCHLOTION"
    i = i + 1: lRAGN(i) = 5825: sRText(i) = "INTIMPFLEGE (EXKL. TUECHER)"
    i = i + 1: lRAGN(i) = 5830: sRText(i) = "BADEZUSAETZE UND DUSCHBAEDER"
    i = i + 1: lRAGN(i) = 5831: sRText(i) = "DUSCHBAD (INKL.DUSCHGELE) 2IN1"
    i = i + 1: lRAGN(i) = 5832: sRText(i) = "SCHAUM-/CREME-/OELBAD INCL.TAB"
    i = i + 1: lRAGN(i) = 5840: sRText(i) = "DEODORANTIEN"
    i = i + 1: lRAGN(i) = 5841: sRText(i) = "DEOSPRAY"
    i = i + 1: lRAGN(i) = 5842: sRText(i) = "DEOZERSTAEUBER"
    i = i + 1: lRAGN(i) = 5843: sRText(i) = "DEOROLLER/-STIFTE/-CREME"
    i = i + 1: lRAGN(i) = 5850: sRText(i) = "RASIERBEDARF/HAARENTFERNUNG"
    i = i + 1: lRAGN(i) = 5851: sRText(i) = "RASIERAPPARATE NASS, HERREN"
    i = i + 1: lRAGN(i) = 5852: sRText(i) = "RASIERKLINGEN, HERREN"
    i = i + 1: lRAGN(i) = 5853: sRText(i) = "RASIERSCHAUM/-GEL/-CREME-SEIFE"
    i = i + 1: lRAGN(i) = 5854: sRText(i) = "PRE-AFTER-SHAVE LOTION/BALM"
    i = i + 1: lRAGN(i) = 5855: sRText(i) = "RASIERAPPARATE/-KLINGEN FRAUEN"
    i = i + 1: lRAGN(i) = 5856: sRText(i) = "HAARENTFERNUNG, FRAUEN"
    i = i + 1: lRAGN(i) = 5857: sRText(i) = "EINWEGRASIERER DAMEN U. HERREN"
    i = i + 1: lRAGN(i) = 5860: sRText(i) = "KOSMETIK-UTENSILIEN"
    i = i + 1: lRAGN(i) = 5861: sRText(i) = "HAARBUERSTEN"
    i = i + 1: lRAGN(i) = 5862: sRText(i) = "HAARKAEMME"
    i = i + 1: lRAGN(i) = 5863: sRText(i) = "MASSAGEARTIKEL"
    i = i + 1: lRAGN(i) = 5864: sRText(i) = "KOSMETIKSCHWAEMME"
    i = i + 1: lRAGN(i) = 5865: sRText(i) = "KOSMETIKBEHAELTER"
    i = i + 1: lRAGN(i) = 5866: sRText(i) = "KOSMETIKSPIEGEL"
    i = i + 1: lRAGN(i) = 5867: sRText(i) = "HAARSCHMUCK KINDER"
    i = i + 1: lRAGN(i) = 5868: sRText(i) = "HAARSCHMUCK DAMEN"
    i = i + 1: lRAGN(i) = 5870: sRText(i) = "KOSMETIKPINSEL/STAHLWARE/FRISEUR"
    i = i + 1: lRAGN(i) = 5871: sRText(i) = "RASIERPINSEL"
    i = i + 1: lRAGN(i) = 5872: sRText(i) = "KOSMETIKPINSEL"
    i = i + 1: lRAGN(i) = 5873: sRText(i) = "KOSMETIKSTAHLWAREN"
    i = i + 1: lRAGN(i) = 5874: sRText(i) = "FRISEURBEDARF"
    i = i + 1: lRAGN(i) = 5900: sRText(i) = "SPEZIELLE KOERPERPFLEGEMITTEL"
    i = i + 1: lRAGN(i) = 5910: sRText(i) = "DEKO-KOSMETIK"
    i = i + 1: lRAGN(i) = 5911: sRText(i) = "LIPPENSTIFTE"
    i = i + 1: lRAGN(i) = 5912: sRText(i) = "NAGELLACK"
    i = i + 1: lRAGN(i) = 5913: sRText(i) = "NAGELLACKENTFERNER (INKL. PADS"
    i = i + 1: lRAGN(i) = 5914: sRText(i) = "AUGEN-DEKO-KOSMETIK"
    i = i + 1: lRAGN(i) = 5915: sRText(i) = "ROUGE/MAKE UP/PUDER"
    i = i + 1: lRAGN(i) = 5917: sRText(i) = "KUENSTL.FINGERNAEGEL/ZUBEHOER"
    i = i + 1: lRAGN(i) = 5920: sRText(i) = "FUSSPFLEGE"
    i = i + 1: lRAGN(i) = 5921: sRText(i) = "FUSSBAEDER"
    i = i + 1: lRAGN(i) = 5922: sRText(i) = "FUSSGELE/-CREMES/-SPRAYS"
    i = i + 1: lRAGN(i) = 5923: sRText(i) = "ZEH-PFLASTER/HORNHAUTSCHWAMM"
    i = i + 1: lRAGN(i) = 5930: sRText(i) = "SONNENPFLEGE/INSEKTENSCHUTZ"
    i = i + 1: lRAGN(i) = 5931: sRText(i) = "SONNENMILCH/-CREME/-OEL"
    i = i + 1: lRAGN(i) = 5932: sRText(i) = "AFTER-SUN-MILCH/-CREME"
    i = i + 1: lRAGN(i) = 5933: sRText(i) = "INSEKTENSCHUTZ FUER DIE HAUT"
    i = i + 1: lRAGN(i) = 5934: sRText(i) = "SELBSTBRAEUNER"
    i = i + 1: lRAGN(i) = 5940: sRText(i) = "BABYPFLEGE"
    i = i + 1: lRAGN(i) = 5941: sRText(i) = "BABYPFLEGE (ZUBEHOER UNTER 689"
    i = i + 1: lRAGN(i) = 5942: sRText(i) = "BABYPFLEGE-TÜCHER"
    i = i + 1: lRAGN(i) = 5950: sRText(i) = "DUFTWASSER DAMEN"
    i = i + 1: lRAGN(i) = 5951: sRText(i) = "DUFTWASSER DAMEN"
    i = i + 1: lRAGN(i) = 5960: sRText(i) = "DUFTWASSER HERREN"
    i = i + 1: lRAGN(i) = 5961: sRText(i) = "DUFTWASSER HERREN"
    i = i + 1: lRAGN(i) = 5970: sRText(i) = "KOMBI-/GESCHENKPACKUNG KOSMETI"
    i = i + 1: lRAGN(i) = 5971: sRText(i) = "KOMBI-/GESCHENKPACKUNG KOSMETI"
    i = i + 1: lRAGN(i) = 6100: sRText(i) = "HYGIENE, VERBANDSSTOFFE"
    i = i + 1: lRAGN(i) = 6120: sRText(i) = "VERBANDSSTOFFE/BANDAGEN"
    i = i + 1: lRAGN(i) = 6121: sRText(i) = "VERBANDSSTOFFE"
    i = i + 1: lRAGN(i) = 6122: sRText(i) = "BANDAGEN"
    i = i + 1: lRAGN(i) = 6123: sRText(i) = "WÄRMFLASCHEN / KISSEN"
    i = i + 1: lRAGN(i) = 6124: sRText(i) = "WELLNESS"
    i = i + 1: lRAGN(i) = 6130: sRText(i) = "TOILETTENPAPIER"
    i = i + 1: lRAGN(i) = 6131: sRText(i) = "TOILETTENPAPIER TROCKEN"
    i = i + 1: lRAGN(i) = 6132: sRText(i) = "TOILETTENPAPIER NASS"
    i = i + 1: lRAGN(i) = 6140: sRText(i) = "PAPIERTASCHENTUECHER/KOSMETIKT"
    i = i + 1: lRAGN(i) = 6141: sRText(i) = "PAPIERTASCHENTUECHER"
    i = i + 1: lRAGN(i) = 6142: sRText(i) = "KOSMETIK-,ERFRISCH.-,BRILLENTU"
    i = i + 1: lRAGN(i) = 6150: sRText(i) = "WINDELN"
    i = i + 1: lRAGN(i) = 6151: sRText(i) = "WINDELN"
    



i = i + 1: lRAGN(i) = 6160: sRText(i) = "WATTE/-ERZEUGNISSE"
i = i + 1: lRAGN(i) = 6161: sRText(i) = "WATTE/-ERZEUGNISSE"
i = i + 1: lRAGN(i) = 6170: sRText(i) = "HYGIENE"
i = i + 1: lRAGN(i) = 6171: sRText(i) = "TAMPONS, BINDEN, SLIPEINLAGEN"
i = i + 1: lRAGN(i) = 6172: sRText(i) = "HYGIENE/INTIMPFLEGETUECHER"
i = i + 1: lRAGN(i) = 6173: sRText(i) = "VERHUETUNG UND ZUBEHOER"
i = i + 1: lRAGN(i) = 6200: sRText(i) = "PAPIERWAREN U. VERW. ARTIKEL"
i = i + 1: lRAGN(i) = 6210: sRText(i) = "SERVIETTEN,TISCHDEKORATION"
i = i + 1: lRAGN(i) = 6211: sRText(i) = "STANDARDSERVIETTEN"
i = i + 1: lRAGN(i) = 6212: sRText(i) = "DEKORATIVE SERVIETTEN"
i = i + 1: lRAGN(i) = 6213: sRText(i) = "TISCHDEKORATION"
i = i + 1: lRAGN(i) = 6220: sRText(i) = "KUECHENROLLEN"
i = i + 1: lRAGN(i) = 6221: sRText(i) = "KUECHENROLLEN"
i = i + 1: lRAGN(i) = 6230: sRText(i) = "KAFFEE- UND TEEFILTER"
i = i + 1: lRAGN(i) = 6231: sRText(i) = "KAFFEEFILTER"
i = i + 1: lRAGN(i) = 6232: sRText(i) = "TEEFILTER"
i = i + 1: lRAGN(i) = 6233: sRText(i) = "STAUBSAUGERZUBEHÖR"
i = i + 1: lRAGN(i) = 6240: sRText(i) = "TRAGETASCHEN-VERKAUF"
i = i + 1: lRAGN(i) = 6241: sRText(i) = "TRAGETASCHEN"
i = i + 1: lRAGN(i) = 6242: sRText(i) = "TRAGETASCHEN TK"
i = i + 1: lRAGN(i) = 6250: sRText(i) = "FOLIEN,BEUTEL,ZUBEHOER"
i = i + 1: lRAGN(i) = 6251: sRText(i) = "FOLIEN UND HAUSHALTSPAPIER"
i = i + 1: lRAGN(i) = 6252: sRText(i) = "FRUEHSTUECKSBEUTEL"
i = i + 1: lRAGN(i) = 6253: sRText(i) = "TIEFKUEHLBEUTEL"
i = i + 1: lRAGN(i) = 6254: sRText(i) = "MUELLBEUTEL"
i = i + 1: lRAGN(i) = 6255: sRText(i) = "ZUBEHOER (KLIPS, RINGE ETC.)"
i = i + 1: lRAGN(i) = 6300: sRText(i) = "WARENGRUPPEN F. MARKTARTIKEL"
i = i + 1: lRAGN(i) = 6310: sRText(i) = "WARENGRUPPEN F. MARKTART."
i = i + 1: lRAGN(i) = 6311: sRText(i) = "OBST WIEGEPFLICHTIG MA"
i = i + 1: lRAGN(i) = 6312: sRText(i) = "OBST NICHT WIEGEPFLICHTIG MA"
i = i + 1: lRAGN(i) = 6313: sRText(i) = "GEMÜSE WIEGEPFLICHTIG MA"
i = i + 1: lRAGN(i) = 6314: sRText(i) = "GEMÜSE NICHT WIEGEPFLICHTIG MA"
i = i + 1: lRAGN(i) = 6315: sRText(i) = "KAEMME"
i = i + 1: lRAGN(i) = 6317: sRText(i) = "ELEKTROGERAETE"
i = i + 1: lRAGN(i) = 6318: sRText(i) = "ZUBEHOER ( PERUECKEN,U.S.W )"
i = i + 1: lRAGN(i) = 6319: sRText(i) = "SONSTIGES"
i = i + 1: lRAGN(i) = 6320: sRText(i) = "WARENGRUPPEN FÜR MARKTARTIKEL1"
i = i + 1: lRAGN(i) = 6321: sRText(i) = "FLEISCH-BED MA"
i = i + 1: lRAGN(i) = 6322: sRText(i) = "FLEISCH-SB MA"
i = i + 1: lRAGN(i) = 6323: sRText(i) = "FISCH U. MEERESFRÜCHTE BED. MA"
i = i + 1: lRAGN(i) = 6324: sRText(i) = "FISCH U. MEERESFRÜCHTE-SB MA"
i = i + 1: lRAGN(i) = 6325: sRText(i) = "FLEISCH CONV.WURST-BED.MA"
i = i + 1: lRAGN(i) = 6326: sRText(i) = "FLEISCH CONV.WURST-SB MA"
i = i + 1: lRAGN(i) = 6328: sRText(i) = "BLUMEN/PFLANZEN E-MWST MA"
i = i + 1: lRAGN(i) = 6329: sRText(i) = "BLUMEN/PLFANZEN V-MWST MA"
i = i + 1: lRAGN(i) = 6330: sRText(i) = "WARENGRUPPEN FÜR MARKTARTIKEL2"
i = i + 1: lRAGN(i) = 6331: sRText(i) = "KÄSE-BED. MA"
i = i + 1: lRAGN(i) = 6332: sRText(i) = "KÄSE-SB MA"
i = i + 1: lRAGN(i) = 6333: sRText(i) = "BACKWAREN-BED.INCL.TEIGLING MA"
i = i + 1: lRAGN(i) = 6334: sRText(i) = "BACKWAREN-SB MA"
i = i + 1: lRAGN(i) = 6335: sRText(i) = "FEINKOST./FERTIGSAL. GEK. MA"
i = i + 1: lRAGN(i) = 6336: sRText(i) = "EIER-MA"
i = i + 1: lRAGN(i) = 6337: sRText(i) = "BUTTER, FETTE - MA"
i = i + 1: lRAGN(i) = 6338: sRText(i) = "MILCH U. MOLKEREIPRODUKTE - MA"
i = i + 1: lRAGN(i) = 6340: sRText(i) = "WARENGRUPPEN FÜR MARKTARTIKEL3"
i = i + 1: lRAGN(i) = 6341: sRText(i) = "NÄHRMITTEL,BACKART.,PUDDING MA"
i = i + 1: lRAGN(i) = 6342: sRText(i) = "SUPPEN U. FERTIGGERICHTE MA"
i = i + 1: lRAGN(i) = 6343: sRText(i) = "GEWÜRZE,ESSIG,ÖL USW. MA"
i = i + 1: lRAGN(i) = 6344: sRText(i) = "BROTAUFSTRICH/FERTIGSAUCEN MA"
i = i + 1: lRAGN(i) = 6345: sRText(i) = "KONSERVEN MA"
i = i + 1: lRAGN(i) = 6346: sRText(i) = "SÜßWAREN MA"
i = i + 1: lRAGN(i) = 6347: sRText(i) = "TABAKWAREN MA"
i = i + 1: lRAGN(i) = 6348: sRText(i) = "KAFFEE-MA"
i = i + 1: lRAGN(i) = 6349: sRText(i) = "TEE, KAKAO - MA"
i = i + 1: lRAGN(i) = 6350: sRText(i) = "WARENGRUPPEN FÜR MARKTARTIKEL4"
i = i + 1: lRAGN(i) = 6351: sRText(i) = "SPIRITUOSEN MA"
i = i + 1: lRAGN(i) = 6352: sRText(i) = "WEIN MA"
i = i + 1: lRAGN(i) = 6353: sRText(i) = "BIER EW MA"
i = i + 1: lRAGN(i) = 6354: sRText(i) = "BIER MW MA"
i = i + 1: lRAGN(i) = 6355: sRText(i) = "ALKOHOLFR.GETRÄNKE EW MA"
i = i + 1: lRAGN(i) = 6356: sRText(i) = "ALKOHOLFR.GETRÄNKE MW MA"
i = i + 1: lRAGN(i) = 6357: sRText(i) = "SÄFTE EW MA"
i = i + 1: lRAGN(i) = 6358: sRText(i) = "SÄFTE MW MA"
i = i + 1: lRAGN(i) = 6359: sRText(i) = "ARTIKEL OHNE MWST MA"
i = i + 1: lRAGN(i) = 6360: sRText(i) = "WARENGRUPPEN FÜR MARKTARTIKEL5"
i = i + 1: lRAGN(i) = 6361: sRText(i) = "TK-FLEISCH- MA"
i = i + 1: lRAGN(i) = 6362: sRText(i) = "TK-HACKFL./FISCH/GEFLÜGEL-MA"
i = i + 1: lRAGN(i) = 6363: sRText(i) = "TK-FERTIGGERICHTE - MA"
i = i + 1: lRAGN(i) = 6364: sRText(i) = "TK-EIS/BACK-SÜßWAREN-MA"
i = i + 1: lRAGN(i) = 6365: sRText(i) = "HAARPFLEGE - MA"
i = i + 1: lRAGN(i) = 6366: sRText(i) = "MUNDPFLEGE - MA"
i = i + 1: lRAGN(i) = 6367: sRText(i) = "SEIFE / DEO / HAUTPFLEGE - MA"
i = i + 1: lRAGN(i) = 6368: sRText(i) = "SONSTIGE KÖRPERPFLEGE - MA"
i = i + 1: lRAGN(i) = 6370: sRText(i) = "WARENGRUPPEN FÜR MARKTARTIKEL6"
i = i + 1: lRAGN(i) = 6371: sRText(i) = "BABYNAHRUNG - MA"
i = i + 1: lRAGN(i) = 6372: sRText(i) = "BABYPFLEGE - MA"
i = i + 1: lRAGN(i) = 6373: sRText(i) = "BIO/DIÄTK/HEIL/STÄRKM.O.FR.-MA"
i = i + 1: lRAGN(i) = 6374: sRText(i) = "WASCH,PUTZ,REINIG.,LUFTVERB.MA"
i = i + 1: lRAGN(i) = 6375: sRText(i) = "SPEZIAL.KÖRPERPFLEGEMITTEL- MA"
i = i + 1: lRAGN(i) = 6376: sRText(i) = "HYGIENE, VERBANDSTOFFE-MA"
i = i + 1: lRAGN(i) = 6377: sRText(i) = "PAPIERWAREN U. VERW.ARTIKEL-MA"
i = i + 1: lRAGN(i) = 6378: sRText(i) = "TIERFUTT.,ZOOLOG.ART.E-MWST-MA"
i = i + 1: lRAGN(i) = 6379: sRText(i) = "TIERFUTT.ZOOLOG.ART.V-MWST-MA"
i = i + 1: lRAGN(i) = 6380: sRText(i) = "WARENGRUPPEN FÜR MARKTARTIKEL7"
i = i + 1: lRAGN(i) = 6381: sRText(i) = "TEXTILIEN,SCHUHE,LEDERWARE-MA"
i = i + 1: lRAGN(i) = 6382: sRText(i) = "CAMPING, GARTEN - MA"
i = i + 1: lRAGN(i) = 6383: sRText(i) = "AUTOZUBEHÖR - MA"
i = i + 1: lRAGN(i) = 6384: sRText(i) = "HAUSHALTSW.,GLAS,PORZELLAN-MA"
i = i + 1: lRAGN(i) = 6385: sRText(i) = "SCHREIBW,EINWEGGESCH,KERZEN-MA"
i = i + 1: lRAGN(i) = 6386: sRText(i) = "SPIELWAREN/SPORTARTIKEL - MA"
i = i + 1: lRAGN(i) = 6387: sRText(i) = "ELEKTRO.INCL.BILD U.TONTR.-MA"
i = i + 1: lRAGN(i) = 6388: sRText(i) = "WERKZEUG/BAUMARKTARTIKEL - MA"
i = i + 1: lRAGN(i) = 6389: sRText(i) = "RESTLICHES NONFOOD - MA"
i = i + 1: lRAGN(i) = 6390: sRText(i) = "ZUTATEN PRODUKTION BÄCKEREI"
i = i + 1: lRAGN(i) = 6391: sRText(i) = "PROD.MEHL ZUCKER"
i = i + 1: lRAGN(i) = 6392: sRText(i) = "PROD.BACKMISCHUNGEN (FERTIG)"
i = i + 1: lRAGN(i) = 6393: sRText(i) = "PROD.MILCH U.MOLKEREIPRODUKTE"
i = i + 1: lRAGN(i) = 6394: sRText(i) = "PROD.BACKARTIKEL U.BACKZUTATEN"
i = i + 1: lRAGN(i) = 6395: sRText(i) = "PRODUKTION FETTE"
i = i + 1: lRAGN(i) = 6396: sRText(i) = "PROD.GEWÜRZE U.MISCHUNGEN"
i = i + 1: lRAGN(i) = 6397: sRText(i) = "PROD.TROCKENFRÜCHTE U.KÖRNER"
i = i + 1: lRAGN(i) = 6398: sRText(i) = "PRODUKTION OBSTKONSERVEN"
i = i + 1: lRAGN(i) = 6399: sRText(i) = "PROD.TEIGLINGE AUFBACKWAREN"
i = i + 1: lRAGN(i) = 6400: sRText(i) = "SAISONART/SAMMELGRUPP./CAFETER"
i = i + 1: lRAGN(i) = 6410: sRText(i) = "OSTERN E-MWST."
i = i + 1: lRAGN(i) = 6411: sRText(i) = "OSTER-MARZIPAN"
i = i + 1: lRAGN(i) = 6412: sRText(i) = "OSTER-FIGUREN HOHL/MASSIV"
i = i + 1: lRAGN(i) = 6413: sRText(i) = "STRAUCHBEHANG"
i = i + 1: lRAGN(i) = 6414: sRText(i) = "OSTEREIER"
i = i + 1: lRAGN(i) = 6415: sRText(i) = "OSTER-SPEZIALITÄTEN"
i = i + 1: lRAGN(i) = 6416: sRText(i) = "KÄFER"
i = i + 1: lRAGN(i) = 6417: sRText(i) = "NESTER/KÖRBE/MISCHUNGEN"
i = i + 1: lRAGN(i) = 6418: sRText(i) = "OSTER-PRÄSENTARTIKEL"
i = i + 1: lRAGN(i) = 6420: sRText(i) = "OSTERN V-MWST."
i = i + 1: lRAGN(i) = 6421: sRText(i) = "OSTER-ARTIKEL V-MWST"
i = i + 1: lRAGN(i) = 6430: sRText(i) = "WEIHNACHTEN-GEBÄCK E-MWST"
i = i + 1: lRAGN(i) = 6431: sRText(i) = "LEBKUCHEN"
i = i + 1: lRAGN(i) = 6432: sRText(i) = "GEBÄCK-SPEZIALITÄTEN"
i = i + 1: lRAGN(i) = 6433: sRText(i) = "SPEKULATIUS"
i = i + 1: lRAGN(i) = 6434: sRText(i) = "DOMINOSTEINE"
i = i + 1: lRAGN(i) = 6440: sRText(i) = "WEIHNACHTSARTIKEL V-MWST."
i = i + 1: lRAGN(i) = 6441: sRText(i) = "WEIHNACHTS-ARTIKEL V-MWST."
i = i + 1: lRAGN(i) = 6450: sRText(i) = "WEIHNACHTEN-SCHOKOLADE E-MWST."
i = i + 1: lRAGN(i) = 6451: sRText(i) = "WEIHN.-MARZIPAN"
i = i + 1: lRAGN(i) = 6452: sRText(i) = "ADVENTSKALENDER"
i = i + 1: lRAGN(i) = 6453: sRText(i) = "WEIHN.-FIGUREN HOHL/MASSIV"
i = i + 1: lRAGN(i) = 6454: sRText(i) = "TELLERSORTIMENT/KÖRBE/MISCHUNG"
i = i + 1: lRAGN(i) = 6455: sRText(i) = "WEIHNACHTSKUGELN"
i = i + 1: lRAGN(i) = 6456: sRText(i) = "WEIHN.-SPEZIALITÄTEN"
i = i + 1: lRAGN(i) = 6457: sRText(i) = "DRAGEES"
i = i + 1: lRAGN(i) = 6458: sRText(i) = "BAUMBEHANG"
i = i + 1: lRAGN(i) = 6459: sRText(i) = "PRÄSENTARTIKEL"
i = i + 1: lRAGN(i) = 6460: sRText(i) = "SAMMELGRUPPE FOOD"
i = i + 1: lRAGN(i) = 6461: sRText(i) = "FOOD E-MWST.SAMMELGRUPPE"
i = i + 1: lRAGN(i) = 6462: sRText(i) = "GESCHENKKÖRBE EIGENPROD.E-MWST"
i = i + 1: lRAGN(i) = 6463: sRText(i) = "TEST WARENGRUPPE"
i = i + 1: lRAGN(i) = 6470: sRText(i) = "SAMMELGRUPPE CAFETERIA"
i = i + 1: lRAGN(i) = 6471: sRText(i) = "KARSTADT V.MWST"
i = i + 1: lRAGN(i) = 6472: sRText(i) = "KARSTADT E MWST."
i = i + 1: lRAGN(i) = 6480: sRText(i) = "SAMMELGRUPPE FOOD"
i = i + 1: lRAGN(i) = 6482: sRText(i) = "GESCHENKKÖRBE EIGENPROD.V-MWST"
i = i + 1: lRAGN(i) = 6490: sRText(i) = "SAMMELWARENGRUPPE DROGERIE"
i = i + 1: lRAGN(i) = 6500: sRText(i) = "TIERFUTTER,ZOOLOGISCHE ARTIKEL"
i = i + 1: lRAGN(i) = 6510: sRText(i) = "TROCKENNAHRUNG HUND"
i = i + 1: lRAGN(i) = 6511: sRText(i) = "TROCKENNAHRUNG HUND"
i = i + 1: lRAGN(i) = 6512: sRText(i) = "DOSENNAHRUNG HUND"
i = i + 1: lRAGN(i) = 6513: sRText(i) = "SCHALE/BEUTEL HUND"
i = i + 1: lRAGN(i) = 6514: sRText(i) = "SNACKS HUND"
i = i + 1: lRAGN(i) = 6520: sRText(i) = "TROCKENNAHRUNG KATZE"
i = i + 1: lRAGN(i) = 6521: sRText(i) = "TROCKENNAHRUNG KATZE"
i = i + 1: lRAGN(i) = 6522: sRText(i) = "DOSENNAHRUNG KATZE"
i = i + 1: lRAGN(i) = 6523: sRText(i) = "SCHALE KATZE"
i = i + 1: lRAGN(i) = 6524: sRText(i) = "BEUTEL KATZE"
i = i + 1: lRAGN(i) = 6525: sRText(i) = "SNACKS KATZE"
i = i + 1: lRAGN(i) = 6570: sRText(i) = "HUNDENAHRUNG TK/KATZENNAHRUNG"
i = i + 1: lRAGN(i) = 6571: sRText(i) = "HUNDENAHRUNG TK"
i = i + 1: lRAGN(i) = 6572: sRText(i) = "KATZENNAHRUNG TK"
i = i + 1: lRAGN(i) = 6580: sRText(i) = "SONST.TIERNAHR/-BEDARF E-MWST."
i = i + 1: lRAGN(i) = 6581: sRText(i) = "VOGELFUTTER"
i = i + 1: lRAGN(i) = 6582: sRText(i) = "WINTERVOGELFUTTER"
i = i + 1: lRAGN(i) = 6583: sRText(i) = "NAGER- U. KLEINTIERFUTTER"
i = i + 1: lRAGN(i) = 6584: sRText(i) = "KAU-/TIERBEDARFSART. E-MWST"
i = i + 1: lRAGN(i) = 6585: sRText(i) = "FISCHFUTTER"
i = i + 1: lRAGN(i) = 6586: sRText(i) = "WASSERPFLANZEN/AQUARISTIK E-MW"
i = i + 1: lRAGN(i) = 6587: sRText(i) = "FUTTERMITTEL F.NUTZTIERE EMWST"
i = i + 1: lRAGN(i) = 6590: sRText(i) = "TIERE/ZOOL.ARTIKEL/TIERBED.V-M"
i = i + 1: lRAGN(i) = 6591: sRText(i) = "SAND/STREU V-MWST"
i = i + 1: lRAGN(i) = 6592: sRText(i) = "SPIEL-,KAU-/ZOOARTIKEL V-MWST."
i = i + 1: lRAGN(i) = 6593: sRText(i) = "HUNDE-/KATZENAUSSTATTUNG V-MWS"
i = i + 1: lRAGN(i) = 6594: sRText(i) = "AQUARISTIK/TERRARISTIK V-MWST."
i = i + 1: lRAGN(i) = 6595: sRText(i) = "TIERPFLEGEMITTEL V-MWST."
i = i + 1: lRAGN(i) = 6596: sRText(i) = "KAEFIGE/KOERBE/KLOS/NAEPFE"
i = i + 1: lRAGN(i) = 6597: sRText(i) = "FISCHE"
i = i + 1: lRAGN(i) = 6598: sRText(i) = "VOEGEL"
i = i + 1: lRAGN(i) = 6599: sRText(i) = "NAGER, SONSTIGE TIERE"
i = i + 1: lRAGN(i) = 6600: sRText(i) = "DRUCKEREIERZEUGNISSE"
i = i + 1: lRAGN(i) = 6610: sRText(i) = "ZEITUNGEN/ZEITSCHR./ROMANE E-M"
i = i + 1: lRAGN(i) = 6611: sRText(i) = "ZEITUNGEN/ZEITSCHR/ROMANE E-MW"
i = i + 1: lRAGN(i) = 6612: sRText(i) = "ZEITSCHRIFT REWE-FRAUENMAGAZIN"
i = i + 1: lRAGN(i) = 6620: sRText(i) = "ZEITUNGEN/ZEITSCHR./ROMANE V-M"
i = i + 1: lRAGN(i) = 6621: sRText(i) = "ZEITUNGEN/ZEITSCHR/ROMANE V-MW"
i = i + 1: lRAGN(i) = 6630: sRText(i) = "GLOBEN,STR./-WANDERKARTEN,ATLA"
i = i + 1: lRAGN(i) = 6631: sRText(i) = "GLOBEN,STR./-WANDERKARTEN,ATLA"
i = i + 1: lRAGN(i) = 6640: sRText(i) = "BUECHER E-MWST."
i = i + 1: lRAGN(i) = 6641: sRText(i) = "KINDER- U. JUGENDBUECHER"
i = i + 1: lRAGN(i) = 6642: sRText(i) = "ROMANE"
i = i + 1: lRAGN(i) = 6643: sRText(i) = "SACH- U. FACHBUECHER"
i = i + 1: lRAGN(i) = 6644: sRText(i) = "TASCHENBUECHER"
i = i + 1: lRAGN(i) = 6645: sRText(i) = "BOOKWARE"
i = i + 1: lRAGN(i) = 6646: sRText(i) = "MALBUECHER"
i = i + 1: lRAGN(i) = 6648: sRText(i) = "REMITTENTEN,SONDERPOST.,PREISG"
i = i + 1: lRAGN(i) = 6650: sRText(i) = "BUECHER V-MWST."
i = i + 1: lRAGN(i) = 6651: sRText(i) = "BOOKWARE V-MWST."
i = i + 1: lRAGN(i) = 6652: sRText(i) = "BUECHER V-MWST"
i = i + 1: lRAGN(i) = 6690: sRText(i) = "FIXTASTE ZEITUNGEN/ZEITSCHRIFTEN"
i = i + 1: lRAGN(i) = 6700: sRText(i) = "STRICK-UND STRUMPFWAREN,HEMDEN"
i = i + 1: lRAGN(i) = 6710: sRText(i) = "PULLOVER/STRICKJACKEN"
i = i + 1: lRAGN(i) = 6711: sRText(i) = "DA-PULLOVER/-STRICKJACKEN"
i = i + 1: lRAGN(i) = 6712: sRText(i) = "DA-STRICK JUNGE MODE"
i = i + 1: lRAGN(i) = 6713: sRText(i) = "HE-PULLOVER/-STRICKJACKEN"
i = i + 1: lRAGN(i) = 6714: sRText(i) = "HE-STRICK JUMO"
i = i + 1: lRAGN(i) = 6715: sRText(i) = "KINDERPULLOVER/-STRICKJACKEN"
i = i + 1: lRAGN(i) = 6720: sRText(i) = "SWEAT SHIRT/T-SHIRTS"
i = i + 1: lRAGN(i) = 6721: sRText(i) = "DA-SWEAT SHIRT"
i = i + 1: lRAGN(i) = 6722: sRText(i) = "DA-SWEAT-/ROLLKRAGENSHIRT JUMO"
i = i + 1: lRAGN(i) = 6723: sRText(i) = "DA-T-SHIRT"
i = i + 1: lRAGN(i) = 6724: sRText(i) = "DA-T-SHIRT JUMO"
i = i + 1: lRAGN(i) = 6725: sRText(i) = "HE-SWEAT SHIRT"
i = i + 1: lRAGN(i) = 6726: sRText(i) = "HE-T-SHIRTS"
i = i + 1: lRAGN(i) = 6727: sRText(i) = "HE-T-SHIRT/POLO JUMO"
i = i + 1: lRAGN(i) = 6728: sRText(i) = "KINDER SWEAT-SHIRT"
i = i + 1: lRAGN(i) = 6729: sRText(i) = "KINDER-T-SHIRT"
i = i + 1: lRAGN(i) = 6730: sRText(i) = "HERREN-/KNABEN-HEMDEN"
i = i + 1: lRAGN(i) = 6731: sRText(i) = "HE-HEMDEN 1/1 ARM UNI"
i = i + 1: lRAGN(i) = 6732: sRText(i) = "HE-HEMDEN 1/1 ARM GEMUSTERT"
i = i + 1: lRAGN(i) = 6733: sRText(i) = "HE-HEMDEN 1/2 ARM UNI"
i = i + 1: lRAGN(i) = 6734: sRText(i) = "HE-HEMDEN 1/2 ARM GEMUSTERT"
i = i + 1: lRAGN(i) = 6735: sRText(i) = "KNABENHEMDEN"
i = i + 1: lRAGN(i) = 6736: sRText(i) = "HE-HEMDEN SET 2TLG, 3TLG"
i = i + 1: lRAGN(i) = 6737: sRText(i) = "HERREN POLO SHIRTS"
i = i + 1: lRAGN(i) = 6738: sRText(i) = "HERREN ROLLKRAGEN SHIRT"
i = i + 1: lRAGN(i) = 6739: sRText(i) = "MEHRFACHPACKUNGEN SHIRT"
i = i + 1: lRAGN(i) = 6740: sRText(i) = "KRAWATTEN,TUECHER,SCHALS"
i = i + 1: lRAGN(i) = 6741: sRText(i) = "KRAWATTEN"
i = i + 1: lRAGN(i) = 6742: sRText(i) = "HALS-,KOPF-,EINSTECKTUECHER"
i = i + 1: lRAGN(i) = 6743: sRText(i) = "HE-SCHALS"
i = i + 1: lRAGN(i) = 6744: sRText(i) = "DAMEN SCHALS (INCL. JUMO)"
i = i + 1: lRAGN(i) = 6750: sRText(i) = "DA-STRUMPFWAREN"
i = i + 1: lRAGN(i) = 6751: sRText(i) = "DA-FEINSTRUEMPFE"
i = i + 1: lRAGN(i) = 6752: sRText(i) = "DA-FEINKNIESTRUEMPFE"
i = i + 1: lRAGN(i) = 6753: sRText(i) = "DA-FEINSOECKCHEN"
i = i + 1: lRAGN(i) = 6754: sRText(i) = "DA-FEINSTRUMPFHOSE"
i = i + 1: lRAGN(i) = 6755: sRText(i) = "DA-STRICKKNIESTRUMPF"
i = i + 1: lRAGN(i) = 6756: sRText(i) = "DA-STRICKSOECKCHEN"
i = i + 1: lRAGN(i) = 6757: sRText(i) = "DA-STRICKSTRUMPHOSE"
i = i + 1: lRAGN(i) = 6758: sRText(i) = "DA-SNEAKERSÖCKCHEN"
i = i + 1: lRAGN(i) = 6760: sRText(i) = "HE-STRUMPFWAREN"
i = i + 1: lRAGN(i) = 6761: sRText(i) = "HE-STRICKKNIESTRUEMPFE"
i = i + 1: lRAGN(i) = 6762: sRText(i) = "HE-STRICKSOCKEN"
i = i + 1: lRAGN(i) = 6763: sRText(i) = "TENNIS/SPORTSOCKEN"
i = i + 1: lRAGN(i) = 6764: sRText(i) = "HE-SNEAKERSÖCKCHEN"
i = i + 1: lRAGN(i) = 6770: sRText(i) = "KINDER-STRUMPFWAREN"
i = i + 1: lRAGN(i) = 6771: sRText(i) = "KINDER-KNIESTRÜMPFE"
i = i + 1: lRAGN(i) = 6772: sRText(i) = "KINDER-SOCKEN"
i = i + 1: lRAGN(i) = 6773: sRText(i) = "KINDER FEIN-/STRICKSTRUMPFHOSE"
i = i + 1: lRAGN(i) = 6774: sRText(i) = "BABY-SNEAKERSOECKCHEN"
i = i + 1: lRAGN(i) = 6775: sRText(i) = "BABY SOCKEN"
i = i + 1: lRAGN(i) = 6776: sRText(i) = "BABY FEIN-/STRICKSTRUMPFHOSEN"
i = i + 1: lRAGN(i) = 6777: sRText(i) = "KINDER-SNEAKERSÖCKCHEN"
i = i + 1: lRAGN(i) = 6780: sRText(i) = "DA- U. HE-SPORTBEKLEIDUNG"
i = i + 1: lRAGN(i) = 6781: sRText(i) = "HE-SPORTOBERTEIL(T-SHIRT ETC.)"
i = i + 1: lRAGN(i) = 6782: sRText(i) = "DA-/HE-JOGGINGANZUG"
i = i + 1: lRAGN(i) = 6783: sRText(i) = "HE SPORT HOSE LANG U. KURZ"
i = i + 1: lRAGN(i) = 6784: sRText(i) = "DA-/HE-REGENBEKLEIDUNG"
i = i + 1: lRAGN(i) = 6785: sRText(i) = "DA-SPORTHOSE LANG U. KURZ"
i = i + 1: lRAGN(i) = 6786: sRText(i) = "DA-/HE-SKIANZÜGE/-HOSEN+JACKEN"
i = i + 1: lRAGN(i) = 6787: sRText(i) = "DA-/HE-HANDSCHUHE/MUETZEN"
i = i + 1: lRAGN(i) = 6788: sRText(i) = "DA-SPORTOBERTEIL,T-/SWEATSHIRT"
i = i + 1: lRAGN(i) = 6790: sRText(i) = "KINDER-SPORTBEKLEIDUNG"
i = i + 1: lRAGN(i) = 6791: sRText(i) = "KINDER-JOGGINGHOSE"
i = i + 1: lRAGN(i) = 6792: sRText(i) = "KINDER-JOGGINGANZUG"
i = i + 1: lRAGN(i) = 6793: sRText(i) = "KINDER-SPORTHOSE U. -SHORT"
i = i + 1: lRAGN(i) = 6794: sRText(i) = "KINDER-REGENBEKLEIDUNG"
i = i + 1: lRAGN(i) = 6795: sRText(i) = "KINDER-SKIHOSEN U. -JACKEN"
i = i + 1: lRAGN(i) = 6796: sRText(i) = "KINDER-SKIANZUEGE"
i = i + 1: lRAGN(i) = 6797: sRText(i) = "KINDER-HANDSCHUH,-MUETZE,-SCHAL"
i = i + 1: lRAGN(i) = 6800: sRText(i) = "TAG-/NACHTWAESCHE,BADE-/BABYMO"
i = i + 1: lRAGN(i) = 6810: sRText(i) = "DA-TAGWAESCHE"
i = i + 1: lRAGN(i) = 6811: sRText(i) = "DA-SLIP"
i = i + 1: lRAGN(i) = 6812: sRText(i) = "DA-UNTERZIEHHOSE"
i = i + 1: lRAGN(i) = 6813: sRText(i) = "DA-UNTERHEMD"
i = i + 1: lRAGN(i) = 6814: sRText(i) = "DA-GARNITUREN"
i = i + 1: lRAGN(i) = 6815: sRText(i) = "DA-BODY U. TEDDY"
i = i + 1: lRAGN(i) = 6820: sRText(i) = "DA-NACHTWAESCHE"
i = i + 1: lRAGN(i) = 6821: sRText(i) = "DA-NACHTHEMD"
i = i + 1: lRAGN(i) = 6822: sRText(i) = "DA-SHORTY"
i = i + 1: lRAGN(i) = 6823: sRText(i) = "DA-SCHLAFANZUG"
i = i + 1: lRAGN(i) = 6830: sRText(i) = "HE-TAGWAESCHE"
i = i + 1: lRAGN(i) = 6831: sRText(i) = "HE-UNTERHEMD"
i = i + 1: lRAGN(i) = 6832: sRText(i) = "HE-SLIP"
i = i + 1: lRAGN(i) = 6833: sRText(i) = "HE-WAESCHESHORTS"
i = i + 1: lRAGN(i) = 6834: sRText(i) = "HE-(LANGE) UNTERHOSEN"
i = i + 1: lRAGN(i) = 6835: sRText(i) = "HE-BODY"
i = i + 1: lRAGN(i) = 6840: sRText(i) = "HE-NACHTWAESCHE"
i = i + 1: lRAGN(i) = 6841: sRText(i) = "HERREN SCHLAFANZUG"
i = i + 1: lRAGN(i) = 6842: sRText(i) = "HERREN SHORTY"
i = i + 1: lRAGN(i) = 6850: sRText(i) = "KINDER-/BABY-TAG-U. NACHTWAESC"
i = i + 1: lRAGN(i) = 6851: sRText(i) = "MAEDCHEN-UNTERHEMD"
i = i + 1: lRAGN(i) = 6852: sRText(i) = "MAEDCHEN-SLIP"
i = i + 1: lRAGN(i) = 6853: sRText(i) = "MAEDCHEN-GARNITUR"
i = i + 1: lRAGN(i) = 6854: sRText(i) = "KNABEN-UNTERHEMD"
i = i + 1: lRAGN(i) = 6855: sRText(i) = "KNABEN-SLIP"
i = i + 1: lRAGN(i) = 6856: sRText(i) = "KNABEN-GARNITUR"
i = i + 1: lRAGN(i) = 6857: sRText(i) = "KINDER-SCHLAFANZUG"
i = i + 1: lRAGN(i) = 6858: sRText(i) = "MAEDCHEN-NACHTHEMD"
i = i + 1: lRAGN(i) = 6860: sRText(i) = "MIEDERWAREN"
i = i + 1: lRAGN(i) = 6861: sRText(i) = "BUESTENHALTER (BH)"
i = i + 1: lRAGN(i) = 6862: sRText(i) = "WAESCHE/MIEDERSLIP"
i = i + 1: lRAGN(i) = 6863: sRText(i) = "KORSETT"
i = i + 1: lRAGN(i) = 6870: sRText(i) = "BADEMODEN"
i = i + 1: lRAGN(i) = 6871: sRText(i) = "DA-BIKINI"
i = i + 1: lRAGN(i) = 6872: sRText(i) = "DA-BADEANZUG/-HOSE"
i = i + 1: lRAGN(i) = 6873: sRText(i) = "HE-BADEHOSE"
i = i + 1: lRAGN(i) = 6874: sRText(i) = "MAEDCHEN-BIKINI"
i = i + 1: lRAGN(i) = 6875: sRText(i) = "MAEDCHEN-BADEANZUG/-HOSE"
i = i + 1: lRAGN(i) = 6876: sRText(i) = "KNABEN-BADEHOSE"
i = i + 1: lRAGN(i) = 6877: sRText(i) = "BADEMUETZE,-SCHUHE,-SANDAL,ZUB"
i = i + 1: lRAGN(i) = 6880: sRText(i) = "BABY-TEXTILIEN"
i = i + 1: lRAGN(i) = 6881: sRText(i) = "BABY-WAESCHE (HEMD/SLIP/BODY)"
i = i + 1: lRAGN(i) = 6882: sRText(i) = "BABY-STRAMPLER"
i = i + 1: lRAGN(i) = 6883: sRText(i) = "BABY-BLUSEN,-HEMD,-ROECKE,T-SH"
i = i + 1: lRAGN(i) = 6884: sRText(i) = "BABY-AUSFAHRGARNIT.-WAGENANZUEGE"
i = i + 1: lRAGN(i) = 6885: sRText(i) = "BABY-JACKE,-ANORAK,-MANTEL"
i = i + 1: lRAGN(i) = 6886: sRText(i) = "BABY-SCHAL,-MUETZE,-HANDSCHUHE"
i = i + 1: lRAGN(i) = 6887: sRText(i) = "BABY HOSEN"
i = i + 1: lRAGN(i) = 6888: sRText(i) = "BABY PULLOVER / SWEAT-SHIRTS"
i = i + 1: lRAGN(i) = 6889: sRText(i) = "BABY SCHLAFANZUG"
i = i + 1: lRAGN(i) = 6890: sRText(i) = "BABYBEDARF,-ACCESSOIRES,-SCHUH"
i = i + 1: lRAGN(i) = 6891: sRText(i) = "BABY-SCHUH"
i = i + 1: lRAGN(i) = 6892: sRText(i) = "BABY-SANITAER/-HARTWAREN"
i = i + 1: lRAGN(i) = 6893: sRText(i) = "BABY-KINDER-/SPORTWAGEN"
i = i + 1: lRAGN(i) = 6894: sRText(i) = "BABYBEDARF (SAUGER,FLASCHE ETC"
i = i + 1: lRAGN(i) = 6895: sRText(i) = "BABY-KLEINTEILE/-HARTWAREN"
i = i + 1: lRAGN(i) = 6896: sRText(i) = "BABY-SCHLAFDECKE,-PLAID,-KISSEN"
i = i + 1: lRAGN(i) = 6897: sRText(i) = "BABY-SCHLAFSACK"
i = i + 1: lRAGN(i) = 6898: sRText(i) = "BABY-STOFFWINDELN, BETTEINLAGEN"
i = i + 1: lRAGN(i) = 6900: sRText(i) = "HEIMTEXTILIEN/KURZWAREN"
i = i + 1: lRAGN(i) = 6910: sRText(i) = "GARDINEN"
i = i + 1: lRAGN(i) = 6911: sRText(i) = "STORE METERWARE"
i = i + 1: lRAGN(i) = 6912: sRText(i) = "DEKO METERWARE"
i = i + 1: lRAGN(i) = 6913: sRText(i) = "FERTIGSTORE"
i = i + 1: lRAGN(i) = 6920: sRText(i) = "FROTTIERWAREN/KUECHENTUECHER"
i = i + 1: lRAGN(i) = 6921: sRText(i) = "HANDTUCH/GAESTETUCH"
i = i + 1: lRAGN(i) = 6922: sRText(i) = "WASCHHANDSCHUH"
i = i + 1: lRAGN(i) = 6923: sRText(i) = "BADESTOLA,DUSCH- U.BADETUCH"
i = i + 1: lRAGN(i) = 6924: sRText(i) = "BADEMANTEL"
i = i + 1: lRAGN(i) = 6925: sRText(i) = "STRANDLAKEN/-TUECHER"
i = i + 1: lRAGN(i) = 6926: sRText(i) = "GESCHIRR-,KUECHENT.,TOPFLAPPEN"
i = i + 1: lRAGN(i) = 6930: sRText(i) = "TISCHWAESCHE"
i = i + 1: lRAGN(i) = 6931: sRText(i) = "TISCHDECKEN/-TUECHER"
i = i + 1: lRAGN(i) = 6932: sRText(i) = "TEXTIL-SERVIETTEN"
i = i + 1: lRAGN(i) = 6933: sRText(i) = "TISCHLAEUFER"
i = i + 1: lRAGN(i) = 6934: sRText(i) = "MITTELDECKE"
i = i + 1: lRAGN(i) = 6940: sRText(i) = "BETTWAESCHE"
i = i + 1: lRAGN(i) = 6941: sRText(i) = "BETTUCH"
i = i + 1: lRAGN(i) = 6942: sRText(i) = "SPANNBETTUCH"
i = i + 1: lRAGN(i) = 6943: sRText(i) = "BETTWAESCHE-GARNITUR"
i = i + 1: lRAGN(i) = 6944: sRText(i) = "KISSENBEZUG"
i = i + 1: lRAGN(i) = 6950: sRText(i) = "BETTWARE"
i = i + 1: lRAGN(i) = 6951: sRText(i) = "KOPFKISSEN"
i = i + 1: lRAGN(i) = 6952: sRText(i) = "EINZIEHDECKE"
i = i + 1: lRAGN(i) = 6953: sRText(i) = "STEPPBETT"
i = i + 1: lRAGN(i) = 6954: sRText(i) = "TAGESDECKE"
i = i + 1: lRAGN(i) = 6955: sRText(i) = "MATRATZEN/RAHMENSCHONER"
i = i + 1: lRAGN(i) = 6960: sRText(i) = "DECKEN,SCHLAFDECKEN"
i = i + 1: lRAGN(i) = 6961: sRText(i) = "REISEPLAID"
i = i + 1: lRAGN(i) = 6962: sRText(i) = "SCHLAFDECKEN"
i = i + 1: lRAGN(i) = 6963: sRText(i) = "KINDERDECKEN"
i = i + 1: lRAGN(i) = 6970: sRText(i) = "STUHL-/COCKTAILKISSEN/HUELLEN"
i = i + 1: lRAGN(i) = 6971: sRText(i) = "STUHLKISSEN"
i = i + 1: lRAGN(i) = 6972: sRText(i) = "COCKTAILKISSEN"
i = i + 1: lRAGN(i) = 6973: sRText(i) = "KISSENHUELLEN"
i = i + 1: lRAGN(i) = 6980: sRText(i) = "KURZWAREN/HANDSTRICKGARNE"
i = i + 1: lRAGN(i) = 6981: sRText(i) = "KURZWAREN"
i = i + 1: lRAGN(i) = 6983: sRText(i) = "HANDSTRICKGARNE"
i = i + 1: lRAGN(i) = 6990: sRText(i) = "SAMMELGRUPPE TEXTIL"
i = i + 1: lRAGN(i) = 6991: sRText(i) = "TEXTIL SAMMELGRUPPE"


        
    For j = 0 To i
        sSQL = "Insert into ReweAGN (REWEAGN,REWEAGTEXT) values (" & lRAGN(j) & ",'" & sRText(j) & "')"
        gdBase.Execute sSQL, dbFailOnError
    Next j
        
Exit Sub
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "FuelleReweAgn2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1

End Sub
Private Sub FuelleReweAgn3()
    On Error GoTo LOKAL_ERROR

    Dim sSQL As String
    Dim lRAGN(3000) As Long
    Dim sRText(3000) As String
    Dim i As Integer
    Dim j As Integer
    
    i = -1
    
    
    
i = i + 1: lRAGN(i) = 7000: sRText(i) = "KONFEKTION"
i = i + 1: lRAGN(i) = 7010: sRText(i) = "DOB HOSE/ROCK"
i = i + 1: lRAGN(i) = 7011: sRText(i) = "DA-HOSE (AUSSER JEANS)"
i = i + 1: lRAGN(i) = 7012: sRText(i) = "DA-KURZE HOSE (Z.B. BERMUDA)"
i = i + 1: lRAGN(i) = 7013: sRText(i) = "DA-HOSE JUMO"
i = i + 1: lRAGN(i) = 7014: sRText(i) = "DA-ROCK"
i = i + 1: lRAGN(i) = 7015: sRText(i) = "DA-ROCK JUNGE MODE"
i = i + 1: lRAGN(i) = 7016: sRText(i) = "DA-JEANS"
i = i + 1: lRAGN(i) = 7017: sRText(i) = "DA-JEANS JUNGE MODE"
i = i + 1: lRAGN(i) = 7018: sRText(i) = "LEGGINGS/KOMBI/SETS/OVERALL"
i = i + 1: lRAGN(i) = 7019: sRText(i) = "DA-LEGGINGS,RADLER,SHORTS JUMO"
i = i + 1: lRAGN(i) = 7020: sRText(i) = "DOB BLUSE/KLEID/KITTEL"
i = i + 1: lRAGN(i) = 7021: sRText(i) = "DA-BLUSE 1/1 ARM"
i = i + 1: lRAGN(i) = 7022: sRText(i) = "DA-BLUSE 1/2 ARM"
i = i + 1: lRAGN(i) = 7023: sRText(i) = "DA-BLUSE 1/1 ARM JUNGE MODE"
i = i + 1: lRAGN(i) = 7024: sRText(i) = "DA-KITTEL"
i = i + 1: lRAGN(i) = 7025: sRText(i) = "DA-KLEID"
i = i + 1: lRAGN(i) = 7026: sRText(i) = "DA-KLEID  JUNGE MODE"
i = i + 1: lRAGN(i) = 7027: sRText(i) = "DA-BLUSE HALBER ARM JUMO"
i = i + 1: lRAGN(i) = 7030: sRText(i) = "DOB JACKE/MANTEL/ANORAK"
i = i + 1: lRAGN(i) = 7031: sRText(i) = "DA-JACKE/WESTE (WOLLE/STOFF)"
i = i + 1: lRAGN(i) = 7032: sRText(i) = "DA-JACKE LEDER"
i = i + 1: lRAGN(i) = 7033: sRText(i) = "DA-BLAZER"
i = i + 1: lRAGN(i) = 7034: sRText(i) = "DA-BLOUSON"
i = i + 1: lRAGN(i) = 7035: sRText(i) = "DA-ANORAK"
i = i + 1: lRAGN(i) = 7036: sRText(i) = "DA-JACKE/BLAZER/MÄNTEL JUMO"
i = i + 1: lRAGN(i) = 7037: sRText(i) = "DA-MANTEL"
i = i + 1: lRAGN(i) = 7038: sRText(i) = "DAMEN WESTE JUNGE MODE"
i = i + 1: lRAGN(i) = 7040: sRText(i) = "HERREN HOSE"
i = i + 1: lRAGN(i) = 7041: sRText(i) = "HE-HOSE (KLASSIK)"
i = i + 1: lRAGN(i) = 7042: sRText(i) = "HE-HOSE FREIZEIT JUMO"
i = i + 1: lRAGN(i) = 7043: sRText(i) = "HE-KURZE HOSE (Z.B.SHORT,BERMU"
i = i + 1: lRAGN(i) = 7044: sRText(i) = "HE-HOSE KURZ JUMO"
i = i + 1: lRAGN(i) = 7045: sRText(i) = "HE-JEANS NO NAME"
i = i + 1: lRAGN(i) = 7046: sRText(i) = "HE-JEANS JUMO"
i = i + 1: lRAGN(i) = 7047: sRText(i) = "HE-JEANS HAKA"
i = i + 1: lRAGN(i) = 7050: sRText(i) = "HE-JACKE/-MANTEL INCL.UNISEX)"
i = i + 1: lRAGN(i) = 7051: sRText(i) = "HE-SAKKO,-BLAZER"
i = i + 1: lRAGN(i) = 7052: sRText(i) = "HE-JACKE LEDER"
i = i + 1: lRAGN(i) = 7053: sRText(i) = "UNISEX-LEDER JUMO"
i = i + 1: lRAGN(i) = 7054: sRText(i) = "HE-WESTEN"
i = i + 1: lRAGN(i) = 7055: sRText(i) = "HE-ANORAK/-BLOUSON U.LONGJACKE"
i = i + 1: lRAGN(i) = 7056: sRText(i) = "HE-JACKEN JUMO"
i = i + 1: lRAGN(i) = 7057: sRText(i) = "HE WESTEN,JEANSJACKEN JUMO"
i = i + 1: lRAGN(i) = 7058: sRText(i) = "HE-MANTEL"
i = i + 1: lRAGN(i) = 7059: sRText(i) = "HE-ANZUG"
i = i + 1: lRAGN(i) = 7060: sRText(i) = "KINDER-HOSE,-JACKE,-MANTEL"
i = i + 1: lRAGN(i) = 7061: sRText(i) = "KLEINKIND-HOSE/-JEANS"
i = i + 1: lRAGN(i) = 7062: sRText(i) = "KLEINKIND-LATZHOSE"
i = i + 1: lRAGN(i) = 7063: sRText(i) = "KINDER-HOSEN"
i = i + 1: lRAGN(i) = 7064: sRText(i) = "KINDER-LATZHOSEN"
i = i + 1: lRAGN(i) = 7065: sRText(i) = "KINDER-JEANS"
i = i + 1: lRAGN(i) = 7066: sRText(i) = "KINDER-SHORTS/-BERMUDA"
i = i + 1: lRAGN(i) = 7067: sRText(i) = "KINDER-JACKE,-BLAZER,-WESTE"
i = i + 1: lRAGN(i) = 7068: sRText(i) = "KINDER-MANTEL"
i = i + 1: lRAGN(i) = 7069: sRText(i) = "KINDERKOMBI U. SETS"
i = i + 1: lRAGN(i) = 7070: sRText(i) = "MAEDCHENOBERBEKLEIDUNG"
i = i + 1: lRAGN(i) = 7071: sRText(i) = "MAEDCHEN-BLUSE"
i = i + 1: lRAGN(i) = 7072: sRText(i) = "MAEDCHEN-KLEID"
i = i + 1: lRAGN(i) = 7073: sRText(i) = "MAEDCHENROCK/HOSENROCK"
i = i + 1: lRAGN(i) = 7080: sRText(i) = "BERUFSKLEIDUNG"
i = i + 1: lRAGN(i) = 7081: sRText(i) = "BERUFSKLEIDUNG (VERKAUF)"
i = i + 1: lRAGN(i) = 7100: sRText(i) = "SCHUHE/LEDERWAREN"
i = i + 1: lRAGN(i) = 7110: sRText(i) = "DAMENSCHUHE"
i = i + 1: lRAGN(i) = 7111: sRText(i) = "DA-SCHUHE"
i = i + 1: lRAGN(i) = 7112: sRText(i) = "DA-STIEFEL"
i = i + 1: lRAGN(i) = 7113: sRText(i) = "DA-SPORTSCHUHE"
i = i + 1: lRAGN(i) = 7114: sRText(i) = "DA-SANDALEN"
i = i + 1: lRAGN(i) = 7115: sRText(i) = "DA-HAUSSCHUHE"
i = i + 1: lRAGN(i) = 7116: sRText(i) = "DA BIO-PANTOLETTEN"
i = i + 1: lRAGN(i) = 7117: sRText(i) = "DA BADESCHUHE"
i = i + 1: lRAGN(i) = 7120: sRText(i) = "HERRENSCHUHE/GUMMISTIEFEL/MOON"
i = i + 1: lRAGN(i) = 7121: sRText(i) = "HE-SCHUHE"
i = i + 1: lRAGN(i) = 7122: sRText(i) = "HE-STIEFEL"
i = i + 1: lRAGN(i) = 7123: sRText(i) = "HE-SPORTSCHUHE"
i = i + 1: lRAGN(i) = 7124: sRText(i) = "HE-SANDALEN"
i = i + 1: lRAGN(i) = 7125: sRText(i) = "HE-HAUSSCHUHE"
i = i + 1: lRAGN(i) = 7126: sRText(i) = "GUMMISTIEFEL/MOON-BOOTS DA+HE"
i = i + 1: lRAGN(i) = 7127: sRText(i) = "HE-BIO PANTOLETTEN"
i = i + 1: lRAGN(i) = 7128: sRText(i) = "SCHUHZUB./EINLEGESOHL/SCHNUERS"
i = i + 1: lRAGN(i) = 7129: sRText(i) = "HE-BADESCHUHE"
i = i + 1: lRAGN(i) = 7130: sRText(i) = "KINDERSCHUHE"
i = i + 1: lRAGN(i) = 7131: sRText(i) = "KI-SCHUHE"
i = i + 1: lRAGN(i) = 7132: sRText(i) = "KI-STIEFEL"
i = i + 1: lRAGN(i) = 7133: sRText(i) = "KI-SPORTSCHUHE"
i = i + 1: lRAGN(i) = 7134: sRText(i) = "KI-SANDALEN"
i = i + 1: lRAGN(i) = 7135: sRText(i) = "KI-HAUSSCHUHE"
i = i + 1: lRAGN(i) = 7136: sRText(i) = "KI BADESCHUHE"
i = i + 1: lRAGN(i) = 7137: sRText(i) = "KI GUMMISTIEFEL"
i = i + 1: lRAGN(i) = 7138: sRText(i) = "KI BIO-PANTOLETTEN"
i = i + 1: lRAGN(i) = 7140: sRText(i) = "KLEINLEDERWAREN"
i = i + 1: lRAGN(i) = 7141: sRText(i) = "GUERTEL"
i = i + 1: lRAGN(i) = 7143: sRText(i) = "SCHIRME"
i = i + 1: lRAGN(i) = 7145: sRText(i) = "GELDB.,BRIEFT.,SCHLUESSELETUIS"
i = i + 1: lRAGN(i) = 7146: sRText(i) = "SCHMUCKKAESTEN"
i = i + 1: lRAGN(i) = 7150: sRText(i) = "KOFFER/TASCHEN"
i = i + 1: lRAGN(i) = 7151: sRText(i) = "AKTENKOFFER"
i = i + 1: lRAGN(i) = 7152: sRText(i) = "COLLEGEMAPPEN"
i = i + 1: lRAGN(i) = 7153: sRText(i) = "KINDERTASCH/-RANZ./-RUCKSAECKE"
i = i + 1: lRAGN(i) = 7154: sRText(i) = "REISEKOFFER INKL. GURTE"
i = i + 1: lRAGN(i) = 7155: sRText(i) = "REISETASCHEN"
i = i + 1: lRAGN(i) = 7156: sRText(i) = "FLUGTASCHEN (BORDCASE)"
i = i + 1: lRAGN(i) = 7157: sRText(i) = "KOSMETIKKOFFER/-TASCHEN"
i = i + 1: lRAGN(i) = 7160: sRText(i) = "HANDTASCHEN/BEUTEL"
i = i + 1: lRAGN(i) = 7161: sRText(i) = "HANDTASCHEN"
i = i + 1: lRAGN(i) = 7162: sRText(i) = "CITYTASCHEN/GUERTELTASCHEN"
i = i + 1: lRAGN(i) = 7163: sRText(i) = "EINKAUFSBEUTEL,SHOPPER"
i = i + 1: lRAGN(i) = 7164: sRText(i) = "KULTURTASCHEN"
i = i + 1: lRAGN(i) = 7200: sRText(i) = "CAMPING-,GARTENMOEBEL,GRILL"
i = i + 1: lRAGN(i) = 7210: sRText(i) = "GARTEN- UND CAMPINGMOEBEL"
i = i + 1: lRAGN(i) = 7211: sRText(i) = "GARTENBAENKE/GARTEN-MOEBELSET"
i = i + 1: lRAGN(i) = 7212: sRText(i) = "GARTEN-SESSEL"
i = i + 1: lRAGN(i) = 7213: sRText(i) = "GARTEN-LIEGEN"
i = i + 1: lRAGN(i) = 7214: sRText(i) = "HOLLYWOODSCHAUKELN"
i = i + 1: lRAGN(i) = 7215: sRText(i) = "GARTEN-/CAMP.TISCHE(+SERVIERWAG)"
i = i + 1: lRAGN(i) = 7216: sRText(i) = "CAMPINGSTUEHLE/-HOCKER"
i = i + 1: lRAGN(i) = 7217: sRText(i) = "CAMPINGLIEGEN"
i = i + 1: lRAGN(i) = 7218: sRText(i) = "GARTEN-HOLZMOEBEL"
i = i + 1: lRAGN(i) = 7220: sRText(i) = "AUFLAGEN(CAMPING,GARTEN)"
i = i + 1: lRAGN(i) = 7221: sRText(i) = "AUFL.BIS 6CM STAERKE(GARTEN/CAMP"
i = i + 1: lRAGN(i) = 7222: sRText(i) = "AUFL.UEB.6CM STAERKE(GARTEN/CAMP"
i = i + 1: lRAGN(i) = 7230: sRText(i) = "GRILLGERAETE,-ZUBEHOER,-BEDARF"
i = i + 1: lRAGN(i) = 7231: sRText(i) = "METALLGRILLGERAET"
i = i + 1: lRAGN(i) = 7232: sRText(i) = "GUSSGRILLGERAET"
i = i + 1: lRAGN(i) = 7233: sRText(i) = "GRILLWAGEN"
i = i + 1: lRAGN(i) = 7234: sRText(i) = "LAVASTEINGRILL"
i = i + 1: lRAGN(i) = 7235: sRText(i) = "GASGRILL"
i = i + 1: lRAGN(i) = 7236: sRText(i) = "GRILLBESTECK,-ZUBEHOER"
i = i + 1: lRAGN(i) = 7237: sRText(i) = "GRILLHOLZKOHLE,-BRIKETT"
i = i + 1: lRAGN(i) = 7240: sRText(i) = "ZELT,-ZUBEHOER,SCHLAFSAECKE"
i = i + 1: lRAGN(i) = 7241: sRText(i) = "TRAMPERZELT"
i = i + 1: lRAGN(i) = 7242: sRText(i) = "HAUSZELT"
i = i + 1: lRAGN(i) = 7243: sRText(i) = "ZELTZUBEHOER"
i = i + 1: lRAGN(i) = 7244: sRText(i) = "SCHLAFSAECKE"
i = i + 1: lRAGN(i) = 7250: sRText(i) = "GASBETRIEBENES GERAET/ZUBEHOER"
i = i + 1: lRAGN(i) = 7251: sRText(i) = "GASKOCHER"
i = i + 1: lRAGN(i) = 7252: sRText(i) = "GASLAMPE"
i = i + 1: lRAGN(i) = 7253: sRText(i) = "GASKARTUSCHE"
i = i + 1: lRAGN(i) = 7254: sRText(i) = "SONSTIGES GASZUBEHOER"
i = i + 1: lRAGN(i) = 7255: sRText(i) = "CAMPING WG/ZUBEHOER"
i = i + 1: lRAGN(i) = 7260: sRText(i) = "KUEHLTASCHE,-BOX,-ZUBEHOER"
i = i + 1: lRAGN(i) = 7261: sRText(i) = "KUEHLTASCHE"
i = i + 1: lRAGN(i) = 7262: sRText(i) = "KUEHLBOX"
i = i + 1: lRAGN(i) = 7263: sRText(i) = "KUEHLBOX ELEKTRO"
i = i + 1: lRAGN(i) = 7264: sRText(i) = "KUEHLAKKU"
i = i + 1: lRAGN(i) = 7270: sRText(i) = "LUFTMATRATZE,BOOT,WASSERSPORT"
i = i + 1: lRAGN(i) = 7271: sRText(i) = "LUFTMATRATZE"
i = i + 1: lRAGN(i) = 7272: sRText(i) = "PLANSCHBECKEN"
i = i + 1: lRAGN(i) = 7273: sRText(i) = "BOOT"
i = i + 1: lRAGN(i) = 7274: sRText(i) = "SCHWIMMHILFEN"
i = i + 1: lRAGN(i) = 7275: sRText(i) = "WASSERSPIELZEUG"
i = i + 1: lRAGN(i) = 7276: sRText(i) = "POOL UND ZUBEHÖR"
i = i + 1: lRAGN(i) = 7280: sRText(i) = "SONNENSCHIRM"
i = i + 1: lRAGN(i) = 7281: sRText(i) = "SONNENSCHIRM 180/8 DURCHMESSER"
i = i + 1: lRAGN(i) = 7282: sRText(i) = "SONNENSCHIRM 200/8 DURCHMESSER"
i = i + 1: lRAGN(i) = 7283: sRText(i) = "SONNENSCHIRM 220/8 DURCHMESSER"
i = i + 1: lRAGN(i) = 7284: sRText(i) = "SONSTIGE SONNENSCHIRME"
i = i + 1: lRAGN(i) = 7285: sRText(i) = "MARKT-,PARTYSCHIRME"
i = i + 1: lRAGN(i) = 7286: sRText(i) = "SONNENSCHIRMZUBEHOER"
i = i + 1: lRAGN(i) = 7290: sRText(i) = "CAMPINGZUBEHOER"
i = i + 1: lRAGN(i) = 7291: sRText(i) = "WASSERKANISTER"
i = i + 1: lRAGN(i) = 7292: sRText(i) = "STREIFENVORHANG"
i = i + 1: lRAGN(i) = 7293: sRText(i) = "LIEGEMATTE"
i = i + 1: lRAGN(i) = 7294: sRText(i) = "SONSTIGES CAMPINGZUBEHOER"
i = i + 1: lRAGN(i) = 7300: sRText(i) = "GARTENGERAETE UND -ZUBEHOER"
i = i + 1: lRAGN(i) = 7310: sRText(i) = "RASENMAEHER"
i = i + 1: lRAGN(i) = 7311: sRText(i) = "HANDRASENMAEHER"
i = i + 1: lRAGN(i) = 7312: sRText(i) = "ELEKTRORASENMAEHER"
i = i + 1: lRAGN(i) = 7313: sRText(i) = "BENZINRASENMAEHER"
i = i + 1: lRAGN(i) = 7314: sRText(i) = "RASENTRAKTOREN"
i = i + 1: lRAGN(i) = 7315: sRText(i) = "VERTIKUTIERER"
i = i + 1: lRAGN(i) = 7316: sRText(i) = "TRIMMER"
i = i + 1: lRAGN(i) = 7320: sRText(i) = "GARTENGERAETE 1"
i = i + 1: lRAGN(i) = 7321: sRText(i) = "DUELLENGERAET OHNE STIEL"
i = i + 1: lRAGN(i) = 7322: sRText(i) = "GARTENGERAET MIT STIEL"
i = i + 1: lRAGN(i) = 7323: sRText(i) = "GARTENSCHEREN"
i = i + 1: lRAGN(i) = 7324: sRText(i) = "GARTENHANDGERAET"
i = i + 1: lRAGN(i) = 7325: sRText(i) = "GARTENGERAETSTIEL"
i = i + 1: lRAGN(i) = 7326: sRText(i) = "GARTENGERAETEHALTER"
i = i + 1: lRAGN(i) = 7327: sRText(i) = "SCHREDDER"
i = i + 1: lRAGN(i) = 7328: sRText(i) = "SONST.(MOTORISCHE)GARTEN/GROSS"
i = i + 1: lRAGN(i) = 7330: sRText(i) = "GARTENBEWAESSERUNGSARTIKEL"
i = i + 1: lRAGN(i) = 7331: sRText(i) = "GARTENSCHLÄUCHE"
i = i + 1: lRAGN(i) = 7332: sRText(i) = "GIESSKANNE U. BLUMENSPRUEHER"
i = i + 1: lRAGN(i) = 7333: sRText(i) = "GARTEN-BEWÄSSERUNG METALL"
i = i + 1: lRAGN(i) = 7334: sRText(i) = "GARTENTEICH/TEICHFOLIE/ZUBEHÖR"
i = i + 1: lRAGN(i) = 7335: sRText(i) = "GARTEN-BEWÄSSERUNG-KUNSTSTOFF"
i = i + 1: lRAGN(i) = 7336: sRText(i) = "TAUCHPUMPEN"
i = i + 1: lRAGN(i) = 7337: sRText(i) = "SCHLAUCHWAGEN/SCHLAUCHTRÄGER"
i = i + 1: lRAGN(i) = 7338: sRText(i) = "HAUSWASSERWERKE/HAUSW.AUTOM."
i = i + 1: lRAGN(i) = 7339: sRText(i) = "BEWAESSERUNGSPUMPEN"
i = i + 1: lRAGN(i) = 7340: sRText(i) = "GARTENHAUS/-KARREN"
i = i + 1: lRAGN(i) = 7342: sRText(i) = "GERÄTEHÄUSER"
i = i + 1: lRAGN(i) = 7343: sRText(i) = "LAUBEN"
i = i + 1: lRAGN(i) = 7344: sRText(i) = "GEWAECHSHAUS"
i = i + 1: lRAGN(i) = 7345: sRText(i) = "WINTERGARTEN"
i = i + 1: lRAGN(i) = 7346: sRText(i) = "SCHUBKARREN/KARREN"
i = i + 1: lRAGN(i) = 7350: sRText(i) = "GARTENZUBEHOER"
i = i + 1: lRAGN(i) = 7351: sRText(i) = "GARTENZWERGE/-FIGUREN"
i = i + 1: lRAGN(i) = 7352: sRText(i) = "ANZUCHTHILFE/ANZUCHTTOPF"
i = i + 1: lRAGN(i) = 7353: sRText(i) = "GARTEN-HILFSMITTEL"
i = i + 1: lRAGN(i) = 7354: sRText(i) = "METALLZÄUNE/ZUBEHÖR"
i = i + 1: lRAGN(i) = 7355: sRText(i) = "GARTENHOLZ"
i = i + 1: lRAGN(i) = 7356: sRText(i) = "FLORISTIKART.(SOWEIT NICHT 18F"
i = i + 1: lRAGN(i) = 7357: sRText(i) = "RANKHILFEN"
i = i + 1: lRAGN(i) = 7358: sRText(i) = "GARTEN-ARBEITSSCHUTZ"
i = i + 1: lRAGN(i) = 7359: sRText(i) = "GARTENAUSSTATTUNG"
i = i + 1: lRAGN(i) = 7360: sRText(i) = "GARTEN-LANDSCHAFTSBAU"
i = i + 1: lRAGN(i) = 7361: sRText(i) = "GARTEN-LANDSCHAFTSBAU"
i = i + 1: lRAGN(i) = 7362: sRText(i) = "PFLANZENROLLER,-STÄNDER ETC."
i = i + 1: lRAGN(i) = 7370: sRText(i) = "RASENMAEHER-ZUBEHOER"
i = i + 1: lRAGN(i) = 7371: sRText(i) = "ZUBEHOER ELEKTRORASENMAEHER"
i = i + 1: lRAGN(i) = 7372: sRText(i) = "ZUBEHOER BENZINRASENMAEHER"
i = i + 1: lRAGN(i) = 7373: sRText(i) = "ZUBEHOER RASENTRAKTOREN"
i = i + 1: lRAGN(i) = 7380: sRText(i) = "GARTENGERAETE II"
i = i + 1: lRAGN(i) = 7381: sRText(i) = "GARTENSAEGEN"
i = i + 1: lRAGN(i) = 7382: sRText(i) = "KETTENSAEGEN"
i = i + 1: lRAGN(i) = 7383: sRText(i) = "ZUBEHOER SCHREDDER"
i = i + 1: lRAGN(i) = 7384: sRText(i) = "HECKENSCHEREN"
i = i + 1: lRAGN(i) = 7385: sRText(i) = "MOTORSENSEN"
i = i + 1: lRAGN(i) = 7391: sRText(i) = "SAMMELGRUPPE BAUMARKT"
i = i + 1: lRAGN(i) = 7400: sRText(i) = "AUTO/FAHRRAD U. ZUBEHÖR"
i = i + 1: lRAGN(i) = 7410: sRText(i) = "AUTOPFLEGE (+ZWEIRADPFLEGE)"
i = i + 1: lRAGN(i) = 7411: sRText(i) = "AUTO-SHAMPOO"
i = i + 1: lRAGN(i) = 7412: sRText(i) = "LACKREIN./PFLEGEGERÄTE/POLITUR"
i = i + 1: lRAGN(i) = 7413: sRText(i) = "AUTO TECHNISCHE HILFSMITTEL"
i = i + 1: lRAGN(i) = 7414: sRText(i) = "AUTOLEDER/-SCHWAEMME/-TUECHER"
i = i + 1: lRAGN(i) = i = i + 1: lRAGN(i) = 7415: sRText(i) = "SOMMER ART.(WISCHER, REINIGER)"
i = i + 1: lRAGN(i) = 7416: sRText(i) = "WINTERARTIKEL (Z.B. FROSTSCHUTZ)"
i = i + 1: lRAGN(i) = 7417: sRText(i) = "AUTOPFLEGE AUßEN"
i = i + 1: lRAGN(i) = 7418: sRText(i) = "AUTOPFLEGE INNEN"
i = i + 1: lRAGN(i) = 7419: sRText(i) = "AUTO-LACKE/-SPACHTELMASSE"
i = i + 1: lRAGN(i) = 7420: sRText(i) = "MOTORENOEL ADDITIVE"
i = i + 1: lRAGN(i) = 7421: sRText(i) = "MOTORENOEL VISKOSITAET 5 W 40"
i = i + 1: lRAGN(i) = 7422: sRText(i) = "MOTORENOEL VISKOSITAET 10 W 40"
i = i + 1: lRAGN(i) = 7423: sRText(i) = "MOTORENOEL VISKOSITAET 0 W 40"
i = i + 1: lRAGN(i) = 7424: sRText(i) = "MOTORENOEL VISKOSITAET 15 W 40"
i = i + 1: lRAGN(i) = 7425: sRText(i) = "MOTORENOEL VISKOSITAET 20 W 50"
i = i + 1: lRAGN(i) = 7426: sRText(i) = "SONSTIGE MOTORENOEL VISKOSITAET"
i = i + 1: lRAGN(i) = 7427: sRText(i) = "MOTORENOEL SYNTHETISCH, ADDITIVE"
i = i + 1: lRAGN(i) = 7428: sRText(i) = "BOOT-/MASCH/GETRIEBEOEL,ADDITIVE"
i = i + 1: lRAGN(i) = 7429: sRText(i) = "RASENMÄHER-/BIOÖL"
i = i + 1: lRAGN(i) = 7430: sRText(i) = "AUTOSICHERHEIT/-PANNENHILFE"
i = i + 1: lRAGN(i) = 7431: sRText(i) = "VERBANDSKASTEN/-KISSEN"
i = i + 1: lRAGN(i) = 7432: sRText(i) = "ABSCHL.-SEIL/ABSCHLEPPSTANGE"
i = i + 1: lRAGN(i) = 7433: sRText(i) = "AUTO-WARNLEUCHTEN"
i = i + 1: lRAGN(i) = 7434: sRText(i) = "AUTO-KINDERSITZ"
i = i + 1: lRAGN(i) = 7435: sRText(i) = "AUTO-WERKZEUGE"
i = i + 1: lRAGN(i) = 7436: sRText(i) = "WAGENHEBER UND UNTERSTELLBÖCKE"
i = i + 1: lRAGN(i) = 7437: sRText(i) = "BENZINKANIST/TRICHTER/ÖLWANNEN"
i = i + 1: lRAGN(i) = 7438: sRText(i) = "LADEGERÄTE UND STARTHILFEKABEL"
i = i + 1: lRAGN(i) = 7440: sRText(i) = "AUTOAUSSTATTUNG INNEN"
i = i + 1: lRAGN(i) = 7441: sRText(i) = "AUTO-FUSSMATTEN"
i = i + 1: lRAGN(i) = 7442: sRText(i) = "AUTO-SCHONBEZUG"
i = i + 1: lRAGN(i) = 7443: sRText(i) = "AUTO-ACCESSOIRES"
i = i + 1: lRAGN(i) = 7444: sRText(i) = "SONSTIGE AUTO-INNENAUSSTATTUNG"
i = i + 1: lRAGN(i) = 7445: sRText(i) = "AUTO-SITZAUFLAGEN"
i = i + 1: lRAGN(i) = 7446: sRText(i) = "AUTO TUNINGZUBEHÖR"
i = i + 1: lRAGN(i) = 7447: sRText(i) = "AUTO LUFTERFRISCHER"
i = i + 1: lRAGN(i) = 7450: sRText(i) = "AUTOAUSSTATTUNG AUSSEN"
i = i + 1: lRAGN(i) = 7451: sRText(i) = "AUTO-RADZIERKAPPEN"
i = i + 1: lRAGN(i) = 7452: sRText(i) = "AUTO-AUSPUFFBLENDEN"
i = i + 1: lRAGN(i) = 7453: sRText(i) = "AUTO-AUSSENSPIEGEL"
i = i + 1: lRAGN(i) = 7454: sRText(i) = "AUTO-ZIERSTREIFEN/TUERKANTENSCH."
i = i + 1: lRAGN(i) = 7455: sRText(i) = "AUTO-SONNENDACH"
i = i + 1: lRAGN(i) = 7456: sRText(i) = "DACHGEPAECKTRAEGER U. ZUBEHOER"
i = i + 1: lRAGN(i) = 7457: sRText(i) = "SONSTIGE AUTOAUSSTATTUNG AUSSEN"
i = i + 1: lRAGN(i) = 7460: sRText(i) = "FAHRRÄDER/-ANHÄNGER U. ZUBEHÖR"
i = i + 1: lRAGN(i) = 7461: sRText(i) = "KINDER-JUGENDFAHRRÄDER"
i = i + 1: lRAGN(i) = 7462: sRText(i) = "HERRENRAD"
i = i + 1: lRAGN(i) = 7463: sRText(i) = "DAMENRAD"
i = i + 1: lRAGN(i) = 7464: sRText(i) = "SPEZIALRÄDER,MTB,KLAPPRAD"
i = i + 1: lRAGN(i) = 7465: sRText(i) = "FAHRRADANHÄNGER"
i = i + 1: lRAGN(i) = 7466: sRText(i) = "FAHRRADZUBEHÖR VERSCHLEIß"
i = i + 1: lRAGN(i) = 7467: sRText(i) = "FAHRRADZUBEHÖR SICHERHEIT"
i = i + 1: lRAGN(i) = 7468: sRText(i) = "SONSTIGES FAHRRADZUBEHÖR"
i = i + 1: lRAGN(i) = 7469: sRText(i) = "FAHRRADPFLEGE"
i = i + 1: lRAGN(i) = 7470: sRText(i) = "AUTO-VERSCHLEISSTEILE"
i = i + 1: lRAGN(i) = 7471: sRText(i) = "AUTO-ZUENDKERZEN"
i = i + 1: lRAGN(i) = 7472: sRText(i) = "AUTO-WISCHBLAETTER"
i = i + 1: lRAGN(i) = 7473: sRText(i) = "AUTO-BATTERIEN"
i = i + 1: lRAGN(i) = 7474: sRText(i) = "AUTO-LAMPEN"
i = i + 1: lRAGN(i) = 7475: sRText(i) = "AUTO-ANTENNEN"
i = i + 1: lRAGN(i) = 7476: sRText(i) = "AUTO-KONTAKTE/SCHALTER/LEITUNGEN"
i = i + 1: lRAGN(i) = 7477: sRText(i) = "AUTO-KEILRIEMEN/-BREMSBELAG"
i = i + 1: lRAGN(i) = 7478: sRText(i) = "OEL-/LUFT-/BENZINFILTER"
i = i + 1: lRAGN(i) = 7480: sRText(i) = "AUTOREIFEN"
i = i + 1: lRAGN(i) = 7481: sRText(i) = "AUTO-GUERTELREIFEN"
i = i + 1: lRAGN(i) = 7482: sRText(i) = "AUTO-DIAGONALREIFEN"
i = i + 1: lRAGN(i) = 7483: sRText(i) = "AUTO-M+S-REIFEN"
i = i + 1: lRAGN(i) = 7484: sRText(i) = "AUTO-FELGEN"
i = i + 1: lRAGN(i) = 7485: sRText(i) = "AUTO-SCHLAUCH"
i = i + 1: lRAGN(i) = 7486: sRText(i) = "AUTO-GEWICHTE"
i = i + 1: lRAGN(i) = 7487: sRText(i) = "SONSTIGE AUTOREIFEN"
i = i + 1: lRAGN(i) = 7490: sRText(i) = "TANKSTELLE"
i = i + 1: lRAGN(i) = 7491: sRText(i) = "DIESEL"
i = i + 1: lRAGN(i) = 7492: sRText(i) = "BLEIFREI NORMAL"
i = i + 1: lRAGN(i) = 7493: sRText(i) = "BLEIFREI SUPER"
i = i + 1: lRAGN(i) = 7494: sRText(i) = "SUPER PLUS"
i = i + 1: lRAGN(i) = 7495: sRText(i) = "SUPER VERBLEIT"
i = i + 1: lRAGN(i) = 7496: sRText(i) = "SONSTIGE KRAFTSTOFFE"
i = i + 1: lRAGN(i) = 7497: sRText(i) = "WASCHANLAGEN"
i = i + 1: lRAGN(i) = 7498: sRText(i) = "SONSTIGE SERVICELEISTUNGEN"
i = i + 1: lRAGN(i) = 7500: sRText(i) = "HAUSHALTSWAREN"
i = i + 1: lRAGN(i) = 7510: sRText(i) = "KUECHENARTIKEL"
i = i + 1: lRAGN(i) = 7511: sRText(i) = "BACKZUBEHÖR"
i = i + 1: lRAGN(i) = 7513: sRText(i) = "BACKARTIKEL"
i = i + 1: lRAGN(i) = 7514: sRText(i) = "SCHNEIDEWAREN/BESTECKE"
i = i + 1: lRAGN(i) = 7515: sRText(i) = "HAUSHALTSHELFER"
i = i + 1: lRAGN(i) = 7516: sRText(i) = "ISOLIERGEFAESSE"
i = i + 1: lRAGN(i) = 7517: sRText(i) = "SERVIER-,SCHNEIDEBRETT-,UNTERS"
i = i + 1: lRAGN(i) = 7518: sRText(i) = "KUECHENBEHAELTER"
i = i + 1: lRAGN(i) = 7519: sRText(i) = "TRINKGEFÄßE EDELSTA./STAHL/ALU"
i = i + 1: lRAGN(i) = 7520: sRText(i) = "KUNSTSTOFFARTIKEL"
i = i + 1: lRAGN(i) = 7521: sRText(i) = "KUNSTSTOFFARTIKEL GROSS"
i = i + 1: lRAGN(i) = 7522: sRText(i) = "KUNSTSTOFFARTIKEL KLEIN/TISCH"
i = i + 1: lRAGN(i) = 7523: sRText(i) = "ABFALLEIMER KUNSTSTOFF"
i = i + 1: lRAGN(i) = 7524: sRText(i) = "PLATZMATTEN/TISCHSETS"
i = i + 1: lRAGN(i) = 7530: sRText(i) = "BESEN,BUERSTEN,HOLZWAREN"
i = i + 1: lRAGN(i) = 7531: sRText(i) = "BESEN,BUERSTEN"
i = i + 1: lRAGN(i) = 7532: sRText(i) = "KLEIDERBUEGEL"
i = i + 1: lRAGN(i) = 7534: sRText(i) = "WAESCHELEINEN/-KLAMMERN"
i = i + 1: lRAGN(i) = 7535: sRText(i) = "FUSS-/STUFENMATTEN"
i = i + 1: lRAGN(i) = 7536: sRText(i) = "ORDNUNGSHILFEN"
i = i + 1: lRAGN(i) = 7540: sRText(i) = "HAUSHALTSTUECH,SCHWAEMME,HANDS"
i = i + 1: lRAGN(i) = 7541: sRText(i) = "PUTZ-/BOHNER- U. STAUBTUECHER"
i = i + 1: lRAGN(i) = 7542: sRText(i) = "SCHWAMMTUECHER U. SCHWAEMME"
i = i + 1: lRAGN(i) = 7543: sRText(i) = "SPUELTUECHER"
i = i + 1: lRAGN(i) = 7544: sRText(i) = "TOPFREINIGER"
i = i + 1: lRAGN(i) = 7545: sRText(i) = "FENSTERREINIGER"




i = i + 1: lRAGN(i) = 7546: sRText(i) = "GUMMIHANDSCHUHE"
i = i + 1: lRAGN(i) = 7547: sRText(i) = "SONSTIGE ARBEITSHANDSCHUHE"
i = i + 1: lRAGN(i) = 7550: sRText(i) = "FILTER/KÜCHENHELFER"
i = i + 1: lRAGN(i) = 7551: sRText(i) = "BRAT- U. DUNSTFILTEREINSAETZE"
i = i + 1: lRAGN(i) = 7552: sRText(i) = "KAFFEE-/TEE-KUNSTSTOFFFILTER"
i = i + 1: lRAGN(i) = 7553: sRText(i) = "KÜCHENZUB.FÜR EI-/TEE U.KAFFEE"
i = i + 1: lRAGN(i) = 7554: sRText(i) = "REIBEN"
i = i + 1: lRAGN(i) = 7555: sRText(i) = "GEWÜRZSTREUER"
i = i + 1: lRAGN(i) = 7556: sRText(i) = "SELBSTKLEBEHAKEN"
i = i + 1: lRAGN(i) = 7557: sRText(i) = "KOCHHELFER"
i = i + 1: lRAGN(i) = 7558: sRText(i) = "GETRÄNKEZUBEHÖR"
i = i + 1: lRAGN(i) = 7559: sRText(i) = "TRINKHALM,PARTYPICKER,GRILLZUB"
i = i + 1: lRAGN(i) = 7560: sRText(i) = "PFLANZGEFAESSE(HAUSHALT+GARTEN"
i = i + 1: lRAGN(i) = 7561: sRText(i) = "PFLANZGEFAESSE KUNSTSTOFF"
i = i + 1: lRAGN(i) = 7562: sRText(i) = "PFLANZGEFAESSE HOLZ"
i = i + 1: lRAGN(i) = 7563: sRText(i) = "PFLANZGEFAESSE-ZUBEHOER"
i = i + 1: lRAGN(i) = 7564: sRText(i) = "BRUNNEN U. ZUBEHÖR"
i = i + 1: lRAGN(i) = 7565: sRText(i) = "PFLANZGEFÄSS INDOOR"
i = i + 1: lRAGN(i) = 7566: sRText(i) = "OUTDOOR KERAMIK (GLASIERT)"
i = i + 1: lRAGN(i) = 7567: sRText(i) = "OUTDOOR TERRACOTTA/TERRAZZO"
i = i + 1: lRAGN(i) = 7568: sRText(i) = "GARTENDEKO ZUBEHÖR"
i = i + 1: lRAGN(i) = 7569: sRText(i) = "METALLPFLANZGEFÄßE"
i = i + 1: lRAGN(i) = 7570: sRText(i) = "STAHLROHRARTIKEL/ABFALLEIMER"
i = i + 1: lRAGN(i) = 7571: sRText(i) = "HAUSHALTSLEITERN"
i = i + 1: lRAGN(i) = 7572: sRText(i) = "BUEGELTISCHE"
i = i + 1: lRAGN(i) = 7573: sRText(i) = "WAESCHETROCKNER, DRAHTARTIKEL"
i = i + 1: lRAGN(i) = 7574: sRText(i) = "METALLDOSEN"
i = i + 1: lRAGN(i) = 7575: sRText(i) = "METALLEIMER"
i = i + 1: lRAGN(i) = 7580: sRText(i) = "HAUSHALTSZUBEHOER UND -GERAETE"
i = i + 1: lRAGN(i) = 7581: sRText(i) = "HAUSHALTSWAAGEN"
i = i + 1: lRAGN(i) = 7582: sRText(i) = "PERSONENWAAGEN"
i = i + 1: lRAGN(i) = 7583: sRText(i) = "WASSERSPRUDELGERAETE/ZUBEHOER"
i = i + 1: lRAGN(i) = 7584: sRText(i) = "DIV. HAUSHALTSZUBEHOER"
i = i + 1: lRAGN(i) = 7585: sRText(i) = "WASSERFILTERGERÄTE/-KARTUSCHEN"
i = i + 1: lRAGN(i) = 7586: sRText(i) = "BIERZAPFANLAGEN UND PATRONEN"
i = i + 1: lRAGN(i) = 7590: sRText(i) = "TÖPFE/PFANNEN"
i = i + 1: lRAGN(i) = 7591: sRText(i) = "TÖPFE EDELSTAHL"
i = i + 1: lRAGN(i) = 7592: sRText(i) = "TÖPFE ALU"
i = i + 1: lRAGN(i) = 7593: sRText(i) = "TÖPFE-EMAIL"
i = i + 1: lRAGN(i) = 7594: sRText(i) = "SPEZIAL TÖPFE"
i = i + 1: lRAGN(i) = 7595: sRText(i) = "PFANNEN ALU"
i = i + 1: lRAGN(i) = 7596: sRText(i) = "PFANNEN EDELSTAHL"
i = i + 1: lRAGN(i) = 7597: sRText(i) = "PFANNEN ALU-GUß"
i = i + 1: lRAGN(i) = 7598: sRText(i) = "BRAT UND GRILLFORMEN"
i = i + 1: lRAGN(i) = 7600: sRText(i) = "GLAS,PORZELL,KERAM,KORBW/METAL"
i = i + 1: lRAGN(i) = 7610: sRText(i) = "GLASARTIKEL"
i = i + 1: lRAGN(i) = 7611: sRText(i) = "GLAESER"
i = i + 1: lRAGN(i) = 7612: sRText(i) = "GLAS-GESCHIRR"
i = i + 1: lRAGN(i) = 7613: sRText(i) = "GLAS-GESCHENKARTIKEL"
i = i + 1: lRAGN(i) = 7614: sRText(i) = "GLASVASEN,-SCHALEN,-WINDLICHTE"
i = i + 1: lRAGN(i) = 7620: sRText(i) = "PORZELLAN/KERAMIK/METALL"
i = i + 1: lRAGN(i) = 7621: sRText(i) = "PORZELLAN/KERAM./METALL-GESCHIRR"
i = i + 1: lRAGN(i) = 7622: sRText(i) = "PORZ./KERAM./METALL-GESCHENKART."
i = i + 1: lRAGN(i) = 7623: sRText(i) = "FIGUREN"
i = i + 1: lRAGN(i) = 7624: sRText(i) = "KERAMIKVASEN,-SCHALEN,-TÖPFE"
i = i + 1: lRAGN(i) = 7625: sRText(i) = "KERZENLEUCHTER,-STÄNDER"
i = i + 1: lRAGN(i) = 7626: sRText(i) = "GESCHENKPCKG.BOTTR.V.MWST"
i = i + 1: lRAGN(i) = 7630: sRText(i) = "KORBWAREN"
i = i + 1: lRAGN(i) = 7631: sRText(i) = "PFLANZKÖRBE"
i = i + 1: lRAGN(i) = 7632: sRText(i) = "BROTKÖRBE"
i = i + 1: lRAGN(i) = 7633: sRText(i) = "WÄSCHEKÖRBE"
i = i + 1: lRAGN(i) = 7634: sRText(i) = "EINKAUF-/AUTOKÖRBE"
i = i + 1: lRAGN(i) = 7635: sRText(i) = "PRÄSENTKÖRBE"
i = i + 1: lRAGN(i) = 7636: sRText(i) = "SONSTIGE KÖRBE"
i = i + 1: lRAGN(i) = 7640: sRText(i) = "BOCCHI NONFOOD SAISON"
i = i + 1: lRAGN(i) = 7641: sRText(i) = "BOCCHI NONFOOD SAISON"
i = i + 1: lRAGN(i) = 7650: sRText(i) = "GESCHENKPCKG.DROG.BOTTR.E.MWST"
i = i + 1: lRAGN(i) = 7651: sRText(i) = "GESCHENKPCKG.BOTTR.E.MWST"
i = i + 1: lRAGN(i) = 7700: sRText(i) = "SCHREIBWAREN/EINWEGGESCHIRR/KE"
i = i + 1: lRAGN(i) = 7710: sRText(i) = "SCHREIB-,MAL-,ZEICHEN-GERAETE"
i = i + 1: lRAGN(i) = 7711: sRText(i) = "FUELLHALTER,KUGEL-U. TINTENSCH"
i = i + 1: lRAGN(i) = 7712: sRText(i) = "BLEISTIFTE, SPITZER, RADIERER"
i = i + 1: lRAGN(i) = 7713: sRText(i) = "FOLIENSCHR., MARKER, FASERMALER"
i = i + 1: lRAGN(i) = 7714: sRText(i) = "MINEN, PATRONEN, TINTE"
i = i + 1: lRAGN(i) = 7715: sRText(i) = "BUNTST./KREIDE/FARBE/FARBKAESTEN"
i = i + 1: lRAGN(i) = 7716: sRText(i) = "ZEICHENGER./REISSZEUG/TUSCHEZEIC"
i = i + 1: lRAGN(i) = 7717: sRText(i) = "MALEREI UND KUENSTLERBEDARF"
i = i + 1: lRAGN(i) = 7720: sRText(i) = "BUEROBEDARF"
i = i + 1: lRAGN(i) = 7721: sRText(i) = "ABLAGEKOERBE"
i = i + 1: lRAGN(i) = 7722: sRText(i) = "SONST. REGISTRATUR-/ORDNUNGSMITT"
i = i + 1: lRAGN(i) = 7723: sRText(i) = "RINGBUECHER/ORDNER/MAPPEN/EINLAG"
i = i + 1: lRAGN(i) = 7724: sRText(i) = "KLEBSTOFF/-BAND/-STIFTE"
i = i + 1: lRAGN(i) = 7725: sRText(i) = "SCHREIBTISCHZUB. (+PAPIERKORB)"
i = i + 1: lRAGN(i) = 7726: sRText(i) = "BRIEF-,SCHREIBMA.-,KOHLEPAPIER"
i = i + 1: lRAGN(i) = 7727: sRText(i) = "KOPIERPAPIER"
i = i + 1: lRAGN(i) = 7730: sRText(i) = "SCHULBEDARF"
i = i + 1: lRAGN(i) = 7731: sRText(i) = "SCHULHEFTE/SCHREIB-NOTIZBLOECKE"
i = i + 1: lRAGN(i) = 7732: sRText(i) = "HEFTHUELLEN/HEFTBOXEN/ETIKETTEN"
i = i + 1: lRAGN(i) = 7733: sRText(i) = "ABLAGEMAPPEN"
i = i + 1: lRAGN(i) = 7734: sRText(i) = "MALBUECHER,MAL- U.ZEICHENBLOECKE"
i = i + 1: lRAGN(i) = 7735: sRText(i) = "SCHUELERETUIS U. MAEPPCHEN"
i = i + 1: lRAGN(i) = 7736: sRText(i) = "SCHULBASTELARTIKEL"
i = i + 1: lRAGN(i) = 7740: sRText(i) = "ALBEN,MAPPEN,BILDERRAHMEN"
i = i + 1: lRAGN(i) = 7741: sRText(i) = "ALBEN,MAPPEN,GAESTEB./EXCL. 93"
i = i + 1: lRAGN(i) = 7742: sRText(i) = "BILDERRAHMEN"
i = i + 1: lRAGN(i) = 7743: sRText(i) = "POSTER/WANDKALENDER"
i = i + 1: lRAGN(i) = 7750: sRText(i) = "EINWEGGESCHIRR/-BESTECK"
i = i + 1: lRAGN(i) = 7751: sRText(i) = "PAPPBECHER/-TELLER"
i = i + 1: lRAGN(i) = 7752: sRText(i) = "PAPIERTISCHDECKEN"
i = i + 1: lRAGN(i) = 7753: sRText(i) = "EINWEGBESTECK"
i = i + 1: lRAGN(i) = 7760: sRText(i) = "GRUSSKARTE/GESCHENKPAP/ZIERBAN"
i = i + 1: lRAGN(i) = 7761: sRText(i) = "GRUSS-/GLUECKWUNSCHKARTE"
i = i + 1: lRAGN(i) = 7762: sRText(i) = "GESCHENKPAP., PACKPAPIER, KORDEL"
i = i + 1: lRAGN(i) = 7763: sRText(i) = "ZIERBAENDER"
i = i + 1: lRAGN(i) = 7770: sRText(i) = "KERZEN/GRABLEUCHTEN"
i = i + 1: lRAGN(i) = 7771: sRText(i) = "TEE-/HAUSHALTSKERZEN"
i = i + 1: lRAGN(i) = 7772: sRText(i) = "LEUCHTERKERZEN, STUMPEN"
i = i + 1: lRAGN(i) = 7773: sRText(i) = "GRABLATERNEN/GRABLICHTER"
i = i + 1: lRAGN(i) = 7774: sRText(i) = "FIGUREN-/SPEZIAL-/SAISONKERZEN"
i = i + 1: lRAGN(i) = 7775: sRText(i) = "DUFTKERZEN"
i = i + 1: lRAGN(i) = 7776: sRText(i) = "ZUBEHOER (KERZEN/LEUCHTEN)"
i = i + 1: lRAGN(i) = 7777: sRText(i) = "ÄTHERISCHE ÖLE/RÄUCHERWERK"
i = i + 1: lRAGN(i) = 7800: sRText(i) = "SPIELWAREN,KINDERFAHRZEUGE"
i = i + 1: lRAGN(i) = 7810: sRText(i) = "SPIEL-/PLUESCHTIER,PUPPE,ZUBEH"
i = i + 1: lRAGN(i) = 7811: sRText(i) = "TIERFIG. ETC OHNE MECHANIK"
i = i + 1: lRAGN(i) = 7812: sRText(i) = "PLÜSCHARTIKEL OHNE MECHANIK"
i = i + 1: lRAGN(i) = 7813: sRText(i) = "PLÜSCHARTIKEL MIT MECHANIK"
i = i + 1: lRAGN(i) = 7814: sRText(i) = "TIERFIG. ETC. MIT MECHANIK"
i = i + 1: lRAGN(i) = 7815: sRText(i) = "STEH-/BABYPUPPEN U. ZUBEHÖR"
i = i + 1: lRAGN(i) = 7816: sRText(i) = "HAUSWIRTSCHAFTLICHE ARTIKEL"
i = i + 1: lRAGN(i) = 7817: sRText(i) = "ANKLEIDEPUPPE U. ZUBEHÖR"
i = i + 1: lRAGN(i) = 7820: sRText(i) = "KLEINFAHRZEUGE/MECHANISCHE ART"
i = i + 1: lRAGN(i) = 7821: sRText(i) = "FAHRZEUGE METALL O. FUNKTION"
i = i + 1: lRAGN(i) = 7822: sRText(i) = "FAHRZEUGE METALL M. FUNKTION"
i = i + 1: lRAGN(i) = 7823: sRText(i) = "FAHRZEUG PLASTIK"
i = i + 1: lRAGN(i) = 7824: sRText(i) = "ACTIONFIGUREN"
i = i + 1: lRAGN(i) = 7825: sRText(i) = "EISEN-/AUTORENNBAHN U. ZUBEHÖR"
i = i + 1: lRAGN(i) = 7830: sRText(i) = "GESELLSCHAFTS-/BESCHAEFTIGUNGS"
i = i + 1: lRAGN(i) = 7831: sRText(i) = "QUARTETT/KARTENSPIEL/PUZZLE"
i = i + 1: lRAGN(i) = 7832: sRText(i) = "MUSIKARTIKEL"
i = i + 1: lRAGN(i) = 7833: sRText(i) = "MODELBAU,HOBBY U.BASTELARTIKEL"
i = i + 1: lRAGN(i) = 7836: sRText(i) = "GESELLSCHAFTSSPIEL/LERNSPIEL"
i = i + 1: lRAGN(i) = 7840: sRText(i) = "HOLZ/PLASTIKSPIELWARE"
i = i + 1: lRAGN(i) = 7841: sRText(i) = "HOLZBAUKASTEN"
i = i + 1: lRAGN(i) = 7844: sRText(i) = "PLASTIK KLEINKINDSPIELWAREN"
i = i + 1: lRAGN(i) = 7845: sRText(i) = "SYSTEMSPIELWAREN,(LEGO ETC.)"
i = i + 1: lRAGN(i) = 7846: sRText(i) = "PLASTIK SPIELWARE"
i = i + 1: lRAGN(i) = 7850: sRText(i) = "SPIELWARE SOMMER"
i = i + 1: lRAGN(i) = 7851: sRText(i) = "SANDSPIELWARE"
i = i + 1: lRAGN(i) = 7852: sRText(i) = "RASENSPIEL"
i = i + 1: lRAGN(i) = 7856: sRText(i) = "SCHAUKEL/GESTELL/SANDKASTEN"
i = i + 1: lRAGN(i) = 7860: sRText(i) = "KINDERFAHRZEUGE/GROSSSPIELWARE"
i = i + 1: lRAGN(i) = 7861: sRText(i) = "PUPPEN-/SPORTWAGEN"
i = i + 1: lRAGN(i) = 7862: sRText(i) = "ROLLER/DREIRAD"
i = i + 1: lRAGN(i) = 7863: sRText(i) = "GO-KART/TRETFAHRZEUGE"
i = i + 1: lRAGN(i) = 7864: sRText(i) = "RUTSCHERFAHRZ./GROSSSPIELWAREN"
i = i + 1: lRAGN(i) = 7870: sRText(i) = "FAHRRAEDER/-ANHAENGER"
i = i + 1: lRAGN(i) = 7900: sRText(i) = "SPORTARTIKEL (HARTWARE)"
i = i + 1: lRAGN(i) = 7910: sRText(i) = "BALLSPORT"
i = i + 1: lRAGN(i) = 7911: sRText(i) = "KUNSTSTOFF-BÄLLE"
i = i + 1: lRAGN(i) = 7912: sRText(i) = "SYNTHETIKLEDER-BÄLLE"
i = i + 1: lRAGN(i) = 7913: sRText(i) = "BALLZUBEHÖR, KÖRBE, TORE"
i = i + 1: lRAGN(i) = 7914: sRText(i) = "T-TENNIS,FEDERBALL,BADM,SQUASH"
i = i + 1: lRAGN(i) = 7915: sRText(i) = "BEACH-VOLLEY-HAND-AMERC.FBALL"
i = i + 1: lRAGN(i) = 7916: sRText(i) = "PVC BÄLLE BIS 8 ZOLL"
i = i + 1: lRAGN(i) = 7917: sRText(i) = "PVC BÄLLE ÜBER 8 ZOLL"
i = i + 1: lRAGN(i) = 7918: sRText(i) = "GOLF- / ZUBEHÖR"
i = i + 1: lRAGN(i) = 7920: sRText(i) = "WURF-/SCHUSS-/FLUGGERÄTE"
i = i + 1: lRAGN(i) = 7921: sRText(i) = "DART/-ZUBEHÖR"
i = i + 1: lRAGN(i) = 7922: sRText(i) = "DRACHEN, KITES"
i = i + 1: lRAGN(i) = 7923: sRText(i) = "PFEIL U. BOGEN"
i = i + 1: lRAGN(i) = 7924: sRText(i) = "WURFSCHEIBEN,BUMERANG,SONSTIGE"
i = i + 1: lRAGN(i) = 7930: sRText(i) = "GYMNASTIK/KRAFTSPORT/AEROBIC"
i = i + 1: lRAGN(i) = 7931: sRText(i) = "GYMNASTIKBÄLLE-BÄNDER,MASSAGEB"
i = i + 1: lRAGN(i) = 7932: sRText(i) = "GEWICHTE, HANTELN"
i = i + 1: lRAGN(i) = 7933: sRText(i) = "HEIM-/CROSSTRAINER,STEPPER"
i = i + 1: lRAGN(i) = 7934: sRText(i) = "TRIMMGERÄT,BOXSPORT,SPRINGSEIL"
i = i + 1: lRAGN(i) = 7935: sRText(i) = "KRAFTSPORT,GROSSGERÄTE,ZUBEHÖR"
i = i + 1: lRAGN(i) = 7940: sRText(i) = "WASSERSPORT"
i = i + 1: lRAGN(i) = 7941: sRText(i) = "TAUCHSPORT"
i = i + 1: lRAGN(i) = 7950: sRText(i) = "WANDERN"
i = i + 1: lRAGN(i) = 7951: sRText(i) = "TREKKING-/WALKING-STÖCKE"
i = i + 1: lRAGN(i) = 7952: sRText(i) = "SCHRITTZÄHLER, KOMPASS"
i = i + 1: lRAGN(i) = 7953: sRText(i) = "SONSTIGES"
i = i + 1: lRAGN(i) = 7960: sRText(i) = "ANGEL/REITSPORT"
i = i + 1: lRAGN(i) = 7961: sRText(i) = "ANGELRUTEN/KESCHER"
i = i + 1: lRAGN(i) = 7962: sRText(i) = "ANGELZUBEHÖR"
i = i + 1: lRAGN(i) = 7963: sRText(i) = "PFERDEPFL-/AUSSTATTUNG,ZUBEHÖR"
i = i + 1: lRAGN(i) = 7970: sRText(i) = "ROLLSPORT"
i = i + 1: lRAGN(i) = 7971: sRText(i) = "ROLLSCHUHE/INLINER"
i = i + 1: lRAGN(i) = 7972: sRText(i) = "SKATEBOARDS, KICKBOARDS"
i = i + 1: lRAGN(i) = 7973: sRText(i) = "SCHUTZAUSRÜSTUNG"
i = i + 1: lRAGN(i) = 7974: sRText(i) = "ERSATZTEILE, ZUBEHÖR"
i = i + 1: lRAGN(i) = 7975: sRText(i) = "HOCKEY, STREETHOCKEY"
i = i + 1: lRAGN(i) = 7980: sRText(i) = "WINTERSPORT"
i = i + 1: lRAGN(i) = 7981: sRText(i) = "HOLZSCHLITTEN"
i = i + 1: lRAGN(i) = 7982: sRText(i) = "KUNSTST.-/METALLSCHLITTEN"
i = i + 1: lRAGN(i) = 7983: sRText(i) = "SKI-ARTIKEL, SNOWBOARD"
i = i + 1: lRAGN(i) = 7984: sRText(i) = "SCHLITTSCHUHE, GLEITSCHUHE"
i = i + 1: lRAGN(i) = 8000: sRText(i) = "SCHMUCK,UHREN"
i = i + 1: lRAGN(i) = 8010: sRText(i) = "ECHT-SCHMUCK"
i = i + 1: lRAGN(i) = 8011: sRText(i) = "LOSE STEINE, FARBSTEINE, PERLE"
i = i + 1: lRAGN(i) = 8012: sRText(i) = "SCHMUCK M. STEINEN, PERLEN, GO"
i = i + 1: lRAGN(i) = 8013: sRText(i) = "SCHMUCK M. STEINEN,PERLEN,SILB"
i = i + 1: lRAGN(i) = 8014: sRText(i) = "SCHMUCK M. STEINEN,PERLEN,SONS"
i = i + 1: lRAGN(i) = 8015: sRText(i) = "SCHMUCK O. STEINE, PERLEN, GOL"
i = i + 1: lRAGN(i) = 8016: sRText(i) = "SCHMUCK O. STEINE,PERLEN,SILBE"
i = i + 1: lRAGN(i) = 8017: sRText(i) = "SCHMUCK O. STEINE,PERLEN,SONST"
i = i + 1: lRAGN(i) = 8020: sRText(i) = "MODESCHMUCK"
i = i + 1: lRAGN(i) = 8021: sRText(i) = "DOUBLES"
i = i + 1: lRAGN(i) = 8022: sRText(i) = "MODESCHMUCK"
i = i + 1: lRAGN(i) = 8023: sRText(i) = "STICKER"
i = i + 1: lRAGN(i) = 8030: sRText(i) = "UHREN"
i = i + 1: lRAGN(i) = 8031: sRText(i) = "HERRENARMBANDUHREN"
i = i + 1: lRAGN(i) = 8032: sRText(i) = "DAMENARMBANDUHREN"
i = i + 1: lRAGN(i) = 8033: sRText(i) = "KINDERARMBANDUHREN"
i = i + 1: lRAGN(i) = 8034: sRText(i) = "SONST.KLEINUHREN (Z.B. STOPPUH"
i = i + 1: lRAGN(i) = 8035: sRText(i) = "WECKER"
i = i + 1: lRAGN(i) = 8036: sRText(i) = "KUECHENUHREN / -WECKER"
i = i + 1: lRAGN(i) = 8037: sRText(i) = "WANDUHREN/GROSSUHREN"
i = i + 1: lRAGN(i) = 8038: sRText(i) = "TISCHUHREN"
i = i + 1: lRAGN(i) = 8039: sRText(i) = "BAROM./THERMOM./WETTERSTAT. U."
i = i + 1: lRAGN(i) = 8040: sRText(i) = "UHRENZUBEH. BAENDER,SPANGEN US"
i = i + 1: lRAGN(i) = 8041: sRText(i) = "UHRENZUBEH. BAENDER,SPANGEN US"
i = i + 1: lRAGN(i) = 8050: sRText(i) = "GEBRAUCHSARTIKEL(FEUERZEUGE,ET"
i = i + 1: lRAGN(i) = 8051: sRText(i) = "GEBRAUCHSARTIKEL(FEUERZEUGE ET"
i = i + 1: lRAGN(i) = 8100: sRText(i) = "FLIESEN/SANITÄR"
i = i + 1: lRAGN(i) = 8110: sRText(i) = "SANITÄR"
i = i + 1: lRAGN(i) = 8111: sRText(i) = "KÜCHEN-ARMATUREN"
i = i + 1: lRAGN(i) = 8112: sRText(i) = "BADEWANNEN"
i = i + 1: lRAGN(i) = 8113: sRText(i) = "SPIEGELSCHRAENKE"
i = i + 1: lRAGN(i) = 8114: sRText(i) = "SANITAER-KERAMIK"
i = i + 1: lRAGN(i) = 8115: sRText(i) = "DUSCHABTRENNUNG/WANNENAUFSATZ"
i = i + 1: lRAGN(i) = 8116: sRText(i) = "BAD-ARMATUREN"
i = i + 1: lRAGN(i) = 8117: sRText(i) = "DUSCHTASSEN"
i = i + 1: lRAGN(i) = 8118: sRText(i) = "BADMOEBEL"
i = i + 1: lRAGN(i) = 8119: sRText(i) = "WHIRLPOOLS"
i = i + 1: lRAGN(i) = 8120: sRText(i) = "BADGARN./VORHAENGE/DUSCHEINL."
i = i + 1: lRAGN(i) = 8121: sRText(i) = "BADACCESSOIRES"
i = i + 1: lRAGN(i) = 8122: sRText(i) = "TEXTIL-BADGARNITUREN"
i = i + 1: lRAGN(i) = 8123: sRText(i) = "DUSCHVORHÄNGE UND ZUBEHÖR"
i = i + 1: lRAGN(i) = 8124: sRText(i) = "AUSSTATTUNGSSER./WC GARNITU.KS"
i = i + 1: lRAGN(i) = 8125: sRText(i) = "AUSSTATTUNGSSER./WC GARNI.MET."
i = i + 1: lRAGN(i) = 8126: sRText(i) = "WC-SITZE"
i = i + 1: lRAGN(i) = 8130: sRText(i) = "HEIZUNG"
i = i + 1: lRAGN(i) = 8131: sRText(i) = "HEIZKESSEL/THERME"
i = i + 1: lRAGN(i) = 8132: sRText(i) = "HEIZKÖRPER/-ZUBEHÖR"
i = i + 1: lRAGN(i) = 8133: sRText(i) = "HEIZPUMPEN"
i = i + 1: lRAGN(i) = 8134: sRText(i) = "BRENNSTOFFBEHÄLTER/-ZUBEHÖR"
i = i + 1: lRAGN(i) = 8135: sRText(i) = "OFENZUBEHÖR"
i = i + 1: lRAGN(i) = 8136: sRText(i) = "BE-U.ENTLÜFTUNGSTECHNIK"
i = i + 1: lRAGN(i) = 8137: sRText(i) = "HEIßWASSERGERÄTE"
i = i + 1: lRAGN(i) = 8138: sRText(i) = "OEL-U. KOHLEOEFEN"
i = i + 1: lRAGN(i) = 8139: sRText(i) = "GASBETR.HEIZGERÄ.WERKSTATTÖFEN"
i = i + 1: lRAGN(i) = 8140: sRText(i) = "FLIESEN,MOSAIKE ETC."
i = i + 1: lRAGN(i) = 8141: sRText(i) = "WANDFLIESEN"
i = i + 1: lRAGN(i) = 8142: sRText(i) = "BODENFLIESEN"
i = i + 1: lRAGN(i) = 8143: sRText(i) = "MOSAIKE"
i = i + 1: lRAGN(i) = 8144: sRText(i) = "RIEMCHEN"
i = i + 1: lRAGN(i) = 8145: sRText(i) = "KLINKER/SPALTPLATTEN"
i = i + 1: lRAGN(i) = 8146: sRText(i) = "VERBLENDER"
i = i + 1: lRAGN(i) = 8150: sRText(i) = "ENTWÄSSERUNG/SANITÄRINSTALL."
i = i + 1: lRAGN(i) = 8151: sRText(i) = "ENTWÄSSERUNGSTECHNIK"
i = i + 1: lRAGN(i) = 8152: sRText(i) = "KUPFERROHRE/FITTINGS"
i = i + 1: lRAGN(i) = 8153: sRText(i) = "SANITÄR-INSTALLATION"
i = i + 1: lRAGN(i) = 8160: sRText(i) = "SOLARIEN/SAUNEN"
i = i + 1: lRAGN(i) = 8161: sRText(i) = "SOLARIEN"
i = i + 1: lRAGN(i) = 8162: sRText(i) = "SAUNEN"
i = i + 1: lRAGN(i) = 8200: sRText(i) = "FARBEN,TAPETEN,BAUSTOFFE"
i = i + 1: lRAGN(i) = 8210: sRText(i) = "FARBEN,LASUREN"
i = i + 1: lRAGN(i) = 8211: sRText(i) = "LACKE INNEN"
i = i + 1: lRAGN(i) = 8212: sRText(i) = "DISPERSIONSFARBE WEISS"
i = i + 1: lRAGN(i) = 8213: sRText(i) = "HOLZSCHUTZFARBE"
i = i + 1: lRAGN(i) = 8214: sRText(i) = "LACKE AUSSEN"
i = i + 1: lRAGN(i) = 8215: sRText(i) = "DISPERSIONSFARBE BUNT"
i = i + 1: lRAGN(i) = 8216: sRText(i) = "HOLZSCHUTZLASUR"
i = i + 1: lRAGN(i) = 8220: sRText(i) = "BAUSTOFFE"
i = i + 1: lRAGN(i) = 8221: sRText(i) = "MOERTEL-PRODUKTE"
i = i + 1: lRAGN(i) = 8222: sRText(i) = "FLIESENBAUSTOFFE"
i = i + 1: lRAGN(i) = 8223: sRText(i) = "DACHBAUSTOFFE"
i = i + 1: lRAGN(i) = 8224: sRText(i) = "TROCKEN-/INNENAUSBAU"
i = i + 1: lRAGN(i) = 8225: sRText(i) = "DAEMM-/ISOLIERSTOFFE"
i = i + 1: lRAGN(i) = 8226: sRText(i) = "MAUERWERKSTOFFE"
i = i + 1: lRAGN(i) = 8227: sRText(i) = "DICHTSTOFFE/SPEZIALKLEBER"
i = i + 1: lRAGN(i) = 8229: sRText(i) = "BAUZUBEHÖR"
i = i + 1: lRAGN(i) = 8230: sRText(i) = "KAMINE,BRENNSTOFFE"
i = i + 1: lRAGN(i) = 8231: sRText(i) = "KAMINE"
i = i + 1: lRAGN(i) = 8232: sRText(i) = "BRENNSTOFFE UND ZUBEHOER"
i = i + 1: lRAGN(i) = 8240: sRText(i) = "STREUMITTEL UND SCHNEERAEUMER"
i = i + 1: lRAGN(i) = 8242: sRText(i) = "WINTERSTREUMITTEL"
i = i + 1: lRAGN(i) = 8243: sRText(i) = "SCHNEERAEUMER"
i = i + 1: lRAGN(i) = 8250: sRText(i) = "BODENBELAEGE/TEPPICHE"
i = i + 1: lRAGN(i) = 8251: sRText(i) = "VELOURSTEPPICHBELAEGE"
i = i + 1: lRAGN(i) = 8252: sRText(i) = "SCHLINGENTEPPICHBELAEGE"
i = i + 1: lRAGN(i) = 8253: sRText(i) = "BERBERTEPPICHBELAEGE"
i = i + 1: lRAGN(i) = 8254: sRText(i) = "PVC-AUSLEGEWARE"
i = i + 1: lRAGN(i) = 8255: sRText(i) = "FERTIGTEPPICHE"
i = i + 1: lRAGN(i) = 8256: sRText(i) = "BELAGSZUBEHOER"
i = i + 1: lRAGN(i) = 8257: sRText(i) = "BRÜCKEN"
i = i + 1: lRAGN(i) = 8260: sRText(i) = "INNENDEKORATION/-ZUBEHOER"
i = i + 1: lRAGN(i) = 8261: sRText(i) = "GARDINENSCHIENEN"
i = i + 1: lRAGN(i) = 8262: sRText(i) = "STILGARNITUREN"
i = i + 1: lRAGN(i) = 8263: sRText(i) = "ROLLOS"
i = i + 1: lRAGN(i) = 8264: sRText(i) = "INSEKTENSCHUTZNETZE"
i = i + 1: lRAGN(i) = 8265: sRText(i) = "GARDINENZUBEHÖR"
i = i + 1: lRAGN(i) = 8266: sRText(i) = "STILGARNITUREN-ZUBEHÖR"
i = i + 1: lRAGN(i) = 8267: sRText(i) = "JALOUSIEN"
i = i + 1: lRAGN(i) = 8270: sRText(i) = "BRENNSTOFFE"
i = i + 1: lRAGN(i) = 8271: sRText(i) = "BRENNSTOFFE E-MWST."
i = i + 1: lRAGN(i) = 8280: sRText(i) = "TAPETEN"
i = i + 1: lRAGN(i) = 8281: sRText(i) = "TAPETEN"
i = i + 1: lRAGN(i) = 8282: sRText(i) = "RAUFASER, WEISSPRAEGE"
i = i + 1: lRAGN(i) = 8283: sRText(i) = "BILDER, DRUCKE"
i = i + 1: lRAGN(i) = 8290: sRText(i) = "FARBEN-/TAPETENZUBEHÖR"
i = i + 1: lRAGN(i) = 8291: sRText(i) = "FARBENZUBEHÖR"
i = i + 1: lRAGN(i) = 8292: sRText(i) = "TAPETENZUBEHÖR"
i = i + 1: lRAGN(i) = 8293: sRText(i) = "ABDECKPLANEN"
i = i + 1: lRAGN(i) = 8294: sRText(i) = "DECKENPLATTEN"
i = i + 1: lRAGN(i) = 8300: sRText(i) = "WERKZEUGE,MASCHINEN,EISENWAREN"
i = i + 1: lRAGN(i) = 8310: sRText(i) = "WERKZEUGE I"
i = i + 1: lRAGN(i) = 8311: sRText(i) = "HAMMER"
i = i + 1: lRAGN(i) = 8312: sRText(i) = "SCHRAUBENDREHER"
i = i + 1: lRAGN(i) = 8313: sRText(i) = "FEILEN, RASPELN"
i = i + 1: lRAGN(i) = 8314: sRText(i) = "HANDSAEGEN"
i = i + 1: lRAGN(i) = 8315: sRText(i) = "SCHRAUBENSCHL.,STECKSCHL.-SAETZE"
i = i + 1: lRAGN(i) = 8316: sRText(i) = "MESSWERKZEUGE"
i = i + 1: lRAGN(i) = 8317: sRText(i) = "SPANNWERKZEUGE"
i = i + 1: lRAGN(i) = 8318: sRText(i) = "ELEKTRONIKER WERKZEUGE"
i = i + 1: lRAGN(i) = 8319: sRText(i) = "ZANGEN"
i = i + 1: lRAGN(i) = 8320: sRText(i) = "WERKZEUGE II"
i = i + 1: lRAGN(i) = 8321: sRText(i) = "MALER-/TAPEZIER-WERKZEUGE"
i = i + 1: lRAGN(i) = 8322: sRText(i) = "MAURER-WERKZEUGE"
i = i + 1: lRAGN(i) = 8323: sRText(i) = "SCHREINER-WERKZEUGE"
i = i + 1: lRAGN(i) = 8324: sRText(i) = "FLIESENL. U.INSTALLATEURWERKZEUG"
i = i + 1: lRAGN(i) = 8325: sRText(i) = "SCHLEIFMITTEL"
i = i + 1: lRAGN(i) = 8326: sRText(i) = "BOHRER, GEWINDEBOHRER"
i = i + 1: lRAGN(i) = 8327: sRText(i) = "WERKZEUG-ZUSAMMENST. (KOFFER)"
i = i + 1: lRAGN(i) = 8328: sRText(i) = "LOETGERAETE U. ZUBEHOER"
i = i + 1: lRAGN(i) = 8329: sRText(i) = "ELEKTRIKER-WERKZEUGE"
i = i + 1: lRAGN(i) = 8330: sRText(i) = "WERKZEUGE 2"
i = i + 1: lRAGN(i) = 8331: sRText(i) = "ÄXTE,BEILE"
i = i + 1: lRAGN(i) = 8332: sRText(i) = "HEBEWERKZEUGE"
i = i + 1: lRAGN(i) = 8333: sRText(i) = "SONSTIGE HANDWERKE"
i = i + 1: lRAGN(i) = 8340: sRText(i) = "ELEKTRISCHE MASCHINEN"
i = i + 1: lRAGN(i) = 8341: sRText(i) = "AKKUMASCHINEN"
i = i + 1: lRAGN(i) = 8342: sRText(i) = "BOHRMASCHINEN"
i = i + 1: lRAGN(i) = 8343: sRText(i) = "SÄGEMASCHINEN,STICHSÄGEN"
i = i + 1: lRAGN(i) = 8344: sRText(i) = "HANDHOBELMASCHI.,BANDSCHLEIFER"
i = i + 1: lRAGN(i) = 8345: sRText(i) = "WINKELSCHLEIFER"
i = i + 1: lRAGN(i) = 8346: sRText(i) = "SCHLEIFMASCHINEN"
i = i + 1: lRAGN(i) = 8347: sRText(i) = "FARBSPRITZGERÄT"
i = i + 1: lRAGN(i) = 8348: sRText(i) = "INDUSTRIE-/NASS-/TROCKENSAUGER"
i = i + 1: lRAGN(i) = 8349: sRText(i) = "HOCHDRUCKREINIGER"
i = i + 1: lRAGN(i) = 8350: sRText(i) = "GROßMASCHINEN"
i = i + 1: lRAGN(i) = 8351: sRText(i) = "SCHWEIßGERÄTE"
i = i + 1: lRAGN(i) = 8352: sRText(i) = "KOMPRESSOREN"
i = i + 1: lRAGN(i) = 8353: sRText(i) = "STATIONÄRE MASCHINEN"
i = i + 1: lRAGN(i) = 8354: sRText(i) = "TISCH UND SÄULENBOHRMASCHINEN"
i = i + 1: lRAGN(i) = 8355: sRText(i) = "STATIONÄRE HOBELMASCHINEN"
i = i + 1: lRAGN(i) = 8356: sRText(i) = "DRECHSELMASCHINEN"
i = i + 1: lRAGN(i) = 8357: sRText(i) = "DREHMASCHINEN"
i = i + 1: lRAGN(i) = 8358: sRText(i) = "FLIESEN-UND STEINTRENNMASCH."
i = i + 1: lRAGN(i) = 8359: sRText(i) = "STROMERZEUGER"
i = i + 1: lRAGN(i) = 8360: sRText(i) = "REINIGUNGSGER., ELEKTROWERKZ."
i = i + 1: lRAGN(i) = 8361: sRText(i) = "SONSTIGE REINIGUNGSGERÄTE"
i = i + 1: lRAGN(i) = 8362: sRText(i) = "SONST.HANDGEF.ELEKTROWERKZ."
i = i + 1: lRAGN(i) = 8370: sRText(i) = "MASCHIENENZUBEHOER I"
i = i + 1: lRAGN(i) = 8371: sRText(i) = "AKU-MASCHINEN-ZUBEHOER"
i = i + 1: lRAGN(i) = 8372: sRText(i) = "BOHRMASCHINEN-ZUBEHOER"
i = i + 1: lRAGN(i) = 8373: sRText(i) = "SAEGEMASCHINEN-ZUBEHOER"
i = i + 1: lRAGN(i) = 8374: sRText(i) = "HANDHOBELMASCHIENEN-ZUBEHOER"
i = i + 1: lRAGN(i) = 8375: sRText(i) = "WINKELSCHLEIFER-ZUBEHOER"
i = i + 1: lRAGN(i) = 8376: sRText(i) = "SCHLEIFMASCH. INKL.SCHLEIFM."
i = i + 1: lRAGN(i) = 8377: sRText(i) = "IND.-NASS-/TROCKENSAUGER-ZUBE."
i = i + 1: lRAGN(i) = 8378: sRText(i) = "HOCHDRUCKREINIGER-ZUBEHÖR"
i = i + 1: lRAGN(i) = 8380: sRText(i) = "MASCHIENENZUBEHOER II"
i = i + 1: lRAGN(i) = 8381: sRText(i) = "ZUBEHOER SONST. REINIGUNGSG."
i = i + 1: lRAGN(i) = 8382: sRText(i) = "ZUBEHOER SCHWEISSGERAETE"
i = i + 1: lRAGN(i) = 8383: sRText(i) = "ZUBEHÖR KOMPRESSOREN"
i = i + 1: lRAGN(i) = 8384: sRText(i) = "ZUBEHÖR STATIONÄRER MASCHINEN"
i = i + 1: lRAGN(i) = 8385: sRText(i) = "ZUB.TISCH-U.SÄULENBOHRMASCH."
i = i + 1: lRAGN(i) = 8386: sRText(i) = "ZUBEHÖR HOBELMASCHINEN"
i = i + 1: lRAGN(i) = 8387: sRText(i) = "ZUBEHÖR DRECHSELMASCHINEN"
i = i + 1: lRAGN(i) = 8388: sRText(i) = "ZUBEHÖR DREHMASCHINEN"
i = i + 1: lRAGN(i) = 8389: sRText(i) = "ZUB.FLIESEN-U.STEINTRENNMASCH."
i = i + 1: lRAGN(i) = 8400: sRText(i) = "WERKMÖBEL,EISENW.,HAUSHALTSST."
i = i + 1: lRAGN(i) = 8410: sRText(i) = "WERKSTATTAUSRÜSTUNG 1"
i = i + 1: lRAGN(i) = 8411: sRText(i) = "WERKMÖBEL AUS STAHLBLECH"
i = i + 1: lRAGN(i) = 8412: sRText(i) = "WERKMÖBEL AUS HOLZ/KUNSTSTOFF"
i = i + 1: lRAGN(i) = 8413: sRText(i) = "MAGAZINE,SORT.-WERKZEUGK.BLECH"
i = i + 1: lRAGN(i) = 8414: sRText(i) = "MAGAZINE,SORT.-WERKZEUGK./KS"
i = i + 1: lRAGN(i) = 8416: sRText(i) = "TRANSPORTGERÄTE"
i = i + 1: lRAGN(i) = 8417: sRText(i) = "ARBEITSSCHUTZ/-HANDSCHUHE"
i = i + 1: lRAGN(i) = 8418: sRText(i) = "SCHMIERÖLE,FETTE(INKL.HH-ÖL)"
i = i + 1: lRAGN(i) = 8420: sRText(i) = "WERKSTATTAUSRÜSTUNG 2"
i = i + 1: lRAGN(i) = 8421: sRText(i) = "WERKZEUGKASTEN UNBEFÜLLT"
i = i + 1: lRAGN(i) = 8422: sRText(i) = "SONSTIGE WERKSTATTAUSSTATTUNG"
i = i + 1: lRAGN(i) = 8430: sRText(i) = "EISENWAREN"
i = i + 1: lRAGN(i) = 8431: sRText(i) = "NÄGEL"
i = i + 1: lRAGN(i) = 8432: sRText(i) = "HOLZSCHRAUBEN"
i = i + 1: lRAGN(i) = 8433: sRText(i) = "GEWINDESCHRAUBEN"
i = i + 1: lRAGN(i) = 8434: sRText(i) = "DÜBEL"
i = i + 1: lRAGN(i) = 8435: sRText(i) = "KETTEN UND ZUBEHÖR"
i = i + 1: lRAGN(i) = 8436: sRText(i) = "SEILE UND ZUBEHÖR"
i = i + 1: lRAGN(i) = 8437: sRText(i) = "SCHUHMACHERBEDARF"
i = i + 1: lRAGN(i) = 8438: sRText(i) = "LOSE WARE(NÄGEL UND SCHRAUBEN)"
i = i + 1: lRAGN(i) = 8439: sRText(i) = "SONSTIGE EISENWAREN"
i = i + 1: lRAGN(i) = 8440: sRText(i) = "BESCHLÄGE"
i = i + 1: lRAGN(i) = 8441: sRText(i) = "BESCHLÄGE"
i = i + 1: lRAGN(i) = 8442: sRText(i) = "METALLPROFILE"
i = i + 1: lRAGN(i) = 8443: sRText(i) = "MÖBELBESCHLÄGE"
i = i + 1: lRAGN(i) = 8444: sRText(i) = "TÜRBESCHLÄGE"
i = i + 1: lRAGN(i) = 8445: sRText(i) = "FENSTERBESCHLÄGE"
i = i + 1: lRAGN(i) = 8446: sRText(i) = "RÄDER UND ROLLEN"
i = i + 1: lRAGN(i) = 8447: sRText(i) = "SCHMIEDEEISEN"
i = i + 1: lRAGN(i) = 8448: sRText(i) = "SONSTIGE TECHNISCHE BESCHLÄGE"
i = i + 1: lRAGN(i) = 8449: sRText(i) = "PROFILZYLINDER"
i = i + 1: lRAGN(i) = 8450: sRText(i) = "HAUS, INNEN UND AUSSEN"
i = i + 1: lRAGN(i) = 8451: sRText(i) = "BRIEFKÄST.ZEITUNGSROLL.HAUSNUM"
i = i + 1: lRAGN(i) = 8452: sRText(i) = "MÖBELTRESORE/GELDKASSETTEN"
i = i + 1: lRAGN(i) = 8453: sRText(i) = "WANDTRESORE"
i = i + 1: lRAGN(i) = 8454: sRText(i) = "SCHILDER,BUCHSTABEN,MAGNET.ETC"
i = i + 1: lRAGN(i) = 8455: sRText(i) = "VORHÄNGESCHLÖSSER"
i = i + 1: lRAGN(i) = 8456: sRText(i) = "MECHANISCHE HAUSSICHERHEIT"
i = i + 1: lRAGN(i) = 8457: sRText(i) = "SONSTIGE HAUSAUSSTATTUNG"
i = i + 1: lRAGN(i) = 8500: sRText(i) = "HOLZ,MOEBEL UND BAUELEMENTE"
i = i + 1: lRAGN(i) = 8510: sRText(i) = "PROFILHOLZ UND WEISSHOLZ"
i = i + 1: lRAGN(i) = 8511: sRText(i) = "PROFILBRETTER ROH"
i = i + 1: lRAGN(i) = 8512: sRText(i) = "PROFILBRETTER ENDBEHANDELT"
i = i + 1: lRAGN(i) = 8513: sRText(i) = "BAUHÖLZER (NASS)"
i = i + 1: lRAGN(i) = 8514: sRText(i) = "WEIßHOLZ HOBELWARE"
i = i + 1: lRAGN(i) = 8520: sRText(i) = "HOLZ FUER WAND,DECKE,BODEN"
i = i + 1: lRAGN(i) = 8521: sRText(i) = "ECHTHOLZPANELE"
i = i + 1: lRAGN(i) = 8522: sRText(i) = "KS PANELE"
i = i + 1: lRAGN(i) = 8523: sRText(i) = "PARKETT"
i = i + 1: lRAGN(i) = 8524: sRText(i) = "MASSIVHOLZBOEDEN"
i = i + 1: lRAGN(i) = 8525: sRText(i) = "VERKLEIDUNGS- U. VERLEGEPLATTEN"
i = i + 1: lRAGN(i) = 8526: sRText(i) = "EH-KASSETTE"
i = i + 1: lRAGN(i) = 8527: sRText(i) = "KS-KASSETTE"
i = i + 1: lRAGN(i) = 8528: sRText(i) = "LAMINAT"
i = i + 1: lRAGN(i) = 8530: sRText(i) = "SONSTIGES HOLZ 1"
i = i + 1: lRAGN(i) = 8531: sRText(i) = "REGALBOEDEN, MOEBELBAUPLATTEN"
i = i + 1: lRAGN(i) = 8532: sRText(i) = "LEIMHOLZ"
i = i + 1: lRAGN(i) = 8533: sRText(i) = "LAMELLENTUEREN, MOEBELTUEREN"
i = i + 1: lRAGN(i) = 8540: sRText(i) = "SONSTIGES HOLZ 2"
i = i + 1: lRAGN(i) = 8541: sRText(i) = "ARBEITSPLATTEN"
i = i + 1: lRAGN(i) = 8542: sRText(i) = "ZUSCHNITTHOLZ (SÄGE)"
i = i + 1: lRAGN(i) = 8543: sRText(i) = "HOLZLEISTEN"
i = i + 1: lRAGN(i) = 8544: sRText(i) = "HOLZBÖCKE"
i = i + 1: lRAGN(i) = 8545: sRText(i) = "FENSTERBÄNKE"
i = i + 1: lRAGN(i) = 8550: sRText(i) = "BAUELEMENTE"
i = i + 1: lRAGN(i) = 8551: sRText(i) = "FENSTER"
i = i + 1: lRAGN(i) = 8552: sRText(i) = "HAUSTÜREN"
i = i + 1: lRAGN(i) = 8553: sRText(i) = "INNENTÜREN"
i = i + 1: lRAGN(i) = 8554: sRText(i) = "DACHFENSTER"
i = i + 1: lRAGN(i) = 8555: sRText(i) = "FH-ZK-TÜREN,STAHLZARGEN"
i = i + 1: lRAGN(i) = 8556: sRText(i) = "ZARGEN"
i = i + 1: lRAGN(i) = 8557: sRText(i) = "KELLERFENSTER,LICHSCHÄCHTE"
i = i + 1: lRAGN(i) = 8558: sRText(i) = "VORDÄCHER"
i = i + 1: lRAGN(i) = 8560: sRText(i) = "GAR./TREP/SONNENSCHU/LEITE/GER"
i = i + 1: lRAGN(i) = 8561: sRText(i) = "GARAGENTORE,-TUEREN"
i = i + 1: lRAGN(i) = 8562: sRText(i) = "FERTIGGARAGEN"
i = i + 1: lRAGN(i) = 8563: sRText(i) = "BODENTREPPEN"
i = i + 1: lRAGN(i) = 8564: sRText(i) = "SONNENSCHUTZ AUSSEN"
i = i + 1: lRAGN(i) = 8565: sRText(i) = "WENDELTREPPEN"
i = i + 1: lRAGN(i) = 8567: sRText(i) = "SPROSSENLEITERN"
i = i + 1: lRAGN(i) = 8568: sRText(i) = "GERÜSTE"
i = i + 1: lRAGN(i) = 8570: sRText(i) = "KÜCHEN"
i = i + 1: lRAGN(i) = 8571: sRText(i) = "KÜCHENZEILEN/MINIKÜCHEN"
i = i + 1: lRAGN(i) = 8572: sRText(i) = "KÜCHEN-MITNAHMEPROGRAMM"
i = i + 1: lRAGN(i) = 8580: sRText(i) = "MÖBEL"
i = i + 1: lRAGN(i) = 8581: sRText(i) = "KLEINMÖBEL"
i = i + 1: lRAGN(i) = 8582: sRText(i) = "SOFAS, GÄSTEBETTEN"
i = i + 1: lRAGN(i) = 8583: sRText(i) = "FERTIGREGALE, KOMMODEN"
i = i + 1: lRAGN(i) = 8584: sRText(i) = "SCHRÄNKE"
i = i + 1: lRAGN(i) = 8585: sRText(i) = "TISCHE UND GRUPPEN"
i = i + 1: lRAGN(i) = 8586: sRText(i) = "HOCKER, STÜHLE"
i = i + 1: lRAGN(i) = 8587: sRText(i) = "GARDEROBEN, WOHNRAUMSPIEGEL"
i = i + 1: lRAGN(i) = 8588: sRText(i) = "HIFI-/VIDEO-MÖBEL"
i = i + 1: lRAGN(i) = 8590: sRText(i) = "REGALE,-SYSTEME"
i = i + 1: lRAGN(i) = 8591: sRText(i) = "REGALWÄNDE,-SYSTEME,-KONSOLEN"
i = i + 1: lRAGN(i) = 8592: sRText(i) = "REGALSYSTEME METALL"
i = i + 1: lRAGN(i) = 8593: sRText(i) = "KELLERREGALE"
i = i + 1: lRAGN(i) = 8594: sRText(i) = "HOLZ-REGALSYSTEME"
i = i + 1: lRAGN(i) = 8600: sRText(i) = "BATTERIEN,GLUEH U.TASCHENLAMPE"
i = i + 1: lRAGN(i) = 8610: sRText(i) = "GLUEHLAMPEN/LEUCHTROEHREN"
i = i + 1: lRAGN(i) = 8611: sRText(i) = "GLUEHLAMPEN (STANDARD)"
i = i + 1: lRAGN(i) = 8612: sRText(i) = "GLUEHLAMPEN (KERZE)"
i = i + 1: lRAGN(i) = 8613: sRText(i) = "REFLEKTORLAMPEN/STRAHLER"
i = i + 1: lRAGN(i) = 8614: sRText(i) = "LEUCHTSTOFFROEHREN"
i = i + 1: lRAGN(i) = 8615: sRText(i) = "HALLOGENLAMPEN"
i = i + 1: lRAGN(i) = 8616: sRText(i) = "ENERGIESPARLAMPEN"
i = i + 1: lRAGN(i) = 8620: sRText(i) = "BATTERIEN,ZELLEN"
i = i + 1: lRAGN(i) = 8621: sRText(i) = "BATTERIEN"
i = i + 1: lRAGN(i) = 8622: sRText(i) = "ZELLEN"
i = i + 1: lRAGN(i) = 8623: sRText(i) = "AKKUS"
i = i + 1: lRAGN(i) = 8630: sRText(i) = "TASCHENLAMP/LADEGERAET/NETZTEI"
i = i + 1: lRAGN(i) = 8631: sRText(i) = "TASCHENLAMPEN"
i = i + 1: lRAGN(i) = 8632: sRText(i) = "LADEGERAETE/NETZTEILE"
i = i + 1: lRAGN(i) = 8640: sRText(i) = "LEUCHTEN"
i = i + 1: lRAGN(i) = 8641: sRText(i) = "PENDELLEUCHTEN"
i = i + 1: lRAGN(i) = 8642: sRText(i) = "WAND- UND DECKENLEUCHTEN"
i = i + 1: lRAGN(i) = 8643: sRText(i) = "AUSSENLEUCHTEN"
i = i + 1: lRAGN(i) = 8644: sRText(i) = "EINBAULEUCHTEN"
i = i + 1: lRAGN(i) = 8645: sRText(i) = "TISCHLEUCHTEN"
i = i + 1: lRAGN(i) = 8646: sRText(i) = "SPOTS"
i = i + 1: lRAGN(i) = 8647: sRText(i) = "STEHLEUCHTEN"
i = i + 1: lRAGN(i) = 8648: sRText(i) = "SEILSYSTEME/SCHIENENSYSTEME"
i = i + 1: lRAGN(i) = 8649: sRText(i) = "WOHNRAUM-SCHALTERSERIEN"
i = i + 1: lRAGN(i) = 8650: sRText(i) = "ELEKTROINSTALLATIONEN"
i = i + 1: lRAGN(i) = 8651: sRText(i) = "STECKER,SCHALTER,DOSEN,SONST."
i = i + 1: lRAGN(i) = 8652: sRText(i) = "KABEL UND LEITUNGEN"
i = i + 1: lRAGN(i) = 8653: sRText(i) = "KABELTROMMELN/-BOXEN"
i = i + 1: lRAGN(i) = 8654: sRText(i) = "ELEK.HAUSSICHERHEIT/SPRECHANL."
i = i + 1: lRAGN(i) = 8655: sRText(i) = "ELEKTRO-UNTERPUTZINSTALLATION."
i = i + 1: lRAGN(i) = 8656: sRText(i) = "MEHRFACHDOSEN/VERLÄNGERUNGEN"
i = i + 1: lRAGN(i) = 8660: sRText(i) = "SAMMELGRUPPE ELEKTRO"
i = i + 1: lRAGN(i) = 8661: sRText(i) = "SAMMELGRUPPE ELEKTRO"
i = i + 1: lRAGN(i) = 8690: sRText(i) = "FIXTASTE ELEKTRO"
i = i + 1: lRAGN(i) = 8700: sRText(i) = "TON- UND BILDTRAEGER"
i = i + 1: lRAGN(i) = 8710: sRText(i) = "TON- UND BILDTRAEGER BESPIELT"
i = i + 1: lRAGN(i) = 8711: sRText(i) = "BESPIELTE SPEICHERKARTEN"
i = i + 1: lRAGN(i) = 8712: sRText(i) = "CD"
i = i + 1: lRAGN(i) = 8713: sRText(i) = "MC"
i = i + 1: lRAGN(i) = 8714: sRText(i) = "SINGLE/MAXI"
i = i + 1: lRAGN(i) = 8715: sRText(i) = "VIDEO(MUSIK) -FILME/ -CLIPS"
i = i + 1: lRAGN(i) = 8716: sRText(i) = "FOTO ZUBEHÖR"
i = i + 1: lRAGN(i) = 8717: sRText(i) = "CD/DVD ROHLINGE UNBESPIELT"
i = i + 1: lRAGN(i) = 8718: sRText(i) = "DVD"
i = i + 1: lRAGN(i) = 8719: sRText(i) = "DVD FSK 18"
i = i + 1: lRAGN(i) = 8720: sRText(i) = "TON- UND BILDTRAEGER UNBESPIEL"
i = i + 1: lRAGN(i) = 8721: sRText(i) = "AUDIO/VIDEO UNBESPIELT"
i = i + 1: lRAGN(i) = 8730: sRText(i) = "TONTRAEGER-ZUBEHOER"
i = i + 1: lRAGN(i) = 8731: sRText(i) = "ARCHIVIERUNG / AUFBEWAHRUNG"
i = i + 1: lRAGN(i) = 8740: sRText(i) = "AMS (BAD HOMBURG)"
i = i + 1: lRAGN(i) = 8800: sRText(i) = "TV,VIDEO,PLATTENSPIELER,HIFI,E"
i = i + 1: lRAGN(i) = 8810: sRText(i) = "TV-GERAETE"
i = i + 1: lRAGN(i) = 8812: sRText(i) = "TV"
i = i + 1: lRAGN(i) = 8820: sRText(i) = "VIDEORECORDER,-KAMERAS +ZUBEHO"
i = i + 1: lRAGN(i) = 8821: sRText(i) = "VIDEORECORDER/- U. ZUBEHOER"
i = i + 1: lRAGN(i) = 8822: sRText(i) = "SAT"
i = i + 1: lRAGN(i) = 8830: sRText(i) = "HIFI-BAUSTEINE RUNDFUNK-STEUER"
i = i + 1: lRAGN(i) = 8831: sRText(i) = "HIFI-BAUSTEINE"
i = i + 1: lRAGN(i) = 8832: sRText(i) = "HIFI-ZUBEHOER"
i = i + 1: lRAGN(i) = 8840: sRText(i) = "TONBAND U. SCHALLPLATTENGER.,E"
i = i + 1: lRAGN(i) = 8842: sRText(i) = "CD SPIELER"
i = i + 1: lRAGN(i) = 8844: sRText(i) = "CASSETTENREKORDER"
i = i + 1: lRAGN(i) = 8845: sRText(i) = "DVD-PLAYER"
i = i + 1: lRAGN(i) = 8846: sRText(i) = "DVD-, FESTPLATTENREKORDER"
i = i + 1: lRAGN(i) = 8847: sRText(i) = "MP3-PLAYER"
i = i + 1: lRAGN(i) = 8848: sRText(i) = "USB-STICKS"
i = i + 1: lRAGN(i) = 8849: sRText(i) = "SONSTIGES ZUBEHÖR"
i = i + 1: lRAGN(i) = 8850: sRText(i) = "KEYBOARD/MUSIKINSTR.BIS 12/06"
i = i + 1: lRAGN(i) = 8860: sRText(i) = "SONSTIGES TV-,VIDEO-ETC.ZUB."
i = i + 1: lRAGN(i) = 8861: sRText(i) = "ANTENNEN"
i = i + 1: lRAGN(i) = 8862: sRText(i) = "AUTO/VIDEO ZUBEHÖR"
i = i + 1: lRAGN(i) = 8870: sRText(i) = "DVD PORTABLE/PLAYER/REKORDER"
i = i + 1: lRAGN(i) = 8900: sRText(i) = "HENKELGERAETE/AUTORADIO"
i = i + 1: lRAGN(i) = 8910: sRText(i) = "RADIO/WECKER"
i = i + 1: lRAGN(i) = 8911: sRText(i) = "RADIO/WECKER/WALKER"
i = i + 1: lRAGN(i) = 8920: sRText(i) = "FUNKGERAETE/ZUBEHOER"
i = i + 1: lRAGN(i) = 8921: sRText(i) = "SAT ZUBEHÖR"
i = i + 1: lRAGN(i) = 8930: sRText(i) = "WALKER BIS 12/06"
i = i + 1: lRAGN(i) = 8940: sRText(i) = "AUTORADIO/-CASS.SPIELER/-CD/ZU"
i = i + 1: lRAGN(i) = 8941: sRText(i) = "AUTORADIO U. ZUBEHÖR"
i = i + 1: lRAGN(i) = 8950: sRText(i) = "AUTO (RADIO) -LAUTSPR.BIS 12/06"
i = i + 1: lRAGN(i) = 8960: sRText(i) = "AUTOANTENNEN/-KOMMUNIKATION"
i = i + 1: lRAGN(i) = 8961: sRText(i) = "DRUCKERTINTE"
i = i + 1: lRAGN(i) = 9000: sRText(i) = "COMPUTER UND BUERO"
i = i + 1: lRAGN(i) = 9010: sRText(i) = "HARDWARE"
i = i + 1: lRAGN(i) = 9011: sRText(i) = "ANWENDER-HARDWARE"
i = i + 1: lRAGN(i) = 9012: sRText(i) = "MONITORE"
i = i + 1: lRAGN(i) = 9013: sRText(i) = "KONSOLEN (PSX,N64 ETC.)"
i = i + 1: lRAGN(i) = 9020: sRText(i) = "DATENTRAEGER UND ZUBEHOER"
i = i + 1: lRAGN(i) = 9021: sRText(i) = "PC ZUBEHÖR"
i = i + 1: lRAGN(i) = 9030: sRText(i) = "SOFTWARE"
i = i + 1: lRAGN(i) = 9031: sRText(i) = "ANWENDERSOFTWARE"
i = i + 1: lRAGN(i) = 9032: sRText(i) = "FREIZEIT-SOFTWARE/PC"
i = i + 1: lRAGN(i) = 9033: sRText(i) = "KONSOLEN SPIELE"
i = i + 1: lRAGN(i) = 9034: sRText(i) = "CD ROM USK 18"
i = i + 1: lRAGN(i) = 9035: sRText(i) = "KONSOLEN SPIELE USK 18"
i = i + 1: lRAGN(i) = 9040: sRText(i) = "BUERO"
i = i + 1: lRAGN(i) = 9041: sRText(i) = "PC-PERIPHERIE"
i = i + 1: lRAGN(i) = 9042: sRText(i) = "DIKTIER/KOPIER/SCHREIB/ZUBEHO."
i = i + 1: lRAGN(i) = 9043: sRText(i) = "ELEKTRE.DATEN/TERMIN./TASCHER."
i = i + 1: lRAGN(i) = 9050: sRText(i) = "KOMMUNIKATION"
i = i + 1: lRAGN(i) = 9051: sRText(i) = "TELEFONIE FESTNETZ"
i = i + 1: lRAGN(i) = 9052: sRText(i) = "MOBILFUNK"
i = i + 1: lRAGN(i) = 9053: sRText(i) = "TELEFON ZUBEHÖR"
i = i + 1: lRAGN(i) = 9060: sRText(i) = "DIENSTLEISTUNGEN,REPARAT.,INZA"
i = i + 1: lRAGN(i) = 9061: sRText(i) = "DIENSTLEISTUNGEN,REPERAT.INZAH"
i = i + 1: lRAGN(i) = 9100: sRText(i) = "KOSTENVERBUCHUNG PARTNER"
i = i + 1: lRAGN(i) = 9110: sRText(i) = "KOSTENVERBUCHUNG PARTNER - 1"
i = i + 1: lRAGN(i) = 9120: sRText(i) = "KOSTENVERBUCHUNG PARTNER - 2"
i = i + 1: lRAGN(i) = 9130: sRText(i) = "KOSTENVERBUCHUNG PARTNER - 3"
i = i + 1: lRAGN(i) = 9140: sRText(i) = "KOSTENVERBUCHUNG PARTNER - 4"
i = i + 1: lRAGN(i) = 9141: sRText(i) = "WERBEKOSTEN - BELASTUNG"
i = i + 1: lRAGN(i) = 9142: sRText(i) = "SONDERAKTION - VERRECHNUNG"
i = i + 1: lRAGN(i) = 9143: sRText(i) = "LADENFUNK - GEBÜHREN"
i = i + 1: lRAGN(i) = 9144: sRText(i) = "GEMA - GEBÜHREN"
i = i + 1: lRAGN(i) = 9145: sRText(i) = "PLAKATE GROSSFLÄCHEN WERBUNG"
i = i + 1: lRAGN(i) = 9146: sRText(i) = "AKTIONSANZEIGEN"
i = i + 1: lRAGN(i) = 9147: sRText(i) = "SONDERWERBUNG - KOSTEN"
i = i + 1: lRAGN(i) = 9148: sRText(i) = "MDE MIETE"
i = i + 1: lRAGN(i) = 9149: sRText(i) = "KOSTEN FÜR E-LOEADING"
i = i + 1: lRAGN(i) = 9150: sRText(i) = "KOSTENVERBUCHUNG PARTNER - 5"
i = i + 1: lRAGN(i) = 9151: sRText(i) = "LADENFUNK INSTANDHALTUNG"
i = i + 1: lRAGN(i) = 9152: sRText(i) = "MDE WARTUNG"
i = i + 1: lRAGN(i) = 9153: sRText(i) = "REWE GUTSCHEINE"
i = i + 1: lRAGN(i) = 9154: sRText(i) = "MITARBEITERKARTE"
i = i + 1: lRAGN(i) = 9156: sRText(i) = "AUTO-LEASING"
i = i + 1: lRAGN(i) = 9211: sRText(i) = "SEEFRACHT"
i = i + 1: lRAGN(i) = 9212: sRText(i) = "FRACHT ZUM LAGER"
i = i + 1: lRAGN(i) = 9213: sRText(i) = "FRACHT VOM LAGER"
i = i + 1: lRAGN(i) = 9214: sRText(i) = "UMSCHLAG"
i = i + 1: lRAGN(i) = 9215: sRText(i) = "LAGERGELD"
i = i + 1: lRAGN(i) = 9216: sRText(i) = "ZOLL"
i = i + 1: lRAGN(i) = 9217: sRText(i) = "ZOLLABFERTIGUNG"
i = i + 1: lRAGN(i) = 9218: sRText(i) = "IMPORTPROVISION"
i = i + 1: lRAGN(i) = 9219: sRText(i) = "GEWÄHRLEISTUNGSRÜCKSTELLUNG"
i = i + 1: lRAGN(i) = 9221: sRText(i) = "RÜCKSTELLUNGEN ZUM UMSATZ"
i = i + 1: lRAGN(i) = 9222: sRText(i) = "WARENKONTROLLE"
i = i + 1: lRAGN(i) = 9223: sRText(i) = "AUFBEREITUNG TEXTILWAREN"
i = i + 1: lRAGN(i) = 9224: sRText(i) = "QUALITÄTSSICHERUNG"
i = i + 1: lRAGN(i) = 9225: sRText(i) = "GP-RÜCKSTELLUNGEN"
i = i + 1: lRAGN(i) = 9226: sRText(i) = "FRACHT NEBENKOSTEN"
i = i + 1: lRAGN(i) = 9227: sRText(i) = "SONSTIGE KOSTENBUCHUNG"
i = i + 1: lRAGN(i) = 9228: sRText(i) = "STEUERN"
i = i + 1: lRAGN(i) = 9250: sRText(i) = "SONSTIGE KOSTEN"
i = i + 1: lRAGN(i) = 9251: sRText(i) = "BEWACHUNG"
i = i + 1: lRAGN(i) = 9252: sRText(i) = "BERATUNG"
i = i + 1: lRAGN(i) = 9253: sRText(i) = "REINIGUNG"
i = i + 1: lRAGN(i) = 9254: sRText(i) = "GEBÜHREN"
i = i + 1: lRAGN(i) = 9255: sRText(i) = "WARTUNG"
i = i + 1: lRAGN(i) = 9256: sRText(i) = "LEASING"
i = i + 1: lRAGN(i) = 9257: sRText(i) = "SONSTIGE KOSTEN"
i = i + 1: lRAGN(i) = 9258: sRText(i) = "NICHT KALKUL.SONDERVERGÜTUNGEN"
i = i + 1: lRAGN(i) = 9300: sRText(i) = "FOTO/OPTIK"
i = i + 1: lRAGN(i) = 9310: sRText(i) = "FOTOARBEIT"
i = i + 1: lRAGN(i) = 9311: sRText(i) = "FOTOARBEIT"
i = i + 1: lRAGN(i) = 9312: sRText(i) = "FOTOBUCH E-MWST"
i = i + 1: lRAGN(i) = 9320: sRText(i) = "KAMERA"
i = i + 1: lRAGN(i) = 9321: sRText(i) = "EINWEGKAMERA"
i = i + 1: lRAGN(i) = 9322: sRText(i) = "KAMERA"
i = i + 1: lRAGN(i) = 9323: sRText(i) = "CAMCORDER"
i = i + 1: lRAGN(i) = 9324: sRText(i) = "SPIEGELREFLEXKAMERA"
i = i + 1: lRAGN(i) = 9326: sRText(i) = "SONSTIGE FOTOARTIKEL"
i = i + 1: lRAGN(i) = 9330: sRText(i) = "OBJEKTIV/FILTER/BLITZ BIS 12/06"
i = i + 1: lRAGN(i) = 9340: sRText(i) = "FOTO-ZUBEHOER,SONSTIGES MATERI"
i = i + 1: lRAGN(i) = 9344: sRText(i) = "DIAPROJEKTOR BIS 12/06"
i = i + 1: lRAGN(i) = 9348: sRText(i) = "CARD READER / WRITER"
i = i + 1: lRAGN(i) = 9349: sRText(i) = "SPEICHERKARTEN"
i = i + 1: lRAGN(i) = 9350: sRText(i) = "FERNGLAS"
i = i + 1: lRAGN(i) = 9351: sRText(i) = "FERNGLAS, TELESKOP,MIKROSKOP"
i = i + 1: lRAGN(i) = 9360: sRText(i) = "FOTOLABOR BIS 12/06"
i = i + 1: lRAGN(i) = 9380: sRText(i) = "FILM"
i = i + 1: lRAGN(i) = 9383: sRText(i) = "ENTWICKLUNGSFILM"
i = i + 1: lRAGN(i) = 9390: sRText(i) = "BRILLE"
i = i + 1: lRAGN(i) = 9391: sRText(i) = "LESEHILFE"
i = i + 1: lRAGN(i) = 9392: sRText(i) = "SONNENBRILLEN"
i = i + 1: lRAGN(i) = 9400: sRText(i) = "ELEKTRO-GROSS UND KLEINGERAETE"
i = i + 1: lRAGN(i) = 9410: sRText(i) = "ELEKTRO GROSSGERÄTE"
i = i + 1: lRAGN(i) = 9411: sRText(i) = "WASCHVOLLAUTOMATEN"
i = i + 1: lRAGN(i) = 9412: sRText(i) = "TROCKNEN ABLUFT/KONDENS"
i = i + 1: lRAGN(i) = 9413: sRText(i) = "KÜHL-/GEFRIERGERÄTE"
i = i + 1: lRAGN(i) = 9414: sRText(i) = "STANDHERDE GAS/ELEKTRO"
i = i + 1: lRAGN(i) = 9415: sRText(i) = "GESCHIRRSPÜLER"
i = i + 1: lRAGN(i) = 9420: sRText(i) = "EINBAUHERD-SET/-KÜHLEN,DUNSTABZ."
i = i + 1: lRAGN(i) = 9421: sRText(i) = "EINBAUHERD-SET/-KÜHLEN,DUNSTABZ."
i = i + 1: lRAGN(i) = 9430: sRText(i) = "ELEKTRISCHE KÜCHENGERÄTE"
i = i + 1: lRAGN(i) = 9431: sRText(i) = "KAFFEEAUTOMATEN GLAS/THERMO"
i = i + 1: lRAGN(i) = 9432: sRText(i) = "PADMASCHINEN"
i = i + 1: lRAGN(i) = 9433: sRText(i) = "ESPRESSO SIEBTRÄGER/VOLLAUTOMAT"
i = i + 1: lRAGN(i) = 9434: sRText(i) = "SANDWICH-/TOASTER/WAFFELEISEN"
i = i + 1: lRAGN(i) = 9435: sRText(i) = "WASSERKOCHER"
i = i + 1: lRAGN(i) = 9436: sRText(i) = "FRITTEUSEN"
i = i + 1: lRAGN(i) = 9437: sRText(i) = "KÜCHENMASCHINEN"
i = i + 1: lRAGN(i) = 9438: sRText(i) = "ALLESSCHNEIDER / EIERKOCHER"
i = i + 1: lRAGN(i) = 9439: sRText(i) = "HAND-/STAB-/STANDMIXER"
i = i + 1: lRAGN(i) = 9440: sRText(i) = "SONST.ELEKTRO GROSS/KLEINGERÄTE"
i = i + 1: lRAGN(i) = 9441: sRText(i) = "KÜCHENHELFER"
i = i + 1: lRAGN(i) = 9442: sRText(i) = "KONTAKT-/GRILL/RACLETTE/WOK ETC."
i = i + 1: lRAGN(i) = 9443: sRText(i) = "BÜGELEISEN / STATIONEN"
i = i + 1: lRAGN(i) = 9450: sRText(i) = "MIKROWELLE/MINIBACKÖFEN"
i = i + 1: lRAGN(i) = 9451: sRText(i) = "MIKROWELLE SOLO/GRILL/KOMBI"
i = i + 1: lRAGN(i) = 9452: sRText(i) = "MINIBACKÖFEN/KOCHPLATTEN"
i = i + 1: lRAGN(i) = 9460: sRText(i) = "REINIGUNGS- UND PFLEGEGERAETE"
i = i + 1: lRAGN(i) = 9461: sRText(i) = "AKKUSAUGER/HANDSTAUBSAUGER"
i = i + 1: lRAGN(i) = 9462: sRText(i) = "BODENSTAUBSAUGER"
i = i + 1: lRAGN(i) = 9463: sRText(i) = "BODENSTAUBSAUGER BEUTELLOS"
i = i + 1: lRAGN(i) = 9470: sRText(i) = "RAUMHEIZ- U. KLIMAGERÄTE"
i = i + 1: lRAGN(i) = 9471: sRText(i) = "HEIZGERÄTE"
i = i + 1: lRAGN(i) = 9472: sRText(i) = "VENTILATOREN/KLIMAGERÄTE"
i = i + 1: lRAGN(i) = 9480: sRText(i) = "ELEKTRO ZUBEHÖR"
i = i + 1: lRAGN(i) = 9481: sRText(i) = "ERSATZBÜRSTEN/SCHERBLÄTTER ZUBEH"
i = i + 1: lRAGN(i) = 9490: sRText(i) = "ELEKTRISCHE KÖRPERPFLEGEGERÄTE"
i = i + 1: lRAGN(i) = 9491: sRText(i) = "HERRENRASIERER,BART-/HAARSCHNEID"
i = i + 1: lRAGN(i) = 9492: sRText(i) = "DAMENRASIERER/EPILIERER"
i = i + 1: lRAGN(i) = 9493: sRText(i) = "HAARTROCKNER"
i = i + 1: lRAGN(i) = 9494: sRText(i) = "CURLER/CRIMPER/GLÄTTER"
i = i + 1: lRAGN(i) = 9495: sRText(i) = "GESUNDHEIT/WELLNESS/ZAHNPFLEGE"
i = i + 1: lRAGN(i) = 9500: sRText(i) = "DIVERSE NON-FOOD"
i = i + 1: lRAGN(i) = 9510: sRText(i) = "NON-FOOD OTTO"
i = i + 1: lRAGN(i) = 9511: sRText(i) = "SAMMELGRUPPE NONFOOD"
i = i + 1: lRAGN(i) = 9520: sRText(i) = "NON-FOOD REEMTSMA"
i = i + 1: lRAGN(i) = 9521: sRText(i) = "NON-FOOD REEMTSMA"
i = i + 1: lRAGN(i) = 9530: sRText(i) = "NON-FOOD TCHIBO"
i = i + 1: lRAGN(i) = 9531: sRText(i) = "NON-FOOD TCHIBO"
i = i + 1: lRAGN(i) = 9532: sRText(i) = "NON-FOOD TCHIBO E-MWST"
i = i + 1: lRAGN(i) = 9540: sRText(i) = "NON-FOOD EDUSCHO"
i = i + 1: lRAGN(i) = 9541: sRText(i) = "NON-FOOD EDUSCHO"
i = i + 1: lRAGN(i) = 9550: sRText(i) = "SAMMELGRUPPE NONFOOD"
i = i + 1: lRAGN(i) = 9560: sRText(i) = "BONUS-/COUPONARTIKEL V.MWST"
i = i + 1: lRAGN(i) = 9561: sRText(i) = "BONUSARTIKEL V.MWST"
i = i + 1: lRAGN(i) = 9562: sRText(i) = "COUPONARTIKEL V.MWST"
i = i + 1: lRAGN(i) = 9570: sRText(i) = "BONUS-/COUPONARTIKEL E.MWST"
i = i + 1: lRAGN(i) = 9571: sRText(i) = "BONUSARTIKEL E.MWST."
i = i + 1: lRAGN(i) = 9572: sRText(i) = "COUPONARTIKEL E.MWST"
i = i + 1: lRAGN(i) = 9580: sRText(i) = "SAISONARTIKEL NON-FOOD"
i = i + 1: lRAGN(i) = 9581: sRText(i) = "NON-FOOD OSTERARTIKEL"
i = i + 1: lRAGN(i) = 9582: sRText(i) = "NON-FOOD ADVENTS-/WEIHN.ARTIK."
i = i + 1: lRAGN(i) = 9583: sRText(i) = "NON-FOOD FEUERWERKSARTIKEL"
i = i + 1: lRAGN(i) = 9584: sRText(i) = "NON-FOOD SCHERZ-/FASCHINGSART."
i = i + 1: lRAGN(i) = 9585: sRText(i) = "NON-FOOD PARTYARTIKEL"
i = i + 1: lRAGN(i) = 9586: sRText(i) = "NON FOOD EXPORT V.MWST."
i = i + 1: lRAGN(i) = 9587: sRText(i) = "NON FOOD EXPORT E.MWST"
i = i + 1: lRAGN(i) = 9588: sRText(i) = "NON-FOOD SONST.SAISONARTIKEL"
i = i + 1: lRAGN(i) = 9590: sRText(i) = "FIXTASTE NONFOOD"
i = i + 1: lRAGN(i) = 9600: sRText(i) = "PFAND/LEERGUT"
i = i + 1: lRAGN(i) = 9610: sRText(i) = "PFAND E-MWST."
i = i + 1: lRAGN(i) = 9611: sRText(i) = "PFAND GETRÄNKE E-MWST"
i = i + 1: lRAGN(i) = 9612: sRText(i) = "PFAND OBST UND GEMÜSE E-MWST"
i = i + 1: lRAGN(i) = 9613: sRText(i) = "PFAND HARTWAREN E-MWST"
i = i + 1: lRAGN(i) = 9614: sRText(i) = "PFAND HEISSE THEKE E-MWST"
i = i + 1: lRAGN(i) = 9615: sRText(i) = "PFAND AUTOZUBEHÖR E-MWST"
i = i + 1: lRAGN(i) = 9616: sRText(i) = "PFAND EINWEG 0,25 EURO E.MWST"
i = i + 1: lRAGN(i) = 9617: sRText(i) = "PFAND EINWEG 0,50 EURO E.MWST"
i = i + 1: lRAGN(i) = 9620: sRText(i) = "PFAND V-MWST."
i = i + 1: lRAGN(i) = 9621: sRText(i) = "PFAND GETRÄNKE V-MWST"
i = i + 1: lRAGN(i) = 9622: sRText(i) = "PFAND OBST UND GEMÜSE V-MWST"
i = i + 1: lRAGN(i) = 9623: sRText(i) = "PFAND HARTWAREN V-MWST"
i = i + 1: lRAGN(i) = 9624: sRText(i) = "PFAND HEISSE THEKE V-MWST"
i = i + 1: lRAGN(i) = 9625: sRText(i) = "PFAND AUTOZUBEHÖR V-MWST"
i = i + 1: lRAGN(i) = 9626: sRText(i) = "PFAND EINWEG 0,25 EURO"
i = i + 1: lRAGN(i) = 9627: sRText(i) = "PFAND EINWEG 0,50 EURO"
i = i + 1: lRAGN(i) = 9628: sRText(i) = "EINWEG PFAND PET NEU"
i = i + 1: lRAGN(i) = 9629: sRText(i) = "EINWEG LEERGUT PET NEU"
i = i + 1: lRAGN(i) = 9630: sRText(i) = "LEERGUT E-MWST."
i = i + 1: lRAGN(i) = 9631: sRText(i) = "LEERGUT E-MWST"
i = i + 1: lRAGN(i) = 9640: sRText(i) = "LEERGUT V-MWST."
i = i + 1: lRAGN(i) = 9641: sRText(i) = "LEERGUT  V.MWST"
i = i + 1: lRAGN(i) = 9642: sRText(i) = "LEERGUT-EINWEG VMWST"
i = i + 1: lRAGN(i) = 9650: sRText(i) = "MÜNZGELD"
i = i + 1: lRAGN(i) = 9651: sRText(i) = "MÜNZGELD"
i = i + 1: lRAGN(i) = 9700: sRText(i) = "SONSTIGE BUCHUNGEN/DIENSTLEIST"
i = i + 1: lRAGN(i) = 9710: sRText(i) = "SONSTIGE MANUELLE BUCHUNGEN E-"
i = i + 1: lRAGN(i) = 9711: sRText(i) = "SONST. MANUELLE BUCHUNGEN E-MW"
i = i + 1: lRAGN(i) = 9712: sRText(i) = "FISCH/FEINK.GESCHÄFTSBES.EMWST"
i = i + 1: lRAGN(i) = 9713: sRText(i) = "WURST+SCHINKEN GESCHÄFTSBES.E"
i = i + 1: lRAGN(i) = 9714: sRText(i) = "BACKWAREN BED.GESCHÄFTSBES. E"
i = i + 1: lRAGN(i) = 9715: sRText(i) = "BACKWAREN SB GESCHÄFTSBES. E"
i = i + 1: lRAGN(i) = 9716: sRText(i) = "CAFETERIA GESCHÄFTSBES. E-MWST"
i = i + 1: lRAGN(i) = 9718: sRText(i) = "OBST+GEMÜSE GESCHÄFTSBES.EMWST"
i = i + 1: lRAGN(i) = 9720: sRText(i) = "SONSTIGE MANUELLE BUCHUNGEN V-"
i = i + 1: lRAGN(i) = 9721: sRText(i) = "SONST. MANUELLE BUCHUNGEN V-MW"
i = i + 1: lRAGN(i) = 9722: sRText(i) = "NICHT KALKUL.SONDERVERÜTUNGEN"
i = i + 1: lRAGN(i) = 9723: sRText(i) = "CAFETERIA GESCHÄFTSBES. V-MWST"
i = i + 1: lRAGN(i) = 9724: sRText(i) = "NON FOOD GESCHÄFTSBES.V-MWST"
i = i + 1: lRAGN(i) = 9725: sRText(i) = "BÄCKEREI GESCHÄFTSBES.V-MWST"
i = i + 1: lRAGN(i) = 9726: sRText(i) = "TEXTIL GESCHÄFTSBES. V-MWST"
i = i + 1: lRAGN(i) = 9730: sRText(i) = "SONST. MAN.BUCHUNGEN KOND.V-MW"
i = i + 1: lRAGN(i) = 9731: sRText(i) = "SONST.MAN.BUCHUNGEN KOND. V-MW"
i = i + 1: lRAGN(i) = 9740: sRText(i) = "DIENSTLEISTUNGEN"
i = i + 1: lRAGN(i) = 9741: sRText(i) = "DIENSTLEIST. UND SERVICE LOKAL"
i = i + 1: lRAGN(i) = 9742: sRText(i) = "DIENSTLEIST. UND SERVICE ZENTR"
i = i + 1: lRAGN(i) = 9743: sRText(i) = "SONSTIGE DIENSTLEISTUNGEN"
i = i + 1: lRAGN(i) = 9744: sRText(i) = "AKTIONSPLANHINTERLEGUNG"
i = i + 1: lRAGN(i) = 9745: sRText(i) = "SONSTIGE PROVISIONEN"
i = i + 1: lRAGN(i) = 9746: sRText(i) = "PREMIERE PREPAID AUFLADUNGEN"
i = i + 1: lRAGN(i) = 9747: sRText(i) = "JA| MOBIL"
i = i + 1: lRAGN(i) = 9748: sRText(i) = "PENNYMOBIL"
i = i + 1: lRAGN(i) = 9749: sRText(i) = "REWECOM"
i = i + 1: lRAGN(i) = 9750: sRText(i) = "VERKAUF MWST-NEUTRAL"
i = i + 1: lRAGN(i) = 9751: sRText(i) = "TELEFONKARTEN UMSATZNEUTRAL"
i = i + 1: lRAGN(i) = 9752: sRText(i) = "FAHRSCHEINE UMSATZNEUTRAL"
i = i + 1: lRAGN(i) = 9753: sRText(i) = "LOTTOEINNAHMEN UMSATZNEUTRAL"
i = i + 1: lRAGN(i) = 9754: sRText(i) = "POST U.SONSTIGES UMSATZNEUTRAL"
i = i + 1: lRAGN(i) = 9755: sRText(i) = "LOTTOAUSZAHLUNG UMSATZNEUTRAL"
i = i + 1: lRAGN(i) = 9756: sRText(i) = "T-MOBILE E-LOADINGKARTEN"
i = i + 1: lRAGN(i) = 9757: sRText(i) = "VODAFONE E-LOADINGKARTEN"
i = i + 1: lRAGN(i) = 9758: sRText(i) = "EPLUS E-LOADINGKARTEN"
i = i + 1: lRAGN(i) = 9759: sRText(i) = "O2 E-LOADINGKARTEN"
i = i + 1: lRAGN(i) = 9760: sRText(i) = "IMBISS/SPEISEN U.GETRAENK.E-MW"
i = i + 1: lRAGN(i) = 9761: sRText(i) = "IMBISS/SPEISEN U.GETRAENK.E-MW"
i = i + 1: lRAGN(i) = 9762: sRText(i) = "IMBISS/SPEISEN/GETRÄNKE VMWST."
i = i + 1: lRAGN(i) = 9770: sRText(i) = "IMBISS/SPEISEN U.GETRAENK.V-MW"
i = i + 1: lRAGN(i) = 9771: sRText(i) = "KONZESSIONÄR NEUTRALE MWST."
i = i + 1: lRAGN(i) = 9772: sRText(i) = "ENTSORGER MÜLLSÄCKE O. MWST"
i = i + 1: lRAGN(i) = 9780: sRText(i) = "KONZESSIONAER E-MWST"
i = i + 1: lRAGN(i) = 9781: sRText(i) = "KONZESSIONAERE E-MWST"
i = i + 1: lRAGN(i) = 9790: sRText(i) = "KONZESSIONAER V-MWST"
i = i + 1: lRAGN(i) = 9791: sRText(i) = "KONZESSIONAER V-MWST"
i = i + 1: lRAGN(i) = 9800: sRText(i) = "FILIALBEDARF,EINRICHT./BH-GH-P"
i = i + 1: lRAGN(i) = 9810: sRText(i) = "VERPACKUNGSMATERIAL LADEN"
i = i + 1: lRAGN(i) = 9811: sRText(i) = "VERPACKUNGSMATERIAL LADEN"
i = i + 1: lRAGN(i) = 9812: sRText(i) = "VERPACKUNGSMATERIAL SERVICE"
i = i + 1: lRAGN(i) = 9813: sRText(i) = "VERPACKUNGSMATERIAL O+G/BLUMEN"
i = i + 1: lRAGN(i) = 9814: sRText(i) = "VERPACKUNGSMATERIAL FOOD-SERVI"
i = i + 1: lRAGN(i) = 9815: sRText(i) = "LOGISTIK-/ZÄHLKOSTEN DPG EINWEG"
i = i + 1: lRAGN(i) = 9816: sRText(i) = "VERWERTUNGSERLÖSE DPG EINWEG"
i = i + 1: lRAGN(i) = 9819: sRText(i) = "VERPACKUNG WAAGENARTIKEL"
i = i + 1: lRAGN(i) = 9820: sRText(i) = "FILIALBEDARF/SONST.MATERIAL V-"
i = i + 1: lRAGN(i) = 9821: sRText(i) = "FILIALBED./SONST.MATERIAL V-MW"
i = i + 1: lRAGN(i) = 9822: sRText(i) = "DRUCKERZEUGNISSE FÜR D.MÄRKTE"
i = i + 1: lRAGN(i) = 9823: sRText(i) = "TONER,FARBBÄNDER,KASSENROLLEN"
i = i + 1: lRAGN(i) = 9824: sRText(i) = "BÜROMATERIAL FÜR DIE MÄRKTE"
i = i + 1: lRAGN(i) = 9825: sRText(i) = "ETIKETTEN"
i = i + 1: lRAGN(i) = 9826: sRText(i) = "ERSTE HILFE MATERIAL"
i = i + 1: lRAGN(i) = 9827: sRText(i) = "KLEINMATERIAL BEDIENUNGSTHEKEN"
i = i + 1: lRAGN(i) = 9828: sRText(i) = "SOZIALRAUM(EINRICHTUNG&AUSST.)"
i = i + 1: lRAGN(i) = 9829: sRText(i) = "BERUFSBEKLEIDUNG (NUR REINIG.)"
i = i + 1: lRAGN(i) = 9830: sRText(i) = "FILIALBEDARF/SONST.MATERIAL E-"
i = i + 1: lRAGN(i) = 9831: sRText(i) = "FILIALBED./SONST.MATERIAL E-MW"
i = i + 1: lRAGN(i) = 9832: sRText(i) = "WASSERSPENDER UND ZUBEHÖR"
i = i + 1: lRAGN(i) = 9833: sRText(i) = "ZENTR.LAGER LOG.-KOSTEN OMWST"
i = i + 1: lRAGN(i) = 9834: sRText(i) = "ZENTR.LAGER LOG.KOSTEN EMWST"
i = i + 1: lRAGN(i) = 9835: sRText(i) = "ZENTR.LAGER LOG.KOSTEN VMWST"
i = i + 1: lRAGN(i) = 9840: sRText(i) = "SONSTIGE KOSTEN + BEDARFSARTIK"
i = i + 1: lRAGN(i) = 9843: sRText(i) = "BERUFSKLEIDUNG (INCL. MIETE)"
i = i + 1: lRAGN(i) = 9844: sRText(i) = "PKW UND ZUBEHOER"
i = i + 1: lRAGN(i) = 9845: sRText(i) = "LKW U. ZUBEHOER"
i = i + 1: lRAGN(i) = 9846: sRText(i) = "LADEBORDWAENDE"
i = i + 1: lRAGN(i) = 9847: sRText(i) = "AUFBAUTEN"
i = i + 1: lRAGN(i) = 9848: sRText(i) = "BETRIEBSSTOFFE"
i = i + 1: lRAGN(i) = 9849: sRText(i) = "HOCHREGALE/LAGERTECHN./ZUBEHOE"
i = i + 1: lRAGN(i) = 9850: sRText(i) = "LADENEINRICHTUNG/-REINIGUNG"
i = i + 1: lRAGN(i) = 9851: sRText(i) = "REGALE UND ZUBEHOER"
i = i + 1: lRAGN(i) = 9852: sRText(i) = "EINKAUFSWAGEN"
i = i + 1: lRAGN(i) = 9853: sRText(i) = "KASSENTISCHZUBEHOER"
i = i + 1: lRAGN(i) = 9854: sRText(i) = "KASSENSTUEHLE"
i = i + 1: lRAGN(i) = 9855: sRText(i) = "LICHTTECHNIK"
i = i + 1: lRAGN(i) = 9856: sRText(i) = "KUEHLUNG"
i = i + 1: lRAGN(i) = 9857: sRText(i) = "REINIGUNGSMITTEL (MÄRKTE)"
i = i + 1: lRAGN(i) = 9858: sRText(i) = "SPEZIALMOEBEL"
i = i + 1: lRAGN(i) = 9859: sRText(i) = "FUSSMATTEN MIETSERVICE"
i = i + 1: lRAGN(i) = 9860: sRText(i) = "TECHN.EINRICHTUNGEN,KOSTEN ART"
i = i + 1: lRAGN(i) = 9861: sRText(i) = "VERPACKUNGSMASCHINEN"
i = i + 1: lRAGN(i) = 9862: sRText(i) = "REINIGUNGSGERAETE"
i = i + 1: lRAGN(i) = 9863: sRText(i) = "ALARMANLAGEN/DIEBSTAHLS./TRESO"
i = i + 1: lRAGN(i) = 9864: sRText(i) = "LEERGUTRUECKNAHMEAUTO.U.SYSTEM"
i = i + 1: lRAGN(i) = 9865: sRText(i) = "METZGEREIMASCHINEN/-EINRICHTUN"
i = i + 1: lRAGN(i) = 9866: sRText(i) = "WAAGEN/AUFSCHNITTMASCH./EINR."
i = i + 1: lRAGN(i) = 9867: sRText(i) = "ENTSORGUNG"
i = i + 1: lRAGN(i) = 9868: sRText(i) = "SONSTIGE DIENSTLEISTUNGEN/KOST"
i = i + 1: lRAGN(i) = 9869: sRText(i) = "STROM"
i = i + 1: lRAGN(i) = 9870: sRText(i) = "WERBUNG"
i = i + 1: lRAGN(i) = 9871: sRText(i) = "WERBEMATERIAL"
i = i + 1: lRAGN(i) = 9872: sRText(i) = "GIVE AWAYïS"
i = i + 1: lRAGN(i) = 9873: sRText(i) = "DEKOMATERIAL"
i = i + 1: lRAGN(i) = 9874: sRText(i) = "PREISAUSZEICHNUNGSZUBEHOER"
i = i + 1: lRAGN(i) = 9875: sRText(i) = "WERBEANLAGEN AUSSEN"
i = i + 1: lRAGN(i) = 9876: sRText(i) = "SONSTIGE WERBEDIENSTLEISTUNG"
i = i + 1: lRAGN(i) = 9877: sRText(i) = "PRÄMIENARTIKEL"
i = i + 1: lRAGN(i) = 9880: sRText(i) = "BUCHHALTUNG GH-PARTNER E-MWST"
i = i + 1: lRAGN(i) = 9881: sRText(i) = "PRIVATENTNAHME E-MWST"
i = i + 1: lRAGN(i) = 9882: sRText(i) = "KOSTENENTNAHME E-MWST"
i = i + 1: lRAGN(i) = 9883: sRText(i) = "BRUCH/VERDERB E-MWST"
i = i + 1: lRAGN(i) = 9884: sRText(i) = "INVENTURVERZEHR E-MWST"
i = i + 1: lRAGN(i) = 9885: sRText(i) = "WARENSCHAEDEN E-MWST"
i = i + 1: lRAGN(i) = 9890: sRText(i) = "BUCHHALTUNG GH-PARTNER V-MWST"
i = i + 1: lRAGN(i) = 9891: sRText(i) = "PRIVATENTNAHME V-MWST"
i = i + 1: lRAGN(i) = 9892: sRText(i) = "KOSTENENTNAHME V-MWST"
i = i + 1: lRAGN(i) = 9893: sRText(i) = "BRUCH/VERDERB V-MWST"
i = i + 1: lRAGN(i) = 9894: sRText(i) = "INVENTURVERZEHR V-MWST"
i = i + 1: lRAGN(i) = 9895: sRText(i) = "WARENSCHAEDEN V-MWST"
i = i + 1: lRAGN(i) = 9896: sRText(i) = "ERLÖSE PROVI.HANDY CASH KARTE"
i = i + 1: lRAGN(i) = 9905: sRText(i) = "BLUMEN-WAGEN KLEIN"
i = i + 1: lRAGN(i) = 9909: sRText(i) = "TKT ROLLBEHAELTER ROT"
i = i + 1: lRAGN(i) = 9911: sRText(i) = "ENTSORGUNGSCONTAINER"
i = i + 1: lRAGN(i) = 9912: sRText(i) = "FALTBARER THERMO BEHAELTER"
i = i + 1: lRAGN(i) = 9921: sRText(i) = "EURO-PALETTEN 1/1"
i = i + 1: lRAGN(i) = 9922: sRText(i) = "EINWEGPALETTE"
i = i + 1: lRAGN(i) = 9927: sRText(i) = "KUNSTSTOFF-H1-PALETTE"
i = i + 1: lRAGN(i) = 9936: sRText(i) = "SHIPPER BOX 1/4"
i = i + 1: lRAGN(i) = 9937: sRText(i) = "SHIPPER BOX 1/2"
i = i + 1: lRAGN(i) = 9952: sRText(i) = "4800 ECHENSPERGER"
i = i + 1: lRAGN(i) = 9959: sRText(i) = "ROLLBEHAELTER MIT TK-HAUBE"
i = i + 1: lRAGN(i) = 9971: sRText(i) = "ZWISCHENBOEDEN-ROLLCONTAINER"
i = i + 1: lRAGN(i) = 9976: sRText(i) = "GWG BIS 150 EUR"
i = i + 1: lRAGN(i) = 9977: sRText(i) = "GWG AB 150 EUR"
i = i + 1: lRAGN(i) = 9979: sRText(i) = "1100 PAHSEN"

        
    For j = 0 To i
        sSQL = "Insert into ReweAGN (REWEAGN,REWEAGTEXT) values (" & lRAGN(j) & ",'" & sRText(j) & "')"
        gdBase.Execute sSQL, dbFailOnError
    Next j
        
Exit Sub
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "FuelleReweAgn3"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1

End Sub
Private Sub FuelleReweAgn4()
    On Error GoTo LOKAL_ERROR

    NachtragREWEAGN 1369, "BIO KNÄCKE/ZWIEBACK/REISSCHNITTE"
    NachtragREWEAGN 2619, "BIO MEHL/STÄRKE/GRIESS/GETREIDE"
    NachtragREWEAGN 2629, "BIO ZUCKER/EINMACHPROD./SÜßUNGSM"
    NachtragREWEAGN 2719, "BIO KARTOFFELPROD./PANIERMEHL"
    NachtragREWEAGN 2729, "BIO TEIGWAREN"
    NachtragREWEAGN 2759, "BIO REIS- UND HÜLSENFRÜCHTE"
    NachtragREWEAGN 2779, "BIO MÜSLI/CEREALIEN/SAATEN"
    NachtragREWEAGN 2819, "BIO NÜSSE U. TROCKENFRÜCHTE"
    NachtragREWEAGN 2829, "BIO BACKMISCHUNG"
    NachtragREWEAGN 2869, "BIO PUDDING/BACKARTIKEL"
    NachtragREWEAGN 3023, "SONSTIGE TEE"
    NachtragREWEAGN 3025, "MAGEN/DARM/NIERE/BLASE E-MWST"
    NachtragREWEAGN 3026, "OTC HAUT/HAARE/NÄGEL E-MWST"
    NachtragREWEAGN 3027, "RESTL. NEM MEDPROD. E-MWST"
    NachtragREWEAGN 3035, "MAGEN/DARM/NIERE/BLASE V-MWST"
    NachtragREWEAGN 3036, "OTC HAUT/HAARE/NÄGEL V-MWST"
    NachtragREWEAGN 3037, "RESTL. NEM, MEDPROD. V-MWST"
    NachtragREWEAGN 3038, "KONTAKTLINSEN / PFLEGEMITTEL"
    NachtragREWEAGN 3055, "AZN MAGEN/DARM/NIERE/BLASE E-MWS"
    NachtragREWEAGN 3056, "AZN OTC HAUT/HAARE/NÄGEL E-MWST"
    NachtragREWEAGN 3057, "RESTL.ARZNEIMITTEL SACHK. E-MWST"
    NachtragREWEAGN 3065, "AZN MAGEN/DARM/NIERE/BLASE V-MWS"
    NachtragREWEAGN 3066, "AZN OTC HAUT/HAARE/NÄGEL V-MWST"
    NachtragREWEAGN 3067, "RESTL.ARZNEIMITTEL SACHK. V-MWST"
    NachtragREWEAGN 3073, "DIÄT-BROTAUFSTRICH"
    NachtragREWEAGN 3075, "SÜSSSTOFF U. DIABETIKERZUCKER"
    NachtragREWEAGN 3076, "DIÄTGETRÄNKE E-MWST"
    NachtragREWEAGN 3079, "BIO WÜRZIGE AUFSTRICHE"
    NachtragREWEAGN 3159, "BIO SUPPEN/ZUTATEN/FERTIGGERICHT"
    NachtragREWEAGN 3239, "BIO OEL/ESSIG"
    NachtragREWEAGN 3269, "BIO GEWÜRZE/SALZ E-MWST"
    NachtragREWEAGN 3329, "BIO BRÜHEN U. FIXPRODUKTE"
    NachtragREWEAGN 3337, "PESTO"
    NachtragREWEAGN 3339, "BIO FERTIG-/TOMATENSAUCE/-MARK"
    NachtragREWEAGN 3349, "BIO FEINKOST"
    NachtragREWEAGN 3379, "BIO SENF/MAYO/KETSCHUP"
    NachtragREWEAGN 3459, "BIO BROTAUFSTR./HONIG/FERTIGSAUC"
    NachtragREWEAGN 3629, "BIO OBSTKONSERVEN"
    NachtragREWEAGN 3679, "BIO GEMÜSEKONSERVEN"
    NachtragREWEAGN 3813, "SCHOKOLADE MIT ALKOHOL"
    NachtragREWEAGN 3869, "BIO SCHOKOLADE/PRALINEN/RIEGEL"
    NachtragREWEAGN 3949, "BIO BONBONS/FRUCHTGUMMI"
    NachtragREWEAGN 4019, "BIO SÜSSGEBÄCK"
    NachtragREWEAGN 4039, "BIO SALZGEBÄCK"
    NachtragREWEAGN 4689, "BIO AFG MEHRWEG"
    NachtragREWEAGN 4759, "BIO OBST- UND GEMÜSESÄFTE"
    NachtragREWEAGN 5059, "BIO KAFFEE"
    NachtragREWEAGN 5139, "BIO TEE"
    NachtragREWEAGN 5149, "BIO KAKAO"
    NachtragREWEAGN 3077, "DIÄTGETRÄNKE V - MWST"
    NachtragREWEAGN 4838, "SEKT + WEIN ALKOHOLFREI"

    NachtragREWEAGN 6316, "JA Nagelfeilen"
        
Exit Sub
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "FuelleReweAgn4"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Sub
Private Sub NachtragREWEAGN(lRNR As Long, sRText As String)
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL        As String
    
    sSQL = "Delete from REWEAGN where REWEAGN = " & lRNR
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into REWEAGN (REWEAGN,REWEAGTEXT) values (" & lRNR & ",'" & UCase(sRText) & "')"
    gdBase.Execute sSQL, dbFailOnError
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "NachtragREWEAGN"
    Fehler.gsFehlertext = "Im Programmteil Rewe Warengruppen ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Function ESUStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad       As String
        Dim cPfad1      As String
        Dim oldpath     As String
        Dim newpath     As String
        Dim newpath1    As String
        Dim lfail       As Long
        Dim lRet        As Long
        Dim pa          As String
        Dim sSQL        As String
        Dim rsrs        As Recordset
        Dim rsZ         As Recordset
        Dim lAnz        As Long
        Dim lfnr1       As Long
        Dim i           As Integer
        Dim dbImport    As Database
        Dim cEAN        As String
    
        ESUStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
'        pa = Left(cPfad, (Len(cPfad) - 1))
        
    
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda

        oldpath = sESUEpfad
        oldpath = ShortPath(oldpath)
        oldpath = oldpath & "\" & sdat
        
        newpath1 = cPfad1 & "Stammda\ESUE\"
        newpath1 = ShortPath(newpath1)
        newpath1 = newpath1 & sdat
        
        lRet = CopyFile(oldpath, newpath1, lfail)

        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
        Kill cPfad & "mde"
        oldpath = sESUEpfad & "\" & sdat
        newpath = cPfad & "mde"

        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
                Kill oldpath
            End If

            anzeige "normal", "Die Datei wird kopiert...", Label3

        End If
        
'        newpath1 = cPfad1 & "Stammda\ESUE\"
'        newpath1 = ShortPath(newpath1)
'        newpath1 = newpath1 & sdat
        
        'hier könnte man entpacken
        picprogress.Visible = True
        Zip_Unzip "", sESUEpfad & "\", newpath1, txtstatus
        picprogress.Visible = False
        'entpacken ende
        
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
'        sDat = "Artneu.dbf"
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")
        
        Set dbImport = OpenDatabase(sESUEpfad, False, False, "dBase IV;")
        
        Set rsZ = dbImport.OpenRecordset("artneu")
        If Not rsZ.EOF Then
            rsZ.MoveLast
            lAnz = rsZ.RecordCount
            rsZ.MoveFirst
            Do While Not rsZ.EOF
                rsrs.AddNew
                
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                    
                If Not IsNull(rsZ!BEZEICHNER) Then
                    If Not IsNull(rsZ!GROESSNBEZ) Then
                        rsrs!BEZEICH = rsZ!BEZEICHNER & " " & rsZ!GROESSNBEZ
                    Else
                        rsrs!BEZEICH = rsZ!BEZEICHNER
                    End If
                    
                End If
                
                If Not IsNull(rsZ!Sortiment) Then
                    rsrs!LPZ = rsZ!Sortiment ' 500 + CInt(rsZ!Sortiment)
                End If
                
                If Not IsNull(rsZ!EANNUMMER) Then
                
                    cEAN = Val(rsZ!EANNUMMER)
                    If cEAN = "0" Then
                        rsrs!EAN = ""
                    Else
                        If Len(cEAN) = 11 Then
                            rsrs!EAN = "0" & cEAN
                        Else
                            rsrs!EAN = cEAN
                        End If
                    End If
                End If
                
                If Not IsNull(rsZ!Nummer) Then
                    rsrs!LIBESNR = rsZ!Nummer
                End If
                
                If Not IsNull(rsZ!LIEFBESTNR) Then
                    If Not IsNull(rsZ!LIEFNUMMER) Then
                        rsrs!NOTIZEN = rsZ!LIEFNUMMER & " " & rsZ!LIEFBESTNR
                    Else
                        rsrs!NOTIZEN = rsZ!LIEFNUMMER
                    End If
                End If
                
                If Not IsNull(rsZ!INHALT) Then
                    rsrs!INHALT = rsZ!INHALT
                End If
                
                If Not IsNull(rsZ!GROESSNBEZ) Then
                    rsrs!INHALTBEZ = rsZ!GROESSNBEZ
                End If
                
                If Not IsNull(rsZ!EKPREIS) Then
                    rsrs!lekpr = 100 * CDbl(rsZ!EKPREIS) 'SwapStr(rsZ!EKPREIS, ",", "")
                End If
                
                If Not IsNull(rsZ!VKPREIS) Then
                    rsrs!vkpr = 100 * CDbl(rsZ!VKPREIS)
                End If
                
                If Not IsNull(rsZ!MMMWST) Then
                    rsrs!MWST = rsZ!MMMWST
                End If
                
                If Not IsNull(rsZ!BMENGE) Then
                    rsrs!MINMEN = rsZ!BMENGE
                End If
                
                rsrs!linr = "100000"
                
                rsrs!RKZ = "N"
                rsrs!GEFUEHRT = "J"
                rsrs!GRUNDPREIS = "J"
                
                rsrs.Update
                
            rsZ.MoveNext
            Loop
        End If
        rsZ.Close: Set rsZ = Nothing
        rsrs.Close: Set rsrs = Nothing
        dbImport.Close
        
        anzeige "normal", "Die Datensätze werden überprüft...", Label3
        Pause (3)
        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        pbrStatus.Value = 75
        
        ESUStep3 = True
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "ESUStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
        Resume Next
        
    End If
End Function
Private Function IDENStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad       As String
        Dim cPfad1      As String
        Dim oldpath     As String
        Dim newpath     As String
        Dim newpath1    As String
        Dim lfail       As Long
        Dim lRet        As Long
        Dim pa          As String
        Dim sSQL        As String
        Dim rsrs        As Recordset
        Dim rsZ         As Recordset
        Dim lAnz        As Long
        Dim lfnr1       As Long
        Dim i           As Integer
        Dim dbImport    As Database
        Dim cEAN        As String
    
        IDENStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
'        pa = Left(cPfad, (Len(cPfad) - 1))
        
    
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda

        oldpath = sIDENPfad
        oldpath = ShortPath(oldpath)
        oldpath = oldpath & "\" & sdat
        
        newpath1 = cPfad1 & "Stammda\IDEN\"
        newpath1 = ShortPath(newpath1)
        newpath1 = newpath1 & sdat
        
        lRet = CopyFile(oldpath, newpath1, lfail)

        pbrStatus.Value = 30
        '3. Datei kopieren in den Anwendungspfad
        Kill cPfad & "mde"
        oldpath = sIDENPfad & "\" & sdat
        newpath = cPfad & "mde"

        lRet = CopyFile(oldpath, newpath, lfail)
        If lRet = 0 Then
            Screen.MousePointer = 0
            anzeige "Rot", "Das Einlesen wurde abgebrochen: Kopierfehler", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            If oldpath <> newpath1 Then
                Kill oldpath
            End If

            anzeige "normal", "Die Datei wird kopiert...", Label3
        End If
        
        'hier könnte man entpacken
        picprogress.Visible = True
        Zip_Unzip "", sIDENPfad & "\", newpath1, txtstatus
        picprogress.Visible = False
        'entpacken ende
        
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        

        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim lLenfil As Long
        Dim lPos As Long
        Dim lPosEnde As Long
        Dim cEinzelsatz As String
        Dim lposSemi As Long
        Dim lposSemiEnde As Long
        Dim cWert As String
        Dim cWert2 As String
        Dim cBezeichnung     As String
        Dim cFarbbezeichnung As String
        Dim lLinr   As Long
        
        lPos = 1
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        iFileNr = FreeFile
        
        Dim sOpenTextDateiPlusPfad As String
        sOpenTextDateiPlusPfad = sIDENPfad & "\" & Left(sdat, Len(sdat) - 4)

        Open sOpenTextDateiPlusPfad For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
        
            lLenfil = Len(cSatz1)
            
            lPosEnde = InStr(lPos, cSatz1, vbCrLf)
            lPos = lPos + lPosEnde - lPos + 2 'Kopfzeile überspringen
            
            
            Do
                lPosEnde = InStr(lPos, cSatz1, vbCrLf)
                
                cEinzelsatz = Mid(cSatz1, lPos, lPosEnde - lPos)
                lPos = lPos + lPosEnde - lPos + 2
                
                



                lposSemi = 1

                rsrs.AddNew
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                rsrs!LIBESNR = cWert

                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1

                cBezeichnung = Trim(Left(cWert, 35))
                rsrs!BEZEICH = cBezeichnung

                'sinnlos
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1

                If IsNumeric(cWert) Then
                    rsrs!EAN = cWert
                Else
                    rsrs!EAN = 0
                End If

                'mwst
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1

'                cMWST = Trim(cWert)
                
                If cWert = "0" Then
                    rsrs!MWST = "1"
                ElseIf cWert = "1" Then
                    rsrs!MWST = "2"
                End If
                
                
                
                
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Trim(Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi))
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                If IsNumeric(cWert) Then
                    rsrs!lekpr = SwapStr(cWert, ".", "")
                Else
                    rsrs!lekpr = 0
                End If
                
                'sinnlos
                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                

                lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
                cWert = Trim(Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi))
                lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
                
                
                
                
                
                If IsNumeric(cWert) Then
                    rsrs!vkpr = SwapStr(cWert, ".", "")
                Else
                    rsrs!vkpr = 0
                End If
                
                
                
                
                rsrs!LPZ = 1
                
                rsrs!RKZ = "N"
                rsrs!GEFUEHRT = "J"
                rsrs!MINMEN = "1"

                rsrs.Update
                
            Loop While lLenfil >= lPos
            
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
        
        anzeige "normal", "Die Datensätze werden überprüft...", Label3
        Pause (3)
        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        gdBase.Execute sSQL, dbFailOnError

        pbrStatus.Value = 75
        
        
        
        '9. Ermittle IDEN Linr und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3
    
        lLinr = checkIDENinLISRT()
    
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            gdBase.Execute sSQL, dbFailOnError
        End If

        
        IDENStep3 = True
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "IDENStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
        Resume Next
        
    End If
End Function
Private Function ZeitStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad       As String
        Dim cPfad1      As String
        Dim oldpath     As String
        Dim newpath     As String
        Dim newpath1    As String
        Dim lfail       As Long
        Dim lRet        As Long
        Dim lLinr       As Long
        Dim sSQL        As String
        Dim rsrs        As Recordset
        Dim lAnz        As Long
        Dim i           As Integer
        Dim lfnr1       As Long
        Dim dbExcel     As Database
        Dim rsZ         As Recordset
        Dim gsExcel50   As String
    
        ZeitStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
'        pa = Left(cPfad, (Len(cPfad) - 1))
        
    
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp
        
        '2a. Datei kopieren in den Anwendungspfad+Stammda
        
        oldpath = sZeitpfad & "\" & sdat
        newpath1 = cPfad1 & "Stammda\Zeitung\" & sdat
        lRet = CopyFile(oldpath, newpath1, lfail)
    
        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        gsExcel50 = "Excel 5.0;"
        
        Set dbExcel = OpenDatabase(sZeitpfad & "\" & sdat, 0, 0, gsExcel50)
        
        Set rsZ = dbExcel.OpenRecordset("Presse$")
        If Not rsZ.EOF Then
            rsZ.MoveLast
            lAnz = rsZ.RecordCount
            rsZ.MoveFirst
            Do While Not rsZ.EOF
                rsrs.AddNew
                
                lfnr1 = lfnr1 + 1
                rsrs!lfnr = lfnr1
                    
                If Not IsNull(rsZ!vdznr) Then
                    rsrs!LIBESNR = rsZ!vdznr
                End If
                
                If Not IsNull(rsZ!abgabepreis) Then
                    rsrs!lekpr = 100 * CDbl(rsZ!abgabepreis)
                End If
                
                If Not IsNull(rsZ!titel) Then
                    rsrs!BEZEICH = rsZ!titel
                End If
                
                If Not IsNull(rsZ!oberwarengruppe) Then
                    rsrs!LPZ = rsZ!oberwarengruppe
                End If
                
                If Not IsNull(rsZ![MWST Satz]) Then
                    If rsZ![MWST Satz] = 7 Then
                        rsrs!MWST = "E"
                        rsrs!AGN = Text1(6).Text
                    Else
                        rsrs!MWST = "V"
                        rsrs!AGN = Text1(7).Text
                    End If
                End If
                
                rsrs.Update
                
            rsZ.MoveNext
            Loop
        End If
        rsZ.Close: Set rsZ = Nothing
        rsrs.Close: Set rsrs = Nothing
        dbExcel.Close
        
'        Kill sZeitpfad & "\" & sDat
    
        anzeige "normal", "Die Datensätze werden überprüft...", Label3
        Pause (3)
        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
'        lAnz = CLng(ErmittlungMeisterDuplis)
'        If lAnz > 0 Then
'
'            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
'        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
        
        
        '9. Ermittle ZeitungsLINR und ordne zu
        anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3


        lLinr = checkZeitinLISRT()
                
        If lLinr = 0 Then
            Screen.MousePointer = 0
            anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
            Command1(5).Enabled = False
            Exit Function
        Else
            sSQL = "Update IMPORTPRI SET LINR = " & lLinr
            schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
        End If
        pbrStatus.Value = 75
        

        ZeitStep3 = True
        
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "ZeitStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
        Resume Next
        
    End If
End Function
Private Function FriseurStep3(sdat As String) As Boolean
    On Error GoTo LOKAL_ERROR

        Dim cPfad   As String
        Dim cPfad1  As String
        Dim oldpath As String
        Dim newpath As String
        Dim newpath1 As String
        Dim lfail   As Long
        Dim lRet    As Long
        Dim pa      As String
        Dim sSQL    As String
        Dim rsrs    As Recordset
        Dim lAnz    As Long
        Dim i       As Integer
    
        FriseurStep3 = False
        
        cPfad1 = gcDBPfad    'Dabapfad
        If Right$(cPfad1, 1) <> "\" Then
            cPfad1 = cPfad1 & "\"
        End If
        
        cPfad = gcPfad    'Anwendungspfad
        If Right$(cPfad, 1) <> "\" Then
            cPfad = cPfad & "\"
        End If
        pa = Left(cPfad, (Len(cPfad) - 1))
        
        'vorbereitung der Importtabelle
        '1. erst löschen
        loeschapp "meister"
        
        '2. dann erstellen
        CreateTable "MEISTER", gdApp

        Pause (1)
        pbrStatus.Value = 50
        '5. Datensätze werden eingelesen
        
        Dim lAnzSatz As Long
        Dim lAktSatz As Long
        Dim dEkpr As Double
        Dim dVkPr As Double
        Dim DSatz As Datensatz
        Dim iFileNr As Integer
        Dim cSatz1 As String
        Dim lPos As Long
        Dim cEinzelsatz As String
        
        Dim lLinr As Long
        Dim lfnr1 As Long
        Dim ilen As Integer
        Dim cNumstring As String
        Dim cIBeze As String
        Dim sPGNBEZEICH As String
        Dim sAGNBEZEICH As String
        Dim sPgnNummer As String
        
        Dim lPGN As Long
        Dim lagn As Long
        lfnr1 = 0
        
        Set rsrs = gdApp.OpenRecordset("MEISTER")

        iFileNr = FreeFile
        Open sFriseurpfad & "\" & sdat For Binary As #iFileNr
        If LOF(iFileNr) > 0 Then
        
            cSatz1 = Space$(LOF(iFileNr))
            Get #iFileNr, 1, cSatz1
            cSatz1 = Right(cSatz1, Len(cSatz1) - 357)
    
            lAnzSatz = LOF(iFileNr)
            lAnzSatz = lAnzSatz - 1
            lAnzSatz = lAnzSatz / 357

            For lAktSatz = 0 To lAnzSatz - 2
                lPos = (lAktSatz * 357) + 1
                cEinzelsatz = Mid(cSatz1, lPos, 357)
                
                If Val(Mid(cEinzelsatz, 346, 6)) > 0 And Val(Mid(cEinzelsatz, 1, 13)) > 0 Then
                    If DatendrinSQL("select * from lisrt where linr = " & Val(Mid(cEinzelsatz, 346, 6)), gdBase) Then

                        rsrs.AddNew
                        lfnr1 = lfnr1 + 1
                        rsrs!lfnr = lfnr1
                        rsrs!EAN = Mid(cEinzelsatz, 1, 13)
                        rsrs!lekpr = SwapStr(Mid(cEinzelsatz, 188, 6), ",", "")
                        sPGNBEZEICH = Trim(Mid(cEinzelsatz, 250, 30))
                        sAGNBEZEICH = Trim(Mid(cEinzelsatz, 296, 30))
                        rsrs!NOTIZEN = sAGNBEZEICH
                        rsrs!LIBESNR = Trim(Mid(cEinzelsatz, 216, 10))
                        rsrs!BEZEICH = Trim(Mid(cEinzelsatz, 30, 35))
                        rsrs!vkpr = SwapStr(Mid(cEinzelsatz, 208, 6), ",", "")
                        rsrs!LPZ = 1
                        rsrs!linr = Val(Mid(cEinzelsatz, 346, 6))
                        rsrs!MWST = Mid(cEinzelsatz, 214, 1)
                        rsrs!RKZ = "N"
                        rsrs!GEFUEHRT = "J"
                        rsrs!GRUNDPREIS = "J"
                        rsrs.Update
                    End If

                End If
                
                
                
                
                
            Next lAktSatz
        Else
            
        End If
        
        Close iFileNr
        rsrs.Close: Set rsrs = Nothing
    
        anzeige "normal", "Die Datensätze werden überprüft...", Label3
        Pause (3)
        pbrStatus.Value = 60
        '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln
        lAnz = CLng(ErmittlungMeisterDuplis)
        If lAnz > 0 Then
            anzeige "Rot", lAnz & " EAN - Duplikate wurden in der Importtabelle gefunden.", Label3
        End If

        pbrStatus.Value = 65
        '7. diverse Feldüberprüfungen vornehmen
        feldcheckMeister
        anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

        pbrStatus.Value = 70
        '8. Tabelle IMPORTPRI zur Datenbank kopieren
        loesch "Importpri"
        TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

        sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
        schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError

        pbrStatus.Value = 75
        FriseurStep3 = True
        
Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "FriseurStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
        Resume Next
        
    End If
End Function
Private Function TchiboStep3(sdat As String) As Boolean
On Error GoTo LOKAL_ERROR
    
    Dim cPfad   As String
    Dim cPfad1  As String
    Dim oldpath As String
    Dim newpath1 As String
    Dim lfail   As Long
    Dim lRet    As Long
    Dim pa      As String
    Dim sSQL    As String
    Dim rsrs    As Recordset
    Dim i           As Integer
    Dim iFileNr     As Integer
    Dim cSatz1      As String
    Dim lPos As Long
    Dim cEinzelsatz As String
        
    Dim lLinr As Long
    Dim lfnr1 As Long
    Dim ilen As Integer
    Dim lPosEnde As Long
    
    Dim lLenfil As Long
    Dim lposSemi As Long
    Dim lposSemiEnde As Long
    Dim cWert As String

    TchiboStep3 = False
    
    cPfad1 = gcDBPfad    'Dabapfad
    If Right$(cPfad1, 1) <> "\" Then
        cPfad1 = cPfad1 & "\"
    End If
    
    cPfad = gcPfad    'Anwendungspfad
    If Right$(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    pa = Left(cPfad, (Len(cPfad) - 1))
    
    'vorbereitung der Importtabelle
    '1. erst löschen
    
    loeschNEW "meister", gdApp
    
    '2. dann erstellen
    CreateTable "MEISTER", gdApp
    
    '2a. Datei kopieren in den Anwendungspfad+Stammda
    
    oldpath = sTchpfad & "\" & sdat
    newpath1 = cPfad1 & "Stammda\TCHIBO\" & sdat
    lRet = CopyFile(oldpath, newpath1, lfail)

    Pause (1)
    pbrStatus.Value = 50
    '5. Datensätze werden eingelesen

    lfnr1 = 0
    
    lPos = 1
    lPosEnde = 1
    lposSemiEnde = 1
    
    Set rsrs = gdApp.OpenRecordset("MEISTER")

    iFileNr = FreeFile
    Open sTchpfad & "\" & sdat For Binary As #iFileNr
    If LOF(iFileNr) > 0 Then
    
        cSatz1 = Space$(LOF(iFileNr))
        Get #iFileNr, 1, cSatz1
    

        lLenfil = Len(cSatz1)
        
        lPosEnde = InStr(lPos, cSatz1, vbCrLf)
'            lPos = lPos + lPosEnde - lPos + 2 'Kopfzeile überspringen
        
        Do
            lPosEnde = InStr(lPos, cSatz1, vbCrLf)
            
            cEinzelsatz = Mid(cSatz1, lPos, lPosEnde - lPos)
            lPos = lPos + lPosEnde - lPos + 2
            
            lposSemi = 1
            
            rsrs.AddNew
            
            lfnr1 = lfnr1 + 1
            rsrs!lfnr = lfnr1
            
            ' ohne Bedeutung
            lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
            cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
            lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
            
            'EAN
            cWert = ""
            lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
            cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
            lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
            rsrs!EAN = cWert
            
             'LIBESNR
            cWert = ""
            lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
            cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
            lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
            rsrs!LIBESNR = cWert
            
            'bezeich
            cWert = ""
            lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
            cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
            lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
            rsrs!BEZEICH = Left(cWert, 35)
            
            'EK
            cWert = ""
            lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
            cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
            lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
            If IsNumeric(cWert) Then
                rsrs!lekpr = cWert
            Else
                rsrs!lekpr = 0
            End If
            
            'VK
            cWert = ""
            lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
            cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
            lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
            If IsNumeric(cWert) Then
                rsrs!vkpr = cWert
            Else
                rsrs!vkpr = 0
            End If
            
            
            
            
            'MWST
            cWert = ""
            lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
            cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
            lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
            
            If cWert <> "" Then
                If cWert = 1 Then
                    rsrs!MWST = "V"
                ElseIf cWert = 2 Then
                    rsrs!MWST = "E"
                ElseIf cWert = "19" Then
                    rsrs!MWST = "V"
                ElseIf cWert = "7" Then
                    rsrs!MWST = "E"
                End If
            End If
            
            
            
''           ' ohne Bedeutung
''            lposSemiEnde = InStr(lposSemi, cEinzelsatz, ";")
''            cWert = Mid(cEinzelsatz, lposSemi, lposSemiEnde - lposSemi)
''            lposSemi = lposSemi + lposSemiEnde - lposSemi + 1
''
''
''           ' ohne Bedeutung
            rsrs!AUFDAT = Format(DateValue(Now), "YYYYMMDD")
            rsrs!EAN2 = ""
            rsrs!EAN3 = ""
            rsrs!GRUNDPREIS = "J"
            rsrs!MARKE = ""
            rsrs!LPZ = 1
            rsrs!linr = "0"
            rsrs!RKZ = "N"
            rsrs!GEFUEHRT = "J"
            
            rsrs.Update
            
        Loop While lLenfil >= lPos
    End If
    
    Close iFileNr
    rsrs.Close: Set rsrs = Nothing
   
    anzeige "normal", "EAN Duplikate werden entfernt...", Label3

    pbrStatus.Value = 60
    '6. EAN - Duplikatsüberprüfung in der Importtabelle Anzahl ermitteln

    ErmittlungMeisterDuplisPlusDel_09

    anzeige "normal", "Die Artikeldaten werden überprüft...", Label3
    pbrStatus.Value = 65
    
    '7. diverse Feldüberprüfungen vornehmen
    feldcheckMeister
    anzeige "normal", "Die Datensätze werden verarbeitet...", Label3

    pbrStatus.Value = 70
    '8. Tabelle IMPORTPRI zur Datenbank kopieren
    loesch "Importpri"
    TransferTab gdApp, gcDBPfad & "\kissdata.mdb", "IMPORTPRI"

    sSQL = "Create Index ARTNR on IMPORTPRI (ARTNR)"
    gdBase.Execute sSQL, dbFailOnError

    pbrStatus.Value = 75

    '9. Ermittle TchiboLINR und ordne zu
    anzeige "normal", "Die Lieferantenzuordnung wird überprüft...", Label3

    lLinr = checkTchiboinLISRT()

    If lLinr = 0 Then
        Screen.MousePointer = 0
        anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
        Command1(5).Enabled = False
        Exit Function
    Else
        sSQL = "Update IMPORTPRI SET LINR = " & lLinr
        gdBase.Execute sSQL, dbFailOnError
    End If

    'Achtung Tchibocheck in lisrt vornehmen und noch anlege

    TchiboStep3 = True

Exit Function
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
    
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "TchiboStep3"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

        Fehlermeldung1
        
'        Resume Next
    End If
End Function
Private Function BTELINRzuordnung() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim rsrs        As Recordset
    Dim sSQL        As String
    Dim dBTELINR    As Double
    Dim dLiNr       As Double
    
    BTELINRzuordnung = False
    sSQL = "Select distinct(linr)as btelinr from IMPORTPRI"
    
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.RecordCount = 0 Then
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            If Not IsNull(rsrs!btelinr) Then
                dBTELINR = rsrs!btelinr
                
            Else
                dBTELINR = 0
                Screen.MousePointer = 0
                anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
                Exit Function
                
            End If
            
            If dBTELINR <> 0 Then
                dLiNr = checkinBTELISRT(dBTELINR)
                
                If dLiNr = 0 Then
                    Screen.MousePointer = 0
                    anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
                    Exit Function
                Else
                    sSQL = "Update IMPORTPRI SET LINR = " & dLiNr
                    sSQL = sSQL & " where linr = " & dBTELINR
                    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
                End If
                
                
            End If
            
            rsrs.MoveNext
        Loop
    
    Else
        Screen.MousePointer = 0
        anzeige "rot", "Keine auswertbaren Lieferantennummern enthalten.", Label3
        
        Exit Function
    End If
    rsrs.Close: Set rsrs = Nothing
    BTELINRzuordnung = True
    
Exit Function
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "BTELINRzuordnung"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
    
End Function

Private Function checkinBTELISRT(dBTELIEferant As Double) As Double
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    
    checkinBTELISRT = 0
    
    If Not NewTableSuchenDBKombi("BTELISRT", gdBase) Then
        CreateTable "BTELISRT", gdBase
    End If
    
    sSQL = "Select LINR from BTELISRT where btelinr = " & dBTELIEferant
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.RecordCount = 0 Then
        rsrs.MoveFirst
        checkinBTELISRT = rsrs!linr
    Else
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte einen eigenen Lieferanten für die BTE - Lieferantennummer: " & dBTELIEferant & " zuordnen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkinBTELISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkinBTELISRT <> 0 Then
        
            sSQL = "delete from BTELISRT where btelinr = " & dBTELIEferant
            schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
            
            sSQL = "delete from BTELISRT where linr = " & checkinBTELISRT
            schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
            
            sSQL = "Insert into BTELISRT (LINR,BTELINR) values (" & checkinBTELISRT & "," & dBTELIEferant & " ) "
            schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
        End If
        
    End If
    rsrs.Close: Set rsrs = Nothing
    
   
    
Exit Function
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkinBTELISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
    
End Function
Private Function fnPruefeLINRWKL10(lLinr As Long) As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim cSQL As String
    Dim rsrs As Recordset
    
    fnPruefeLINRWKL10 = False
    
    cSQL = "Select * from LISRT where LINR = " & lLinr
    Set rsrs = gdBase.OpenRecordset(cSQL)
    If Not rsrs.EOF Then
        fnPruefeLINRWKL10 = True
    End If
    rsrs.Close: Set rsrs = Nothing
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "fnPruefeLINRWKL10"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
    
End Function
Private Function checkTchiboinLISRT() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    Dim rsLi As Recordset
    
    checkTchiboinLISRT = 0

    
    sSQL = "Select tchLINR from tchiboe "
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!tchLINR) Then
            checkTchiboinLISRT = rsrs!tchLINR
            
            sSQL = "Select * from LISRT where LINR = " & checkTchiboinLISRT
            sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
            Set rsLi = gdBase.OpenRecordset(sSQL)
            If rsLi.RecordCount = 0 Then
                checkTchiboinLISRT = 0
            End If
            rsLi.Close
        
        End If
    End If
    
    If checkTchiboinLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den TCHIBO - Lieferant auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkTchiboinLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkTchiboinLISRT <> 0 Then
        
            sSQL = "update tchiboe set tchlinr = " & checkTchiboinLISRT
            schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
            
        End If
        
    End If
    rsrs.Close: Set rsrs = Nothing
    
   
    
Exit Function
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkTchiboinLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function

Private Function checkIDENinLISRT() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    Dim rsLi As Recordset
    
    checkIDENinLISRT = 0

    
    sSQL = "Select IDENLINR from IDENe "
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!IDENLINR) Then
            checkIDENinLISRT = rsrs!IDENLINR
            
            sSQL = "Select * from LISRT where LINR = " & checkIDENinLISRT
            sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
            Set rsLi = gdBase.OpenRecordset(sSQL)
            If rsLi.RecordCount = 0 Then
                checkIDENinLISRT = 0
            End If
            rsLi.Close
        
        End If
    End If
    
    If checkIDENinLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den IDEN - Lieferant auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkIDENinLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkIDENinLISRT <> 0 Then
        
            sSQL = "update IDENe set IDENlinr = " & checkIDENinLISRT
            gdBase.Execute sSQL, dbFailOnError
            
        End If
        
    End If
    rsrs.Close: Set rsrs = Nothing
    
   
    
Exit Function
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkIDENinLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function


Private Function checkZeitinLISRT() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsLi As Recordset
    
    checkZeitinLISRT = glZeitungsLinr '0

    sSQL = "Select * from LISRT where LINR = " & checkZeitinLISRT
    sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
    Set rsLi = gdBase.OpenRecordset(sSQL)
    If rsLi.RecordCount = 0 Then
        checkZeitinLISRT = 0
    End If
    rsLi.Close
        
    If checkZeitinLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den Zeitungs - Lieferant auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkZeitinLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkZeitinLISRT <> 0 Then
        
            sSQL = "Update KASSEIN Set ZeitungsLinr = " & checkZeitinLISRT
            gdBase.Execute sSQL, dbFailOnError
            
        End If
    End If
    
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkZeitinLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function checkPassPortinLISRT() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    Dim rsLi As Recordset
    
    checkPassPortinLISRT = 0

    sSQL = "Select passlinr from PASSPORTE "
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!passlinr) Then
            checkPassPortinLISRT = rsrs!passlinr
            
            sSQL = "Select * from LISRT where LINR = " & checkPassPortinLISRT
            sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
            Set rsLi = gdBase.OpenRecordset(sSQL)
            If rsLi.RecordCount = 0 Then
                checkPassPortinLISRT = 0
            End If
            rsLi.Close
        
        End If
    End If
    
    If checkPassPortinLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den PASSPORT - Lieferant auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkPassPortinLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkPassPortinLISRT <> 0 Then
            sSQL = "update PASSPORTE set passlinr = " & checkPassPortinLISRT
            gdBase.Execute sSQL, dbFailOnError
        End If
    End If
    rsrs.Close: Set rsrs = Nothing
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkPassPortinLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function checkGerryinLISRT() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    Dim rsLi As Recordset
    
    checkGerryinLISRT = 0

    sSQL = "Select gerrylinr from gerryE "
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!gerrylinr) Then
            checkGerryinLISRT = rsrs!gerrylinr
            
            sSQL = "Select * from LISRT where LINR = " & checkGerryinLISRT
            sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
            Set rsLi = gdBase.OpenRecordset(sSQL)
            If rsLi.RecordCount = 0 Then
                checkGerryinLISRT = 0
            End If
            rsLi.Close
        
        End If
    End If
    
    If checkGerryinLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den Gerry Weber - Lieferant auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkGerryinLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkGerryinLISRT <> 0 Then
            sSQL = "update gerryE set gerrylinr = " & checkGerryinLISRT
            gdBase.Execute sSQL, dbFailOnError
        End If
    End If
    rsrs.Close: Set rsrs = Nothing
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkGerryinLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function checkBELAinLISRT() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    Dim rsLi As Recordset
    
    checkBELAinLISRT = 0

    sSQL = "Select linr from BELAE "
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!linr) Then
            checkBELAinLISRT = rsrs!linr
            
            sSQL = "Select * from LISRT where LINR = " & checkBELAinLISRT
            sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
            Set rsLi = gdBase.OpenRecordset(sSQL)
            If rsLi.RecordCount = 0 Then
                checkBELAinLISRT = 0
            End If
            rsLi.Close
        
        End If
    End If
    
    If checkBELAinLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den Bela - Lieferant auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkBELAinLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkBELAinLISRT <> 0 Then
            sSQL = "update BELAE set linr = " & checkBELAinLISRT
            gdBase.Execute sSQL, dbFailOnError
        End If
    End If
    rsrs.Close: Set rsrs = Nothing
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkBELAinLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function checkLüninginLISRT() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    Dim rsLi As Recordset
    
    checkLüninginLISRT = 0

    sSQL = "Select linr from LUEE "
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!linr) Then
            checkLüninginLISRT = rsrs!linr
            
            sSQL = "Select * from LISRT where LINR = " & checkLüninginLISRT
            sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
            Set rsLi = gdBase.OpenRecordset(sSQL)
            If rsLi.RecordCount = 0 Then
                checkLüninginLISRT = 0
            End If
            rsLi.Close
        
        End If
    End If
    
    If checkLüninginLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den Lüning - Lieferant auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkLüninginLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkLüninginLISRT <> 0 Then
            sSQL = "update LUEE set linr = " & checkLüninginLISRT
            gdBase.Execute sSQL, dbFailOnError
        End If
    End If
    rsrs.Close: Set rsrs = Nothing
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkLüninginLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function checkBOSSinLISRT() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    Dim rsLi As Recordset
    
    checkBOSSinLISRT = 0

    sSQL = "Select BOSSlinr from BOSSE "
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!BOSSlinr) Then
            checkBOSSinLISRT = rsrs!BOSSlinr
            
            sSQL = "Select * from LISRT where LINR = " & checkBOSSinLISRT
            sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
            Set rsLi = gdBase.OpenRecordset(sSQL)
            If rsLi.RecordCount = 0 Then
                checkBOSSinLISRT = 0
            End If
            rsLi.Close
        
        End If
    End If
    
    If checkBOSSinLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den Hugo Boss - Lieferant auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkBOSSinLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkBOSSinLISRT <> 0 Then
            sSQL = "update BossE set bosslinr = " & checkBOSSinLISRT
            gdBase.Execute sSQL, dbFailOnError
        End If
    End If
    rsrs.Close: Set rsrs = Nothing
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkBOSSinLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function checkTUBEinLISRT() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    Dim rsLi As Recordset
    
    checkTUBEinLISRT = 0

    
    sSQL = "Select tubeLINR from tube "
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!tubeLINR) Then
            checkTUBEinLISRT = rsrs!tubeLINR
            
            sSQL = "Select * from LISRT where LINR = " & checkTUBEinLISRT
            sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
            Set rsLi = gdBase.OpenRecordset(sSQL)
            If rsLi.RecordCount = 0 Then
                checkTUBEinLISRT = 0
            End If
            rsLi.Close
        
        End If
    End If
    
    If checkTUBEinLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den TU Barkow - Lieferant auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkTUBEinLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkTUBEinLISRT <> 0 Then
            sSQL = "update TUBE set TUBElinr = " & checkTUBEinLISRT
            gdBase.Execute sSQL, dbFailOnError
        End If
        
    End If
    rsrs.Close: Set rsrs = Nothing
    
Exit Function
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkTUBEinLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function ermlinrfromImportPri() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    
    ermlinrfromImportPri = 0

    sSQL = "Select distinct(linr) from importpri "
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!linr) Then
            ermlinrfromImportPri = rsrs!linr
        End If
    End If
    rsrs.Close: Set rsrs = Nothing
    
Exit Function
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermlinrfromImportPri"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function checkRINGinLISRT() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    Dim rsLi As Recordset
    
    checkRINGinLISRT = 0

    
    sSQL = "Select RINGLINR from RINGE "
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!RINGLINR) Then
            checkRINGinLISRT = rsrs!RINGLINR
            
            sSQL = "Select * from LISRT where LINR = " & checkRINGinLISRT
            sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
            Set rsLi = gdBase.OpenRecordset(sSQL)
            If rsLi.RecordCount = 0 Then
                checkRINGinLISRT = 0
            End If
            rsLi.Close
        
        End If
    End If
    
    If checkRINGinLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den Ringfoto - Lieferant auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkRINGinLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkRINGinLISRT <> 0 Then
            sSQL = "update RINGE set RINGlinr = " & checkRINGinLISRT
            gdBase.Execute sSQL, dbFailOnError
        End If
        
    End If
    rsrs.Close: Set rsrs = Nothing
    
Exit Function
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkRINGinLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function checkTEXTILinLISRT() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    Dim rsLi As Recordset
    
    checkTEXTILinLISRT = 0

    sSQL = "Select TEXTILLINR from TEXTILE "
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!TEXTILLINR) Then
            checkTEXTILinLISRT = rsrs!TEXTILLINR
            
            sSQL = "Select * from LISRT where LINR = " & checkTEXTILinLISRT
            sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
            Set rsLi = gdBase.OpenRecordset(sSQL)
            If rsLi.RecordCount = 0 Then
                checkTEXTILinLISRT = 0
            End If
            rsLi.Close
        
        End If
    End If
    
    If checkTEXTILinLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den Textil - Lieferant auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkTEXTILinLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkTEXTILinLISRT <> 0 Then
            sSQL = "update TEXTILE set TEXTILlinr = " & checkTEXTILinLISRT
            gdBase.Execute sSQL, dbFailOnError
        End If
        
    End If
    rsrs.Close: Set rsrs = Nothing
    
Exit Function
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkTEXTILinLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function checkLinrInLISRT(cLinrDat As String) As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    Dim rsLi As Recordset
    
    checkLinrInLISRT = 0

    
    sSQL = "Select LINRKISS from LINRZUO where LINRDAT =  " & cLinrDat
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!LINRKISS) Then
            checkLinrInLISRT = rsrs!LINRKISS
            
            sSQL = "Select * from LISRT where LINR = " & checkLinrInLISRT
            sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
            Set rsLi = gdBase.OpenRecordset(sSQL)
            If rsLi.EOF Then
                checkLinrInLISRT = 0
            End If
            rsLi.Close
        
        End If
    End If
    rsrs.Close: Set rsrs = Nothing
    
    If checkLinrInLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den Lieferanten auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkLinrInLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkLinrInLISRT <> 0 Then
        
            sSQL = "Delete from LINRZUO where LINRKISS = " & checkLinrInLISRT
            gdBase.Execute sSQL, dbFailOnError
            
            sSQL = "Delete from LINRZUO where LINRdat = " & cLinrDat
            gdBase.Execute sSQL, dbFailOnError
        
            sSQL = "Insert into LINRZUO ( LINRKISS,linrdat) values "
            sSQL = sSQL & " ( " & checkLinrInLISRT & "," & cLinrDat & ")"
            gdBase.Execute sSQL, dbFailOnError
            
        End If
        
    End If
   
    
Exit Function
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkLinrInLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1

    
End Function
Private Function checkDEVILinLISRT() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim rsrs As Recordset
    Dim rsLi As Recordset
    
    checkDEVILinLISRT = 0

    
    sSQL = "Select devLINR from devile "
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.RecordCount = 0 Then
        rsrs.MoveFirst
        If Not IsNull(rsrs!devLINR) Then
            checkDEVILinLISRT = rsrs!devLINR
            
            sSQL = "Select * from LISRT where LINR = " & checkDEVILinLISRT
            sSQL = sSQL & " and ( SYNSTATUS is null or SYNSTATUS = 'E' or SYNSTATUS = 'A' )"
            Set rsLi = gdBase.OpenRecordset(sSQL)
            If rsLi.RecordCount = 0 Then
                checkDEVILinLISRT = 0
            End If
            rsLi.Close
        Else
            checkDEVILinLISRT = 0
        End If
        
    Else
        checkDEVILinLISRT = 0
    End If
    
    If checkDEVILinLISRT = 0 Then
    
        Screen.MousePointer = 0
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        gF2Prompt.cFeld = "LINR"
        If gF2Prompt.cFeld <> "" Then
            gsAnzeige00a = "Bitte den DEVIL - Lieferant auswählen!"
            frmWK00a.Show 1
        End If
        gsAnzeige00a = ""
        
        anzeige "normal", "Der Lieferant: " & gF2Prompt.cWahl & " wurde zugeordnet.", Label3
        
        If gF2Prompt.cWahl <> "" Then
             checkDEVILinLISRT = CDbl(gF2Prompt.cWahl)
        End If
        
        If checkDEVILinLISRT <> 0 Then
        
            sSQL = "update DEVILe set devlinr = " & checkDEVILinLISRT
            schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
            
        End If
        
    End If
    rsrs.Close: Set rsrs = Nothing
    
Exit Function
LOKAL_ERROR:
    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "checkDEVILinLISRT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1

    
End Function
Private Sub ErmittlungMeisterDuplisPlusDel_09()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL        As String
    Dim rsrs        As Recordset
    Dim rsArt       As Recordset
    Dim cEAN        As String
    Dim lcount      As Long
    
    lcount = 0
    
    loeschNEW "ImportDupli", gdApp
    
    sSQL = "select count(ean) as count ,ean into ImportDupli from Meister group by ean having count(ean) > 1"
    gdApp.Execute sSQL, dbFailOnError
    
    sSQL = "delete from  ImportDupli where ean is null"
    gdApp.Execute sSQL, dbFailOnError
    
    sSQL = "delete from  ImportDupli where trim(ean) = ''"
    gdApp.Execute sSQL, dbFailOnError
    
    
    Set rsrs = gdApp.OpenRecordset("ImportDupli", dbOpenTable)
    If Not rsrs.EOF Then
        rsrs.MoveLast
        pbrStatus.Max = rsrs.RecordCount
        rsrs.MoveFirst
        Do While Not rsrs.EOF
        
            pbrStatus.Value = lcount
            lcount = lcount + 1

            If Not IsNull(rsrs!EAN) Then
                cEAN = Trim(rsrs!EAN)
            End If

            sSQL = "Select * from Meister where ean = '" & cEAN & "'"
            Set rsArt = gdApp.OpenRecordset(sSQL)
            If Not rsArt.EOF Then
                rsArt.MoveFirst

                rsArt.MoveNext
                Do While Not rsArt.EOF

                    rsArt.delete
                    rsArt.MoveNext
                Loop
                rsrs.MoveNext
            End If
            rsArt.Close: Set rsArt = Nothing
        Loop
    End If

    rsrs.Close: Set rsrs = Nothing
    
    'hier setzen
    pbrStatus.Max = 200
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = "Modul7"
    Fehler.gsFunktion = "ErmittlungMeisterDuplisPlusDel_09"
    Fehler.gsFehlertext = "Im Programmteil Ermittlung der Duplikate der Importtabelle ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ErmittlungLueningDuplisPlusDel_EAN()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL        As String
    Dim rsrs        As Recordset
    Dim rsArt       As Recordset
    Dim cEAN        As String
    Dim lcount      As Long
    
    lcount = 0
    
    loeschNEW "ImportDupli", gdApp
    
    sSQL = "select count(ean) as count ,ean into ImportDupli from Meister group by ean having count(ean) > 1"
    gdApp.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from  ImportDupli where ean is null"
    gdApp.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from  ImportDupli where trim(ean) = ''"
    gdApp.Execute sSQL, dbFailOnError
    
    Set rsrs = gdApp.OpenRecordset("ImportDupli", dbOpenTable)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            If Not IsNull(rsrs!EAN) Then
                cEAN = Trim(rsrs!EAN)
            End If

            sSQL = "Select * from Meister where ean = '" & cEAN & "'"
            Set rsArt = gdApp.OpenRecordset(sSQL)
            If Not rsArt.EOF Then
                rsArt.MoveFirst

                rsArt.MoveNext
                Do While Not rsArt.EOF
                    rsArt.delete
                    rsArt.MoveNext
                Loop
                rsrs.MoveNext
            End If
            rsArt.Close: Set rsArt = Nothing
        Loop
    End If

    rsrs.Close: Set rsrs = Nothing
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = "Modul7"
    Fehler.gsFunktion = "ErmittlungLueningDuplisPlusDel_EAN"
    Fehler.gsFehlertext = "Im Programmteil neue Lüning Artikeldaten ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ErmittlungLueningDuplisPlusDel_EAN61()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL        As String
    Dim rsrs        As Recordset
    Dim rsArt       As Recordset
    Dim cEAN        As String
    Dim lcount      As Long
    
    lcount = 0
    
    loeschNEW "ImportDupli", gdApp
    
    sSQL = "select count(ean) as count ,ean into ImportDupli from EAN61 group by ean having count(ean) > 1"
    gdApp.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from  ImportDupli where ean is null"
    gdApp.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from  ImportDupli where trim(ean) = ''"
    gdApp.Execute sSQL, dbFailOnError
    
    Set rsrs = gdApp.OpenRecordset("ImportDupli", dbOpenTable)
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            If Not IsNull(rsrs!EAN) Then
                cEAN = Trim(rsrs!EAN)
            End If

            sSQL = "Select * from EAN61 where ean = '" & cEAN & "'"
            Set rsArt = gdApp.OpenRecordset(sSQL)
            If Not rsArt.EOF Then
                rsArt.MoveFirst

                rsArt.MoveNext
                Do While Not rsArt.EOF
                    rsArt.delete
                    rsArt.MoveNext
                Loop
                rsrs.MoveNext
            End If
            rsArt.Close: Set rsArt = Nothing
        Loop
    End If

    rsrs.Close: Set rsrs = Nothing
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = "Modul7"
    Fehler.gsFunktion = "ErmittlungLueningDuplisPlusDel_EAN61"
    Fehler.gsFehlertext = "Im Programmteil neue Lüning Artikeldaten ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ErmittlungMeisterDuplisPlusDel_Luening()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL        As String
    Dim rsrs        As Recordset
    Dim rsArt       As Recordset
    Dim cLiBesNr        As String
    Dim lcount      As Long
    
    lcount = 0
    
    loeschNEW "ImportDupli", gdApp
    
    sSQL = "select count(libesnr) as count ,libesnr into ImportDupli from Meister group by libesnr having count(libesnr) > 1"
    gdApp.Execute sSQL, dbFailOnError
    
    sSQL = "delete from  ImportDupli where libesnr is null"
    gdApp.Execute sSQL, dbFailOnError
    
    sSQL = "delete from  ImportDupli where trim(libesnr) = ''"
    gdApp.Execute sSQL, dbFailOnError
    
    
    Set rsrs = gdApp.OpenRecordset("ImportDupli", dbOpenTable)
    If Not rsrs.EOF Then
        rsrs.MoveLast
        pbrStatus.Max = rsrs.RecordCount
        rsrs.MoveFirst
        Do While Not rsrs.EOF
        
            pbrStatus.Value = lcount
            lcount = lcount + 1

            If Not IsNull(rsrs!LIBESNR) Then
                cLiBesNr = Trim(rsrs!LIBESNR)
            End If

            sSQL = "Select * from Meister where libesnr = '" & cLiBesNr & "'"
            Set rsArt = gdApp.OpenRecordset(sSQL)
            If Not rsArt.EOF Then
                rsArt.MoveFirst

                rsArt.MoveNext
                Do While Not rsArt.EOF

                    rsArt.delete
                    rsArt.MoveNext
                Loop
                rsrs.MoveNext
            End If
            rsArt.Close: Set rsArt = Nothing
        Loop
    End If

    rsrs.Close: Set rsrs = Nothing
    
    'hier setzen
    pbrStatus.Max = 200
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = "Modul7"
    Fehler.gsFunktion = "ErmittlungMeisterDuplisPlusDel_Luening"
    Fehler.gsFehlertext = "Im Programmteil Ermittlung der Duplikate der Importtabelle ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub feldcheckMeister()
    On Error GoTo LOKAL_ERROR
    
    Dim rsMeister       As Recordset
    Dim rsIMPORTPRI     As Recordset
    Dim sSQL            As String
    Dim sWeek           As String
    Dim iWeek           As Integer
    Dim sBez            As String
    Dim sEAN            As String
    Dim lcount          As Long
    
    lcount = 0
    
    loeschapp "IMPORTPRI"
    CreateTable "IMPORTPRI", gdApp
    
    Set rsIMPORTPRI = gdApp.OpenRecordset("IMPORTPRI")
    
    Set rsMeister = gdApp.OpenRecordset("Meister")
    If Not rsMeister.EOF Then
    
        rsMeister.MoveLast
        pbrStatus.Max = rsMeister.RecordCount
        
        rsMeister.MoveFirst
        Do While Not rsMeister.EOF
        
            pbrStatus.Value = lcount
            lcount = lcount + 1
        
            rsIMPORTPRI.AddNew
            rsIMPORTPRI!lfnr = rsMeister!lfnr
            rsIMPORTPRI!artnr = rsMeister!artnr
            
            'Bezeichnung auf * und ' checken
            If Not IsNull(rsMeister!BEZEICH) Then
            
            
                
                sBez = Left(rsMeister!BEZEICH, 35)

                sBez = SwapStr(sBez, Chr(10), " ")  'umbruch
                sBez = SwapStr(sBez, Chr(13), " ")  'umbruch
                sBez = SwapStr(sBez, "*", " ")  'stern
                sBez = SwapStr(sBez, Chr(34), "Z") '"
                sBez = SwapStr(sBez, "'", " ")  'Hochkommata
                sBez = SwapStr(sBez, ",", ".")  'komma
                sBez = SwapStr(sBez, "á", "ß")  'ß
                
                
               
                sBez = SwapStr(sBez, "", "ö")  '
                sBez = SwapStr(sBez, "", "ä")  '
                sBez = SwapStr(sBez, "", "ü")
                sBez = SwapStr(sBez, "õ", "Ä")
                
                sBez = SwapStr(sBez, "÷", "Ö")
                sBez = SwapStr(sBez, "", "Ö")
                sBez = SwapStr(sBez, "", "Ü")
                sBez = SwapStr(sBez, "³", "Ü")
                sBez = SwapStr(sBez, "`", " ")  '
                sBez = SwapStr(sBez, "|", " ")  '
                
            Else
                sBez = ""
            End If
            If gbTagAkt = True Then
                rsIMPORTPRI!BEZEICH = UCase(sBez)
            Else
                rsIMPORTPRI!BEZEICH = sBez
            End If
            'Standardmäßig auf Ziffer 0
            
            If Not IsNull(rsMeister!AGN) Then
                rsIMPORTPRI!AGN = rsMeister!AGN
            Else
                rsIMPORTPRI!AGN = 0
            End If
            
            If Not IsNull(rsMeister!PGN) Then
                rsIMPORTPRI!PGN = rsMeister!PGN
            Else
                rsIMPORTPRI!PGN = 0
            End If
            
            If Not IsNull(rsMeister!RKZ) Then
                rsIMPORTPRI!RKZ = rsMeister!RKZ
            Else
                rsIMPORTPRI!RKZ = "N"
            End If
            
            
            If Combo1.Text = "Rewe - Format" Then
                rsIMPORTPRI!lekpr = rsMeister!lekpr
                rsIMPORTPRI!vkpr = rsMeister!vkpr
            ElseIf Combo1.Text = "Für Sie - Format" Then
                rsIMPORTPRI!lekpr = rsMeister!lekpr
                rsIMPORTPRI!vkpr = rsMeister!vkpr
            ElseIf Combo1.Text = "KISS - Format" Then
                rsIMPORTPRI!lekpr = rsMeister!lekpr
                rsIMPORTPRI!vkpr = rsMeister!vkpr
            ElseIf Combo1.Text = "Bela - Format" Then
                rsIMPORTPRI!lekpr = rsMeister!lekpr
                rsIMPORTPRI!vkpr = rsMeister!vkpr
            ElseIf Combo1.Text = "Edeka Minden - Format" Then
                rsIMPORTPRI!lekpr = rsMeister!lekpr
                rsIMPORTPRI!vkpr = rsMeister!vkpr
            ElseIf Combo1.Text = "Ringfoto - Format" Then
                rsIMPORTPRI!lekpr = rsMeister!lekpr
                rsIMPORTPRI!vkpr = rsMeister!vkpr
            ElseIf Combo1.Text = "Tchibo - Format" Then
                rsIMPORTPRI!lekpr = rsMeister!lekpr
                rsIMPORTPRI!vkpr = rsMeister!vkpr
            ElseIf Combo1.Text = "IDEN - Format" Then
                rsIMPORTPRI!lekpr = rsMeister!lekpr
                rsIMPORTPRI!vkpr = rsMeister!vkpr
            Else
                rsIMPORTPRI!lekpr = rsMeister!lekpr / 100
                rsIMPORTPRI!vkpr = rsMeister!vkpr / 100
            End If

            If rsMeister!MWST = "1" Then
                rsIMPORTPRI!MWST = "V"
            ElseIf rsMeister!MWST = "2" Then
                rsIMPORTPRI!MWST = "E"
            ElseIf rsMeister!MWST = "" Then
                rsIMPORTPRI!MWST = "V"
            ElseIf IsNull(rsMeister!MWST) Then
                rsIMPORTPRI!MWST = "V"
            Else
                rsIMPORTPRI!MWST = rsMeister!MWST
            End If
            
            rsIMPORTPRI!linr = rsMeister!linr
            rsIMPORTPRI!LIBESNR = rsMeister!LIBESNR
            
            
            If Not IsNull(rsMeister!EAN) Then
                sEAN = rsMeister!EAN
            Else
                sEAN = "0"
            End If
            
            If Combo1.Text = "Rewe - Format" Then
                sEAN = SwapStr(sEAN, "00000", "")
            End If
            
            If sEAN = "" Then
                rsIMPORTPRI!EAN = "0"
            Else
                rsIMPORTPRI!EAN = sEAN
            End If

            rsIMPORTPRI!EAN2 = rsMeister!EAN2
            rsIMPORTPRI!EAN3 = rsMeister!EAN3
            
            
            
            If giEANNULLEN = 0 Then
            
                If rsIMPORTPRI!EAN <> "" Then
                    rsIMPORTPRI!EAN = Format(rsIMPORTPRI!EAN, "0000000000000")
                End If
                
                If rsIMPORTPRI!EAN2 <> "" Then
                    rsIMPORTPRI!EAN2 = Format(rsIMPORTPRI!EAN2, "0000000000000")
                End If
                
                If rsIMPORTPRI!EAN3 <> "" Then
                    rsIMPORTPRI!EAN3 = Format(rsIMPORTPRI!EAN3, "0000000000000")
                End If
                
            End If
            
            
            
            
            
            
            
            
            
            
            
            
            
            rsIMPORTPRI!ETIMERK = rsMeister!ETIMERK
            rsIMPORTPRI!MOPREIS = rsMeister!MOPREIS
            
            'standardmäßig auf "N"

            rsIMPORTPRI!NOTIZEN = rsMeister!NOTIZEN
            rsIMPORTPRI!BESTAND = rsMeister!BESTAND
            rsIMPORTPRI!VKMENGE = rsMeister!VKMENGE
            rsIMPORTPRI!VKDATUM = rsMeister!VKDATUM
            rsIMPORTPRI!MINMEN = rsMeister!MINMEN
            rsIMPORTPRI!INHALT = rsMeister!INHALT
            rsIMPORTPRI!INHALTBEZ = Trim(UCase(rsMeister!INHALTBEZ))
            rsIMPORTPRI!GRUNDPREIS = rsMeister!GRUNDPREIS
            rsIMPORTPRI!MINBEST = rsMeister!MINBEST
            rsIMPORTPRI!RABATT_OK = rsMeister!RABATT_OK
            rsIMPORTPRI!GEFUEHRT = rsMeister!GEFUEHRT
            rsIMPORTPRI!KVKPR1 = rsMeister!KVKPR1
            rsIMPORTPRI!ekpr = rsMeister!ekpr
            rsIMPORTPRI!PREISSCHU = rsMeister!PREISSCHU
            rsIMPORTPRI!BONUS_OK = rsMeister!BONUS_OK
            rsIMPORTPRI!UMS_OK = rsMeister!UMS_OK
            rsIMPORTPRI!AWM = rsMeister!AWM
            rsIMPORTPRI!LASTDATE = rsMeister!LASTDATE
            rsIMPORTPRI!LASTTIME = rsMeister!LASTTIME
            rsIMPORTPRI!MNOTIZEN = rsMeister!Status
            rsIMPORTPRI!KVKalt = 0
            rsIMPORTPRI!KVKNEU = rsMeister!vkpr / 100
            
            If Combo1.Text = "Rewe - Format" Then
                rsIMPORTPRI!KVKNEU = rsMeister!vkpr
            ElseIf Combo1.Text = "Bela - Format" Then
                rsIMPORTPRI!KVKNEU = rsMeister!vkpr
            ElseIf Combo1.Text = "KISS - Format" Then
                rsIMPORTPRI!KVKNEU = rsMeister!vkpr
            ElseIf Combo1.Text = "Ringfoto - Format" Then
                rsIMPORTPRI!KVKNEU = rsMeister!vkpr
            ElseIf Combo1.Text = "Edeka Minden - Format" Then
                rsIMPORTPRI!KVKNEU = rsMeister!vkpr
            ElseIf Combo1.Text = "Tchibo - Format" Then
                rsIMPORTPRI!KVKNEU = rsMeister!vkpr
            ElseIf Combo1.Text = "IDEN - Format" Then
                rsIMPORTPRI!KVKNEU = rsMeister!vkpr
            Else
                rsIMPORTPRI!KVKNEU = rsMeister!vkpr / 100
            End If
            
            If Not IsNull(rsMeister!AUFDAT) Then
                rsIMPORTPRI!AUFDAT = DateValue(Right(rsMeister!AUFDAT, 2) & "." & Mid(rsMeister!AUFDAT, 5, 2) & "." & Left(rsMeister!AUFDAT, 4))
            Else
                rsIMPORTPRI!AUFDAT = Null
            End If
            
            If Not IsNull(rsMeister!EXDAT) Then
                rsIMPORTPRI!EXDAT = DateValue(Right(rsMeister!EXDAT, 2) & "." & Mid(rsMeister!EXDAT, 5, 2) & "." & Left(rsMeister!EXDAT, 4))
            Else
                rsIMPORTPRI!EXDAT = Null
            End If
            
            If Combo1.Text = "Pricat - Format" Then
            
                If IsNumeric(rsMeister!LPZ) Then
                    rsIMPORTPRI!LPZ = Val(rsMeister!LPZ)
                End If
                
            ElseIf Combo1.Text = "Tchibo - Format" Then
            

                If Not IsNull(rsIMPORTPRI!AUFDAT) Then
                    
                    sWeek = DatePart("ww", DateValue(rsIMPORTPRI!AUFDAT))
                    iWeek = CInt(sWeek)
                Else
                    iWeek = 99
                End If
                rsIMPORTPRI!LPZ = iWeek

                
            ElseIf Combo1.Text = "Neuform - Format" Then
                rsIMPORTPRI!LPZ = rsMeister!LPZ
            ElseIf Combo1.Text = "Devil - Format" Then
                rsIMPORTPRI!LPZ = rsMeister!LPZ
            Else
                rsIMPORTPRI!LPZ = rsMeister!LPZ
            End If
            
            rsIMPORTPRI!FARBNR = rsMeister!FARBNR
            rsIMPORTPRI!MARKE = rsMeister!MARKE
            rsIMPORTPRI!GROESSE = rsMeister!GROESSE
            rsIMPORTPRI!SPANNE = rsMeister!SPANNE
            rsIMPORTPRI!AUFSCHLAG = rsMeister!AUFSCHLAG
            rsIMPORTPRI!SYNStatus = rsMeister!SYNStatus
           
           rsIMPORTPRI.Update
        rsMeister.MoveNext
        Loop
    End If
    rsMeister.Close
    rsIMPORTPRI.Close
    
    If Combo1.Text = "Devil - Format" Then
    
    Else
    
        sSQL = "Delete from IMPORTPRI where EAN is null "
        gdApp.Execute sSQL, dbFailOnError
        
    End If
    
    'hier setzen
    pbrStatus.Max = 200
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "feldcheckMeister"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
'    Resume Next
End Sub

Private Sub PricatStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "PricatStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub TextilStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "TextilStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub IDENStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "IDENStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub NeuformStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Tabdelimited", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "NeuformStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub

Private Sub DevilStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DEVILStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub TchiboStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "TchiboStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub BollwegStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "BollwegStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub PassportStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "PassportStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub GerryStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "GerryStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub BossStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "BossStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub VEDEStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "VEDEStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub KISSStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "KISSStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub HOFFStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
'    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\3.5\Engines\Text"
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
    'Mstext35.dll check
    
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "HOFFStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub

Private Sub FriseurStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
   
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "FriseurStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub REWEStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
   
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "REWEStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub SIEStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
   
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "SIEStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub EDEKStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
   
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "EDEKStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub BELAStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
   
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "BELAStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ESUStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
   
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ESUStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub ZeitStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
   
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(tab)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ZeitStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub TUBEStep2()
    On Error GoTo LOKAL_ERROR
    
    Dim sSchluesselpfad As String
    
    sSchluesselpfad = "SOFTWARE\Microsoft\Jet\4.0\Engines\Text"
   
    mstext35check
   
    'Registry Einträge
    SetzeSchluesselnew sSchluesselpfad, "DisabledExtensions", "", REG_SZ
    '    1.Format
    SetzeSchluesselnew sSchluesselpfad, "Format", "Delimited(;)", REG_SZ
    '    3. ANSI
    SetzeSchluesselnew sSchluesselpfad, "CharacterSet", "ANSI", REG_SZ
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "TUBEStep2"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
'Private Sub anzeige(SFarbe As String, satext As String)
'    On Error GoTo LOKAL_ERROR
'
'    If UCase(SFarbe) = "ROT" Then
'        Label3.ForeColor = vbRed
'    Else
'        Label3.ForeColor = glS1
'    End If
'    Label3.Caption = satext
'    Label3.Refresh
'
'    Exit Sub
'LOKAL_ERROR:
'    Fehler.gsDescr = err.Description
'    Fehler.gsNumber = err.Number
'    Fehler.gsFormular = Me.name
'    Fehler.gsFunktion = "anzeige"
'    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
'
'    Fehlermeldung1
'End Sub
Private Sub Combo1_GotFocus()
On Error GoTo LOKAL_ERROR
'    Combo1.BackColor = glSelBack1
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Combo1_GotFocus"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub

Private Sub Combo1_LostFocus()
On Error GoTo LOKAL_ERROR
'    Combo1.BackColor = vbWhite
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Combo1_LostFocus"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Combo2_KeyUp(KeyCode As Integer, Shift As Integer)
On Error GoTo LOKAL_ERROR


    
        If KeyCode = vbKeyF2 Then
            If UCase(Combo2.Text) = "LINR" Then
                gF2Prompt.cFeld = ""
                gF2Prompt.cWert = ""
                gF2Prompt.cWert2 = ""
                gF2Prompt.cWahl = ""
                gF2Prompt.bMultiple = False
                
                gF2Prompt.cFeld = "LINR"
                
                If gF2Prompt.cFeld <> "" Then
                    frmWK00a.Show 1
                End If
                
                If gF2Prompt.cWahl <> "" Then
                    Text4.Text = gF2Prompt.cWahl
                End If
                Text4.SetFocus
            End If
        End If


Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Combo2_KeyUp"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Form_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
On Error GoTo LOKAL_ERROR

    Label1(0).ForeColor = glS1
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Form_MouseMove"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub



Private Sub fraAktuell_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
On Error GoTo LOKAL_ERROR

    Label1(2).ForeColor = glS1
    Label1(3).ForeColor = glS1
    Label1(4).ForeColor = glS1
    Label1(5).ForeColor = glS1
    Label1(6).ForeColor = glS1
    Label1(7).ForeColor = glS1
    Label1(8).ForeColor = glS1
    Label1(9).ForeColor = glS1
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "fraAktuell_MouseMove"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub

Private Sub Label1_Click(Index As Integer)
On Error GoTo LOKAL_ERROR

If Index = 0 Then
    URLGoTo Me.hwnd, "http://www.kisslive.de/winkiss/hilfe-bei-problemen/44-software-probleme-winkiss/227-stammdaten-aktualisieren.html"
ElseIf Index = 2 Then
    URLGoTo Me.hwnd, "http://www.kisslive.de/sortimente/drogeriewaren.html"
ElseIf Index = 3 Then
    URLGoTo Me.hwnd, "http://www.kisslive.de/sortimente/reformwaren.html"
ElseIf Index = 4 Then
    URLGoTo Me.hwnd, "http://www.kisslive.de/sortimente/spielwaren.html"
ElseIf Index = 5 Then
    URLGoTo Me.hwnd, "http://www.kisslive.de/sortimente/schreibwaren.html"
ElseIf Index = 6 Then
    URLGoTo Me.hwnd, "http://www.kisslive.de/sortimente/geschenkartikelsouvenirs.html"
ElseIf Index = 7 Then
    URLGoTo Me.hwnd, "http://www.kisslive.de/sortimente/textilien.html"
ElseIf Index = 8 Then
    URLGoTo Me.hwnd, "http://www.kisslive.de/sortimente/foto-a-zubehoer.html"
ElseIf Index = 9 Then
    URLGoTo Me.hwnd, "http://www.kisslive.de/sortimente/accessiores.html"
End If

Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Label1_Click"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Label1_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
On Error GoTo LOKAL_ERROR

    If Index = 0 Then
        Label1(0).ForeColor = glLink
    End If
    
    If Index = 2 Then
        Label1(2).ForeColor = glLink
    End If
    
    If Index = 3 Then
        Label1(3).ForeColor = glLink
    End If
    
    If Index = 4 Then
        Label1(4).ForeColor = glLink
    End If
    
    If Index = 5 Then
        Label1(5).ForeColor = glLink
    End If
    
    If Index = 6 Then
        Label1(6).ForeColor = glLink
    End If
    
    If Index = 7 Then
        Label1(7).ForeColor = glLink
    End If
    
    If Index = 8 Then
        Label1(8).ForeColor = glLink
    End If
    
    If Index = 9 Then
        Label1(9).ForeColor = glLink
    End If
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Label1_MouseMove"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub

Private Sub Text3_LostFocus(Index As Integer)
On Error GoTo LOKAL_ERROR

    Text3(Index).BackColor = vbWhite
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Text3_LostFocus"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Text3_GotFocus(Index As Integer)
    On Error GoTo LOKAL_ERROR

    Text3(Index).BackColor = glSelBack1
    Text3(Index).SelStart = 0
    Text3(Index).SelLength = Len(Text3(Index).Text)
   
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Text3_GotFocus"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Text3_KeyPress(KeyAscii As Integer, Index As Integer)
    On Error GoTo LOKAL_ERROR
    
    Dim cZeichen As String
    Dim cValid As String
    cZeichen = Chr$(KeyAscii)
    KeyAscii = Asc(cZeichen)
    
    Select Case Index
    
        Case 0
            cValid = "1234567890" & Chr$(8)
            If InStr(cValid, cZeichen) = 0 Then
                KeyAscii = 0
            End If
    End Select

Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Text3_KeyPress"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Text3_KeyUp(KeyCode As Integer, Shift As Integer, Index As Integer)
On Error GoTo LOKAL_ERROR

Select Case Index
    Case 0
        If KeyCode = vbKeyF2 Then
            gF2Prompt.cFeld = ""
            gF2Prompt.cWert = ""
            gF2Prompt.cWert2 = ""
            gF2Prompt.cWahl = ""
            gF2Prompt.bMultiple = False
            
            gF2Prompt.cFeld = "LINR"
            
            If gF2Prompt.cFeld <> "" Then
                frmWK00a.Show 1
            End If
            
            If gF2Prompt.cWahl <> "" Then
                Text3(0).Text = gF2Prompt.cWahl
            End If
            Text3(0).SetFocus
            Command1_Click 24
        
        End If
End Select

Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Text3_KeyUp"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Command1_Click(Index As Integer)
    On Error GoTo LOKAL_ERROR
    
    Dim i           As Integer
    Dim j           As Integer
    Dim sSQL        As String
    Dim sPfad       As String
    Dim lcount      As Long
    Dim sBildPfad   As String
    Dim cArtNr      As String
    Dim cLiBesNr    As String
    Dim cBezeich    As String
    
    Select Case Index
    
        Case Is = 32
        
            loeschNEW "ARTIKEL_EXP", gdBase
            
            sSQL = "Create Table  ARTIKEL_EXP ( "
            sSQL = sSQL & " BEZEICH TEXT(35) "
            sSQL = sSQL & ", EK SINGLE "
            sSQL = sSQL & ", VK SINGLE "
            sSQL = sSQL & ", EAN Text(13)"
            sSQL = sSQL & ", MWST Text(1)"
            sSQL = sSQL & ", Bestellnr Text(13)"
            sSQL = sSQL & ", VPE INTEGER"
            sSQL = sSQL & " ) "
            gdBase.Execute sSQL, dbFailOnError
            
            sSQL = "Insert into ARTIKEL_EXP Select "
            sSQL = sSQL & " BEZEICH "
            sSQL = sSQL & ", lekpr as EK  "
            sSQL = sSQL & ", vkpr as VK  "
            sSQL = sSQL & ", EAN "
            sSQL = sSQL & ", MWST "
            sSQL = sSQL & ", libesnr as Bestellnr "
            sSQL = sSQL & ", minmen as VPE "
            sSQL = sSQL & " from IMPORTPRI "
            gdBase.Execute sSQL, dbFailOnError
            
            ExcelExport "ARTIKEL_EXP", gdBase
        Case Is = 31
        
            Screen.MousePointer = 11
            anzeige "normal", "0", Label2(39)
            
            sPfad = Label2(37).Caption
            
            PRIFlex.Redraw = False
    
            PRIFlex.Row = 0
            For i = 1 To PRIFlex.Rows - 1
            
                PRIFlex.Row = i
                
                PRIFlex.Col = SpaltennummerArtnr
                cArtNr = PRIFlex.Text
                
                PRIFlex.Col = SpaltennummerLIBESNR
                cLiBesNr = Trim(PRIFlex.Text)
                
                PRIFlex.Col = SpaltennummerBEZEICH
                cBezeich = Trim(PRIFlex.Text)

                Dim sLibesnrNum As String
                sLibesnrNum = ""
                
                
                
                'Punkt ran
                cLiBesNr = cLiBesNr & "."
                
                If cLiBesNr <> "" Then
                
                    If IsNumeric(cLiBesNr) = False Then
                
                        For j = 1 To Len(cLiBesNr)
                            If IsNumeric(Mid(cLiBesNr, j, 1)) = True Then
                                sLibesnrNum = sLibesnrNum & Mid(cLiBesNr, j, 1)
                            Else
                                'endet auf jeden Fall mit einem Punkt also nicht numerisch
                                
                                If Len(sLibesnrNum) > 0 Then
                                    cLiBesNr = CStr(Val(sLibesnrNum))
                                Else
                                    sLibesnrNum = ""
                                End If
                                
                            End If
                        Next j
                    Else
                        cLiBesNr = CStr(Val(cLiBesNr))
                    End If
                End If
                
                Dim sBezeichNum As String
                sBezeichNum = ""
                
                'Punkt ran
                cBezeich = cBezeich & "."
                
                If cBezeich <> "" Then
                
                    If IsNumeric(cBezeich) = False Then
                
                        For j = 1 To Len(cBezeich)
                            If IsNumeric(Mid(cBezeich, j, 1)) = True Then
                                sBezeichNum = sBezeichNum & Mid(cBezeich, j, 1)
                            Else
                                'endet auf jeden Fall mit einem Punkt also nicht numerisch
                                
                                If Len(sBezeichNum) > 0 Then
                                    cBezeich = CStr(Val(sBezeichNum))
                                Else
                                    sBezeichNum = ""
                                End If
                                
                            End If
                        Next j
                    Else
                        cBezeich = CStr(Val(cBezeich))
                    End If
                End If
                
'                If cArtNr = "613473" Then
'                    MsgBox "yaeh"
'                End If
                
                If Bildspeichern2(cArtNr, sPfad, cLiBesNr, cBezeich, File3) Then
                    anzeige "normal", CInt(Label2(39).Caption) + 1, Label2(39)
                End If
            Next i
            
            Screen.MousePointer = 0
            
            PRIFlex.Redraw = True
            
            anzeige "normal", Label2(39).Caption & " Bilder zugordnet, Fertig!", Label2(39)
        
        Case Is = 30
            'Wo sind die Bilddateien
            With cdlopen
                .CancelError = True
                On Error GoTo err
                .DialogTitle = "Wo sind die Bilder?"
                
                .Filter = "JPEG (*.JPG)| *.JPG|GIF (*.GIF)| *.GIF|PNG (*.PNG)| *.PNG| Bitmapdateien (*.bmp)|*.bmp"
                
                .ShowSave
                
                sPfad = Left(cdlopen.FileName, Len(cdlopen.FileName) - (Len(cdlopen.FileTitle) + 1))
                If Right(sPfad, 1) <> "\" Then
                    sPfad = sPfad & "\"
                End If
                Label2(37).Caption = sPfad
                
               
                        
                
                File3.Path = sPfad
                File3.Pattern = "*.jpg"
                File3.Refresh
                
                If File3.ListCount = 1 Then
                    Label2(38).Caption = File3.ListCount & " Bild im Verzeichnis"
                Else
                    Label2(38).Caption = File3.ListCount & " Bilder im Verzeichnis"
                End If
            End With
            
        Case Is = 28
            'Wo sind die Bilddateien
            Frame6.Visible = True
            Frame6.BackColor = glH2
            
            
            Label2(37).Caption = gcBilderPfad

            File3.Path = gcBilderPfad
            File3.Pattern = "*.jpg"
            File3.Refresh

            If File3.ListCount = 1 Then
                Label2(38).Caption = File3.ListCount & " Bild im Verzeichnis"
            Else
                Label2(38).Caption = File3.ListCount & " Bilder im Verzeichnis"
            End If
        Case Is = 29
            'Wo sind die Bilddateien
            Frame6.Visible = False
            
        Case Is = 0  'Schließen
            Unload frmWKL09
        Case Is = 1  'Zurück aus Pricat1
            fraAktuell.Visible = True
            Frame1.Visible = False
            urzustand
        Case Is = 2  'Zurück
            Frame1.Visible = True
            Frame2.Visible = False
            Zubeh_anzeigen False
            urzustand1
            
        Case Is = 3
            gsZSpalte = "EAN"
            gstab = "STADAPRIB"
            frmWKL36.Show 1
            'fertig
        Case Is = 4 'zurück aus Einstellungen
            fraAktuell.Visible = True
            Frame3.Visible = False
            urzustand
        Case Is = 5 'Übernehmen der Stammdaten
        
            If Combo1.Text = "Pricat - Format" Then
                lastvoreinstellungspeichern "pricate", frmWKL09, 9
            ElseIf Combo1.Text = "Passport - Format" Then
                lastvoreinstellungspeichern "passporte", frmWKL09, 9
            ElseIf Combo1.Text = "Gerry - Format" Then
                lastvoreinstellungspeichern "GERRYe", frmWKL09, 9
            ElseIf Combo1.Text = "BOSS - Format" Then
                lastvoreinstellungspeichern "BOSSe", frmWKL09, 9
            ElseIf Combo1.Text = "Tchibo - Format" Then
                lastvoreinstellungspeichern "tchiboe", frmWKL09, 9
                Termpreise
            ElseIf Combo1.Text = "Neuform - Format" Then
                lastvoreinstellungspeichern "Neuforme", frmWKL09, 9
            ElseIf Combo1.Text = "Devil - Format" Then
                lastvoreinstellungspeichern "Devile", frmWKL09, 9
            ElseIf Combo1.Text = "Bela - Format" Then
                lastvoreinstellungspeichern "BELAe", frmWKL09, 9
                
                If Check1(11).Value = vbChecked Then
                
                    sSQL = "Update Artlief set RKZ = 'J'"
                    sSQL = sSQL & ", EXDAT = '" & DateValue(Now) & "' "
                    sSQL = sSQL & " where LINR = " & checkBELAinLISRT()
                    sSQL = sSQL & " and RKZ = 'N' "
                    gdBase.Execute sSQL, dbFailOnError
                
                End If
                
                
                
            ElseIf Combo1.Text = "Lüning - Format" Then
                lastvoreinstellungspeichern "LUEE", frmWKL09, 9
            ElseIf Combo1.Text = "Edeka Minden - Format" Then
                lastvoreinstellungspeichern "EDEKe", frmWKL09, 9
            ElseIf Combo1.Text = "Rewe - Format" Then
                lastvoreinstellungspeichern "REWEe", frmWKL09, 9
                
                If Check1(11).Value = vbChecked Then
                    sSQL = "Update Artlief set RKZ = 'J'"
                    sSQL = sSQL & ", EXDAT = '" & DateValue(Now) & "' "
                    sSQL = sSQL & " where LINR = 400001 "
                    gdBase.Execute sSQL, dbFailOnError
                    
                End If
                
                If Checkbox5.Value = vbUnchecked Then
                    sSQL = "Delete from Artikel where bestand <= 0 and linr = 400001"
                    gdBase.Execute sSQL, dbFailOnError
                End If

            ElseIf Combo1.Text = "Für Sie - Format" Then
                lastvoreinstellungspeichern "SIEe", frmWKL09, 9
                
                If Check1(11).Value = vbChecked Then
                    sSQL = "Update Artlief set RKZ = 'J'"
                    sSQL = sSQL & ", EXDAT = '" & DateValue(Now) & "' "
                    sSQL = sSQL & " where LINR = 400001 "
                    gdBase.Execute sSQL, dbFailOnError
                    
                End If
                
                If Checkbox5.Value = vbUnchecked Then
                    sSQL = "Delete from Artikel where bestand <= 0 and linr = 400001"
                    gdBase.Execute sSQL, dbFailOnError
                End If
            
            ElseIf Combo1.Text = "Friseur - Format" Then
                lastvoreinstellungspeichern "Friseure", frmWKL09, 9
                
            ElseIf Combo1.Text = "Bollweg - Format" Then
                lastvoreinstellungspeichern "BOLLWEGe", frmWKL09, 9
            ElseIf Combo1.Text = "Hoffmann - Format" Then
                lastvoreinstellungspeichern "HOFFMANNe", frmWKL09, 9
            ElseIf Combo1.Text = "Vedes - Format" Then
                lastvoreinstellungspeichern "VEDESe", frmWKL09, 9
            ElseIf Combo1.Text = "Textil - Format" Then
                lastvoreinstellungspeichern "TEXTILe", frmWKL09, 9
            ElseIf Combo1.Text = "KISS - Format" Then
            
                If Check1(11).Value = vbChecked Then
                
                    sSQL = "Update Artlief set RKZ = 'J'"
                    sSQL = sSQL & ", EXDAT = '" & DateValue(Now) & "' "
                    sSQL = sSQL & " where LINR = " & ermlinrfromImportPri
                    gdBase.Execute sSQL, dbFailOnError
                
                End If
            
                lastvoreinstellungspeichern "KISSe", frmWKL09, 9
            ElseIf Combo1.Text = "Zeitungs - Format" Then
                lastvoreinstellungspeichern "ZEITE", frmWKL09, 9
            ElseIf Combo1.Text = "TU Barkow - Format" Then
            
                If Check1(11).Value = vbChecked Then
                
                    sSQL = "Update Artlief set RKZ = 'J'"
                    sSQL = sSQL & ", EXDAT = '" & DateValue(Now) & "' "
                    sSQL = sSQL & " where LINR = " & checkTUBEinLISRT()
                    gdBase.Execute sSQL, dbFailOnError
                    
                End If
            
                lastvoreinstellungspeichern "TUBE", frmWKL09, 9
                Tabakverarbeitung
            ElseIf Combo1.Text = "Esüdro - Format" Then
                lastvoreinstellungspeichern "ESUE", frmWKL09, 9
            ElseIf Combo1.Text = "Ringfoto - Format" Then
                lastvoreinstellungspeichern "RINGE", frmWKL09, 9
                'Staffelpreisverarbeitung
                Staffelpreisverarbeitung checkRINGinLISRT
                '2. und 3. EAN Verarbeitung
                
            End If
            
            PricatStep5
            PRIFlex.Visible = False
            pbrStatus.Visible = False
            
            Zubeh_anzeigen False
            
            Command1_Click 2
            anzeige "normal", "Artikelübernahme erfolgreich beendet. Protokolle nicht vergessen!", Label3
        
        Case Is = 6, 8 'Protoanzeigen
            If Index = 8 Then Label38(3).Caption = "2": Label38(3).Refresh
            If Index = 6 Then Label38(3).Caption = "1": Label38(3).Refresh
            fraAktuell.Visible = False
            Frame7.Visible = True
            anzeige "normal", "Bitte wählen Sie ein Protokoll!", Label3
            
        Case Is = 7 'zurück aus proto
            
            Frame7.Visible = False
            fraAktuell.Visible = True
            urzustand
            
        Case Is = 9  'Zurück aus procter
            Frame4.Visible = False
            urzustand
            
        Case Is = 10  'Zurück aus Pricat1
            
            Proctervera
            
        Case Is = 11
        
            Procteranz
            
        Case 12
'            Masterbau
        Case 13
            Screen.MousePointer = 0
            Text1_KeyUp 6, vbKeyF2, 0
        Case 14
            Screen.MousePointer = 0
            Text1_KeyUp 7, vbKeyF2, 0
        Case 15
            Screen.MousePointer = 0
            Text1_KeyUp 5, vbKeyF2, 0
        Case 16
            Screen.MousePointer = 0
            Text1_KeyUp 4, vbKeyF2, 0
        Case 17
            Screen.MousePointer = 0
            Text1_KeyUp 3, vbKeyF2, 0
        Case 18
            Screen.MousePointer = 0
            Text1_KeyUp 2, vbKeyF2, 0
        Case 19
            Screen.MousePointer = 0
            Text1_KeyUp 8, vbKeyF2, 0
        Case 20
            Screen.MousePointer = 0
            Text1_KeyUp 9, vbKeyF2, 0
        Case 21
            Screen.MousePointer = 0
            Text1_KeyUp 10, vbKeyF2, 0
        Case 22
            Screen.MousePointer = 0
            Text1_KeyUp 11, vbKeyF2, 0
        Case 23
            Screen.MousePointer = 0
            Text1_KeyUp 12, vbKeyF2, 0
            
        Case 24 'per FTP abholen
            If Text3(0).Text <> "" Then
                If IsNumeric(Text3(0).Text) Then
                    If Val(Text3(0).Text) > 0 Then
                        glLiNr = Val(Text3(0).Text)
                        
                        'alte Lieferantendaten löschen!
                        Kill Label2(1).Caption & "\" & "M" & glLiNr & "!.111"
                        
                        giKissFtpMode = 17
                        frmWKL38.Show 1
                        
                        Dim sQuelle As String
                        Dim sZiel As String
                        Dim lfail As Long
                        Dim lRet As Long
                        
    
                        sPfad = gcDBPfad
                        If Right(sPfad, 1) <> "\" Then
                            sPfad = sPfad & "\"
                        End If
                        
                        sPfad = sPfad & "IN"
                        
                        sQuelle = sPfad & "\" & "M" & glLiNr & "!.111"
                        sZiel = Label2(1).Caption & "\" & "M" & glLiNr & "!.111"
                        lRet = CopyFile(sQuelle, sZiel, lfail)
                    End If
                End If
            End If
            
            filefreshKISS
            zeigeanzahl File1
            
            Text3(0).Text = ""
        Case 25
            Screen.MousePointer = 0
            Text3_KeyUp vbKeyF2, 0, 0
        Case 26
        
            If PRIFlex.RowSel > 1 Then

                FlexGrid_Update PRIFlex
                
                PRIFlex.Row = 1
                PRIFlex.SetFocus
            Else
                aender_Feld_x Combo2.Text, Text4.Text
            End If
        
        
'            aender_Feld_x Combo2.Text, Text4.Text
        Case 27
            RechneLEK
    End Select
        
err:

    Exit Sub
LOKAL_ERROR:
    If err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "Command1_Click"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub FlexGrid_Update(oGrid As MSHFlexGrid)
On Error GoTo LOKAL_ERROR

    Dim nRow As Long
    Dim nCol As Long
    Dim nRowSel As Long
    Dim nColSel As Long
    Dim nDelRow As Long
    Dim lBig As Long
    
'    Dim cArtNr As String
    Dim cWert As String
    cWert = Text4.Text
    
    With oGrid
        ' aktuelle Selektion merken
      
        nRow = .Row
        nCol = .Col
        nRowSel = .RowSel
        nColSel = .ColSel
      
      
        If nRow > nRowSel Then
            lBig = nRow
            nDelRow = nRowSel - 1
        Else
            lBig = nRowSel
            nDelRow = nRow - 1
        End If
      
        Do While nDelRow < lBig
        
            nDelRow = nDelRow + 1
            
            If nDelRow > 1 Then
            
'                cArtNr = Trim(.TextMatrix(nDelRow, SpaltennummerArtnr))
'                If UpdateArtikelWKL10(cArtNr, nCol, cWert) = True Then
                
                    .TextMatrix(nDelRow, nCol) = cWert
'                End If

            End If
        Loop

  
  End With
  

Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "FlexGrid_Update"
    Fehler.gsFehlertext = "Im Programmteil Artikel bearbeiten ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Zubeh_anzeigen(bAnzeigen As Boolean)
On Error GoTo LOKAL_ERROR

    Dim i As Integer
    
    For i = 0 To 11
        Check1(i).Visible = bAnzeigen
    Next i
    
    Command1(32).Visible = bAnzeigen
    Command1(26).Visible = bAnzeigen
    Command1(27).Visible = bAnzeigen
    Command1(28).Visible = bAnzeigen
    Label2(33).Visible = bAnzeigen
    Label2(34).Visible = bAnzeigen
    Text5.Visible = bAnzeigen
    Text4.Visible = bAnzeigen
    Combo2.Visible = bAnzeigen
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Zubeh_anzeigen"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub

Private Sub RechneLEK()
    On Error GoTo LOKAL_ERROR

    Dim i               As Integer
    Dim dLEKPR          As Double
    Dim dAufschlag      As Double
    Dim cArtNr          As String
   
    PRIFlex.Redraw = False
    
    If IsNumeric(Text5.Text) = True Then
        dAufschlag = CDbl(Text5.Text) * -1
        
        PRIFlex.Row = 0
        For i = 1 To PRIFlex.Rows - 1
        
            PRIFlex.Row = i
            PRIFlex.Col = SpaltennummerArtnr
            cArtNr = PRIFlex.Text
                        
            PRIFlex.Row = i
            PRIFlex.Col = SpaltennummerLEKPR
            If Not Len(PRIFlex.Text) = 0 Then
                If IsNumeric(PRIFlex.Text) Then
                    dLEKPR = CDbl(PRIFlex.Text)
                
                    If dLEKPR <> 0 Then
                        dLEKPR = dLEKPR + ((dLEKPR * dAufschlag) / 100)
                        PRIFlex.Text = Format(dLEKPR, "###,##0.00")
                    End If
                End If
            End If
        Next i
    End If
         
    PRIFlex.Redraw = True

    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "RechneLEK"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen ist ein Fehler aufgetreten."

    Fehlermeldung1
End Sub
Private Sub aender_Feld_x(sFeld As String, sInhalt As String)
    On Error GoTo LOKAL_ERROR

    Dim i               As Integer
    Dim dKVKN           As Double
    
    PRIFlex.Redraw = False
    Select Case UCase(sFeld)
    
        Case "RABATTFÄHIG"
            PRIFlex.Row = 0
            For i = 1 To PRIFlex.Rows - 1
                PRIFlex.Row = i
                PRIFlex.Col = SpaltennummerRABATT_OK
                PRIFlex.Text = sInhalt
            Next i
            PRIFlex.Refresh
        Case "LINR"
            PRIFlex.Row = 0
            For i = 1 To PRIFlex.Rows - 1
                PRIFlex.Row = i
                PRIFlex.Col = SpaltennummerLINR
                PRIFlex.Text = sInhalt
            Next i
            PRIFlex.Refresh
        Case "LINIE"
            PRIFlex.Row = 0
            For i = 1 To PRIFlex.Rows - 1
                PRIFlex.Row = i
                PRIFlex.Col = SpaltennummerLPZ
                PRIFlex.Text = sInhalt
            Next i
            PRIFlex.Refresh
        Case "AGN"
            PRIFlex.Row = 0
            For i = 1 To PRIFlex.Rows - 1
                PRIFlex.Row = i
                PRIFlex.Col = SpaltennummerAGN
                PRIFlex.Text = sInhalt
            Next i
            PRIFlex.Refresh
        Case "LIBESNR6STELL"
            PRIFlex.Row = 0
            For i = 1 To PRIFlex.Rows - 1
                PRIFlex.Row = i
                PRIFlex.Col = SpaltennummerLIBESNR
                
                PRIFlex.Text = Format(PRIFlex.Text, "000000")
            Next i
            PRIFlex.Refresh
        Case "LIBESNR5STELL"
            PRIFlex.Row = 0
            For i = 1 To PRIFlex.Rows - 1
                PRIFlex.Row = i
                PRIFlex.Col = SpaltennummerLIBESNR
                
                PRIFlex.Text = Format(PRIFlex.Text, "00000")
            Next i
            PRIFlex.Refresh
        Case "LIBESNR4STELL"
            PRIFlex.Row = 0
            For i = 1 To PRIFlex.Rows - 1
                PRIFlex.Row = i
                PRIFlex.Col = SpaltennummerLIBESNR
                
                PRIFlex.Text = Format(PRIFlex.Text, "0000")
            Next i
            PRIFlex.Refresh
        Case "KÜRZEL + BEZEICHNUNG"
            PRIFlex.Row = 0
            For i = 1 To PRIFlex.Rows - 1
                PRIFlex.Row = i
                PRIFlex.Col = SpaltennummerBEZEICH
                PRIFlex.Text = sInhalt & " " & PRIFlex.Text
            Next i
            PRIFlex.Refresh
    End Select
    PRIFlex.Redraw = True
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "aender_Feld_x"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen ist ein Fehler aufgetreten."

    Fehlermeldung1
End Sub

Private Sub Termpreise()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim rsPreisTerm     As Recordset
    Dim lartnr          As Long
    Dim dKVkPr1Alt      As Double
    Dim dKVkPr1Neu      As Double
    Dim lDatVon         As Long
    Dim lDatBis         As Long
    
    sSQL = "select * from importpri where Etimerk = 'J'"
    Set rsrs = gdBase.OpenRecordset(sSQL)
    
    If Not rsrs.EOF Then
        rsrs.MoveFirst
        Do While Not rsrs.EOF
        
            If Not IsNull(rsrs!artnr) Then
                lartnr = rsrs!artnr
            Else
                lartnr = 0
            End If
            
            If Not IsNull(rsrs!KVKalt) Then
                dKVkPr1Alt = CDbl(rsrs!KVKalt)
            Else
                dKVkPr1Alt = 0
            End If
            
            If Not IsNull(rsrs!KVKNEU) Then
                dKVkPr1Neu = CDbl(rsrs!KVKNEU)
            Else
                dKVkPr1Neu = 0
            End If
            
            If dKVkPr1Alt = 0 Then
                dKVkPr1Alt = dKVkPr1Neu
            End If
            
            If Not IsNull(rsrs!AUFDAT) Then
                lDatVon = DateValue(CStr(rsrs!AUFDAT))
            Else
                lDatVon = 0
            End If
            
            If Not IsNull(rsrs!EXDAT) Then
                lDatBis = DateValue(CStr(rsrs!EXDAT))
            Else
                lDatBis = 0
            End If
            
            sSQL = "Delete from PRSTERM where ARTNR = " & lartnr
            sSQL = sSQL & " and DAT_VON = " & lDatVon
            gdBase.Execute sSQL, dbFailOnError
            
            sSQL = "Delete from PRSTERM where ARTNR = " & lartnr
            sSQL = sSQL & " and DAT_BIS = " & lDatBis
            gdBase.Execute sSQL, dbFailOnError
            
            sSQL = "Select * from PRSTERM where ARTNR = -1"
            Set rsPreisTerm = gdBase.OpenRecordset(sSQL)
            
            
            rsPreisTerm.AddNew
            rsPreisTerm!artnr = lartnr
            rsPreisTerm!KVKPR1ALT = dKVkPr1Alt
            rsPreisTerm!KVKPR1NEU = dKVkPr1Neu
            rsPreisTerm!DAT_VON = lDatVon
            rsPreisTerm!DAT_BIS = lDatBis
            rsPreisTerm!Status = 0
            rsPreisTerm.Update
            rsPreisTerm.Close
            
            rsrs.Edit
            rsrs!KVKNEU = CStr(dKVkPr1Alt)
            rsrs!vkpr = CStr(dKVkPr1Alt)
            rsrs!KVKPR1 = CStr(dKVkPr1Alt)
            rsrs.Update
            
            rsrs.MoveNext
        Loop
    End If
    
    rsrs.Close: Set rsrs = Nothing
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Termpreise"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
    
End Sub
Private Sub Command2_Click(Index As Integer)
    On Error GoTo LOKAL_ERROR
    
    Dim sPfadDat As String
    
    
    Select Case Index
        Case Is = 0, 3 'Pfad
            If Combo1.Text = "Pricat - Format" Then
                pfadseek
            ElseIf Combo1.Text = "Tchibo - Format" Then
                pfadseekTch
            ElseIf Combo1.Text = "Neuform - Format" Then
                pfadseekNeu
            ElseIf Combo1.Text = "Devil - Format" Then
                pfadseekDEV
            ElseIf Combo1.Text = "Bollweg - Format" Then
                pfadseekBOLL
            ElseIf Combo1.Text = "Hoffmann - Format" Then
                pfadseekHOFF
            ElseIf Combo1.Text = "Vedes - Format" Then
                pfadseekVEDE
            ElseIf Combo1.Text = "Textil - Format" Then
                pfadseekTextil
            ElseIf Combo1.Text = "IDEN - Format" Then
                pfadseekIDEN
            ElseIf Combo1.Text = "KISS - Format" Then
                pfadseekKISS
            ElseIf Combo1.Text = "Friseur - Format" Then
                pfadseekfriseur
            ElseIf Combo1.Text = "Edeka Minden - Format" Then
                pfadseekEDEK
            ElseIf Combo1.Text = "Bela - Format" Then
                pfadseekBELA
            ElseIf Combo1.Text = "Lüning - Format" Then
                pfadseekLüning
            ElseIf Combo1.Text = "Für Sie - Format" Then
                pfadseekSIE
            ElseIf Combo1.Text = "Zeitungs - Format" Then
                pfadseekZEIT
            ElseIf Combo1.Text = "TU Barkow - Format" Then
                pfadseekTUBE
            ElseIf Combo1.Text = "Esüdro - Format" Then
                pfadseekESUE
            ElseIf Combo1.Text = "Ringfoto - Format" Then
                pfadseekRING
            ElseIf Combo1.Text = "Passport - Format" Then
                pfadseekPass
            ElseIf Combo1.Text = "Gerry - Format" Then
                pfadseekGerry
            ElseIf Combo1.Text = "BOSS - Format" Then
                pfadseekBOSS
            End If
        
        Case Is = 1 'Einlesen
            Command1(5).Enabled = True
            If Combo1.Text = "Pricat - Format" Then
                sPfadDat = Datmark
                If sPfadDat <> "" Then
                    einlesen sPfadDat
                    filefresh
                End If
            ElseIf Combo1.Text = "Passport - Format" Then
                sPfadDat = DatmarkUni("PASSPORT", sPassPfad)
                If sPfadDat <> "" Then
                    einlesenPass sPfadDat
                    filefreshPass
                End If
            ElseIf Combo1.Text = "Gerry - Format" Then
                sPfadDat = DatmarkUni("GERRY", sGerryPfad)
                If sPfadDat <> "" Then
                    einlesenGerry sPfadDat
                    filefreshGerry
                End If
            ElseIf Combo1.Text = "BOSS - Format" Then
                sPfadDat = DatmarkUni("BOSS", sBossPfad)
                If sPfadDat <> "" Then
                    einlesenBOSS sPfadDat
                    filefreshBoss
                End If
            ElseIf Combo1.Text = "Tchibo - Format" Then
                sPfadDat = DatmarkTch
                If sPfadDat <> "" Then
                    einlesenTCH sPfadDat
                    filefreshTch
                End If
            ElseIf Combo1.Text = "Neuform - Format" Then
                sPfadDat = DatmarkNEU
                If sPfadDat <> "" Then
                    einlesenNEU sPfadDat
                    filefreshNEU
                End If
            ElseIf Combo1.Text = "IDEN - Format" Then
                sPfadDat = DatmarkIDEN
                If sPfadDat <> "" Then
                    einlesenIDEN sPfadDat
                    filefreshIDEN
                End If
            ElseIf Combo1.Text = "Bollweg - Format" Then
            
                sPfadDat = DatmarkBOLL
                If sPfadDat <> "" Then
                    einlesenBOLL sPfadDat
                    filefreshBOLL
                End If
            ElseIf Combo1.Text = "Hoffmann - Format" Then
            
                sPfadDat = DatmarkHoff
                If sPfadDat <> "" Then
                    einlesenHOFF sPfadDat
                    filefreshHOFF
                End If
            ElseIf Combo1.Text = "Vedes - Format" Then
            
                sPfadDat = DatmarkVEDE
                If sPfadDat <> "" Then
                    einlesenVEDE sPfadDat
                    filefreshVEDE
                End If
            ElseIf Combo1.Text = "Textil - Format" Then
            
                sPfadDat = DatmarkTextil
                If sPfadDat <> "" Then
                    einlesenTextil sPfadDat
                    filefreshTextil
                End If
            ElseIf Combo1.Text = "KISS - Format" Then
            
                sPfadDat = DatmarkKISS
                If sPfadDat <> "" Then
                    einlesenKISS sPfadDat
                    filefreshKISS
                End If
                
            ElseIf Combo1.Text = "Friseur - Format" Then
            
                sPfadDat = Datmarkfriseur
                If sPfadDat <> "" Then
                    einlesenfriseur sPfadDat
                    filefreshfriseur
                End If
            ElseIf Combo1.Text = "Bela - Format" Then
            
                sPfadDat = DatmarkBELA
                If sPfadDat <> "" Then
                    einlesenBELA sPfadDat
                    filefreshBELA
                End If
            ElseIf Combo1.Text = "Lüning - Format" Then
            
                sPfadDat = DatmarkLüning
                If sPfadDat <> "" Then
                    einlesenLüning sPfadDat
                    filefreshLüning
                End If
            ElseIf Combo1.Text = "Edeka Minden - Format" Then
            
                sPfadDat = DatmarkEDEK
                If sPfadDat <> "" Then
                    einlesenEDEK sPfadDat
                    filefreshEDEK
                End If

'            ElseIf Combo1.Text = "Rewe - Format" Then
'
'                sPfadDat = DatmarkREWE
'                If sPfadDat <> "" Then
'                    einlesenREWE sPfadDat
'                    filefreshREWE
'                End If
            ElseIf Combo1.Text = "Für Sie - Format" Then
            
                sPfadDat = DatmarkSIE
                If sPfadDat <> "" Then
                    einlesenSIE sPfadDat
                    filefreshSIE
                End If
            ElseIf Combo1.Text = "Zeitungs - Format" Then
            
                sPfadDat = DatmarkUni("ZEITUNG", sZeitpfad)
                If sPfadDat <> "" Then
                    einlesenZEIT sPfadDat
                    filefreshZEIT
                End If
            ElseIf Combo1.Text = "TU Barkow - Format" Then
            
                sPfadDat = DatmarkUni("TUBE", sTubepfad)
                If sPfadDat <> "" Then
                    einlesenTube sPfadDat
                    filefreshTUBE
                End If
            ElseIf Combo1.Text = "Esüdro - Format" Then
            
                sPfadDat = DatmarkUni("ESUE", sESUEpfad)
                If sPfadDat <> "" Then
                    einlesenESUE sPfadDat
                    filefreshESU
                End If
            ElseIf Combo1.Text = "Ringfoto - Format" Then
            
                sPfadDat = DatmarkUni("RINGE", sRINGPfad)
                If sPfadDat <> "" Then
                    einlesenRING sPfadDat
                    filefreshRING
                End If
                
'
            End If
            
            
        Case Is = 2 'Löschen
            If Combo1.Text = "Pricat - Format" Then
                sPfadDat = Datmark
                If sPfadDat <> "" Then
                    dele sPfadDat
                End If
            ElseIf Combo1.Text = "Passport - Format" Then
                sPfadDat = DatmarkUni("PASSPORTE", sPassPfad)
                If sPfadDat <> "" Then
                    dele sPfadDat
                End If
            ElseIf Combo1.Text = "Gerry - Format" Then
                sPfadDat = DatmarkUni("GERRYE", sGerryPfad)
                If sPfadDat <> "" Then
                    dele sPfadDat
                End If
            ElseIf Combo1.Text = "BOSS - Format" Then
                sPfadDat = DatmarkUni("BOSSE", sBossPfad)
                If sPfadDat <> "" Then
                    dele sPfadDat
                End If
            ElseIf Combo1.Text = "Tchibo - Format" Then
                sPfadDat = DatmarkTch
                If sPfadDat <> "" Then
                    deleTch sPfadDat
                End If
            ElseIf Combo1.Text = "Neuform - Format" Then
                sPfadDat = DatmarkNEU
                If sPfadDat <> "" Then
                    deleNEU sPfadDat
                End If
            ElseIf Combo1.Text = "Bollweg - Format" Then
                sPfadDat = DatmarkBOLL
                If sPfadDat <> "" Then
                    deleBOLL sPfadDat
                End If
            ElseIf Combo1.Text = "Hoffmann - Format" Then
                sPfadDat = DatmarkHoff
                If sPfadDat <> "" Then
                    deleHoff sPfadDat
                End If
            ElseIf Combo1.Text = "Vedes - Format" Then
                sPfadDat = DatmarkVEDE
                If sPfadDat <> "" Then
                    deleVEDE sPfadDat
                End If
            ElseIf Combo1.Text = "Textil - Format" Then
                sPfadDat = DatmarkTextil
                If sPfadDat <> "" Then
                    deleTextil sPfadDat
                End If
            ElseIf Combo1.Text = "KISS - Format" Then
                sPfadDat = DatmarkKISS
                If sPfadDat <> "" Then
                    deleKISS sPfadDat
                End If
            ElseIf Combo1.Text = "Bela - Format" Then
                sPfadDat = DatmarkBELA
                If sPfadDat <> "" Then
                    deleBELA sPfadDat
                End If
            ElseIf Combo1.Text = "Lüning - Format" Then
                sPfadDat = DatmarkLüning
                If sPfadDat <> "" Then
                    deleLüning sPfadDat
                End If
            ElseIf Combo1.Text = "Edeka Minden - Format" Then
                sPfadDat = DatmarkEDEK
                If sPfadDat <> "" Then
                    deleEDEK sPfadDat
                End If
            ElseIf Combo1.Text = "Rewe - Format" Then
                sPfadDat = DatmarkREWE
                If sPfadDat <> "" Then
                    deleREWE sPfadDat
                End If
            ElseIf Combo1.Text = "Für Sie - Format" Then
                sPfadDat = DatmarkSIE
                If sPfadDat <> "" Then
                    deleSIE sPfadDat
                End If
            ElseIf Combo1.Text = "TU Barkow - Format" Then
                sPfadDat = DatmarkTUBE
                If sPfadDat <> "" Then
                    deleTUBE sPfadDat
                End If
            ElseIf Combo1.Text = "Esüdro - Format" Then
                sPfadDat = DatmarkUni("ESUE", sESUEpfad)
                If sPfadDat <> "" Then
                    deleESUE sPfadDat
                End If
            ElseIf Combo1.Text = "Ringfoto - Format" Then
                sPfadDat = DatmarkUni("RINGE", sRINGPfad)
                If sPfadDat <> "" Then
                    deleRING sPfadDat
                End If
            End If
            
            
            
        Case Is = 4 'Einstellungen
            fraAktuell.Visible = False
            Frame3.Visible = True
            lesenEinstellungen
        Case Is = 5 'Speichern Einstellungen
            speichernEinstellungen
            lesenEinstellungen
            
        Case Is = 6 'zu den Lieferanten
            gbFrmComeFrom = True
            Set gfrmComeFrom = frmWKL09
            Unload frmWKL09
            frmWKL17.Show
        Case 7
            
            Dim sDatei As String
            
            sDatei = File1.list(File1.ListIndex)
            If sDatei <> "" Then
                If FileExists(Label2(1).Caption & "\" & sDatei) Then
                    anzeige "normal", "Bitte warten, Infotext wird angezeigt...", Label3
                    DeKompMasterDateiEXTRA Trim(sDatei), Label2(1).Caption
                    anzeige "normal", "", Label3
                End If
            End If
        
    End Select

    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Command2_Click"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub DeKompMasterDateiEXTRA(cEntpackdatei As String, sPfad As String)
    On Error GoTo LOKAL_ERROR
    
    Dim lRet    As Long
    
    '*** ENTPACKEN ***
    
    Zip_Unzip "ICHAG", sPfad, sPfad & "\" & cEntpackdatei, txtstatus
   
    lRet = Shell("WRITE.EXE " & sPfad & "\Master.txt", vbNormalFocus)
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DeKompMasterDateiEXTRA"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Sub
Private Sub speichernEinstellungen()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL        As String
    Dim lAvon       As Long
    Dim lAbis       As Long
    Dim lagn        As Long
    Dim irab        As Integer
    Dim irewe       As Integer
    Dim iLUENING    As Integer
    Dim iEANnullen  As Integer
    Dim iKeinDel    As Integer
    Dim iVergleich  As Integer
    Dim iHoffDoppel As Integer
    Dim iVedeDoppel As Integer
    Dim lagnHOFF    As Long
    Dim lagnVEDE    As Long
    Dim lagnGerry   As Long
    Dim lagnLue     As Long
    Dim iHoffhof    As Integer
    
    Dim lagnTUBZigaretten       As Long
    Dim lagnTUBZigarren         As Long
    Dim lagnTUBTabak            As Long
    Dim lagnTUBPfeifentabak     As Long
    Dim lagnTUBFeinschnitt      As Long
    Dim lagnTUBRBA              As Long
    
    Dim lagnZeitunge     As Long
    Dim lagnZeitungv     As Long
    
    loeschNEW "FFE", gdBase
    CreateTable "FFE", gdBase
    
    'Artikelnummer von bis
    lAvon = Val(Text1(0).Text): lAbis = Val(Text1(1).Text)
    lagn = Val(Text1(2).Text)
    lagnHOFF = Val(Text1(3).Text)
    lagnVEDE = Val(Text1(4).Text)
    lagnGerry = Val(Text1(13).Text)
    lagnLue = Val(Text1(14).Text)
    
    lagnTUBZigaretten = Val(Text1(5).Text)
    lagnTUBZigarren = Val(Text1(8).Text)
    lagnTUBTabak = Val(Text1(9).Text)
    lagnTUBPfeifentabak = Val(Text1(10).Text)
    lagnTUBFeinschnitt = Val(Text1(11).Text)
    lagnTUBRBA = Val(Text1(12).Text)
    
    lagnZeitunge = Val(Text1(6).Text)
    lagnZeitungv = Val(Text1(7).Text)
    
    irab = Checkbox1.Value
    iHoffDoppel = Checkbox2.Value
    iVedeDoppel = Checkbox3.Value
    iHoffhof = Checkbox4.Value
    irewe = Checkbox5.Value
    
    iLUENING = Checkbox6.Value
    
    iEANnullen = Check2.Value
    
    iKeinDel = Check3.Value
    
    If Option1(2).Value = True Then
        iVergleich = 2
    ElseIf Option1(1).Value = True Then
        iVergleich = 1
    ElseIf Option1(0).Value = True Then
        iVergleich = 0
    End If
    
    sSQL = "Insert into FFE (ARTNRV,ARTNRB,agn,agnHoff,agnVede,rab,rewe,LUENING,EANNULLEN,KeinDel,VERGLEICH,hoffdoppel "
    sSQL = sSQL & " ,vededoppel,hoffhof,agnZEITUNGe,agnZEITUNGv "
    sSQL = sSQL & " ,agnTUBZigaretten,agnTUBZigarren,agnTUBTabak,agnTUBPfeifentabak,agnTUBFeinschnitt,agnTUBRBA,agnGerry,agnLue) values "
    sSQL = sSQL & " ( " & lAvon & "," & lAbis & "," & lagn
    sSQL = sSQL & " ," & lagnHOFF & "," & lagnVEDE & "," & irab
    sSQL = sSQL & " ," & irewe & "," & iLUENING & "," & iEANnullen & "," & iKeinDel & "," & iVergleich & "," & iHoffDoppel & "," & iVedeDoppel
    sSQL = sSQL & " ," & iHoffhof & "," & lagnZeitunge & "," & lagnZeitungv
    sSQL = sSQL & " ," & lagnTUBZigaretten & "," & lagnTUBZigarren & "," & lagnTUBTabak & "," & lagnTUBPfeifentabak & "," & lagnTUBFeinschnitt & "," & lagnTUBRBA & " "
    sSQL = sSQL & " ," & lagnGerry & "," & lagnLue & ")"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Die Grundeinstellungen sind gespeichert.", Label3

    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speichernEinstellungen"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub lesenEinstellungen()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL        As String
    Dim rsrs        As Recordset
    Dim lAvon       As Long
    Dim lAbis       As Long
    Dim lagn        As Long
    Dim lagnHOFF    As Long
    Dim lagnGerry   As Long
    Dim lagnLue     As Long
    
    
    Dim lagnTUBZigaretten       As Long
    Dim lagnTUBZigarren         As Long
    Dim lagnTUBTabak            As Long
    Dim lagnTUBPfeifentabak     As Long
    Dim lagnTUBFeinschnitt      As Long
    Dim lagnTUBRBA              As Long
    
    Dim lagnZeitunge     As Long
    Dim lagnZeitungv     As Long
    Dim lagnVEDE    As Long
    Dim irab        As Integer
    Dim irewe       As Integer
    Dim iLUENING    As Integer
    Dim iKeinDel    As Integer
    Dim iEANnullen  As Integer
    Dim iVergleich  As Integer
    Dim iHoffDoppel As Integer
    Dim iVedeDoppel As Integer
    Dim iHoffhof    As Integer
    lAvon = 0
    lAbis = 0
    
    If Not checkFFE Then
        Frame3.Visible = True
        anzeige "rot", "Mit 'Speichern' die Grundeinstellungen bestätigen!", Label3
    Else
        Set rsrs = gdBase.OpenRecordset("FFE", dbOpenTable)
        If Not rsrs.EOF Then
            rsrs.MoveFirst
            
            If Not IsNull(rsrs!ARTNRV) Then
                lAvon = rsrs!ARTNRV
            Else
                lAvon = 0
            End If
            
            If Not IsNull(rsrs!ARTNRB) Then
                lAbis = rsrs!ARTNRB
            Else
                lAbis = 0
            End If
            
            If Not IsNull(rsrs!AGN) Then
                lagn = rsrs!AGN
            Else
                lagn = 0
            End If
            
            If Not IsNull(rsrs!AGNHOFF) Then
                lagnHOFF = rsrs!AGNHOFF
            Else
                lagnHOFF = 0
            End If
            
            If Not IsNull(rsrs!AGNGERRY) Then
                lagnGerry = rsrs!AGNGERRY
            Else
                lagnGerry = 0
            End If
            
            If Not IsNull(rsrs!AGNLUE) Then
                lagnLue = rsrs!AGNLUE
            Else
                lagnLue = 0
            End If
            
            If Not IsNull(rsrs!agnTUBZigaretten) Then
                lagnTUBZigaretten = rsrs!agnTUBZigaretten
            Else
                lagnTUBZigaretten = 0
            End If
            
            If Not IsNull(rsrs!agnTUBZigarren) Then
                lagnTUBZigarren = rsrs!agnTUBZigarren
            Else
                lagnTUBZigarren = 0
            End If
            
            
            If Not IsNull(rsrs!agnTUBTabak) Then
                lagnTUBTabak = rsrs!agnTUBTabak
            Else
                lagnTUBTabak = 0
            End If
            
            If Not IsNull(rsrs!agnTUBPfeifentabak) Then
                lagnTUBPfeifentabak = rsrs!agnTUBPfeifentabak
            Else
                lagnTUBPfeifentabak = 0
            End If
            
            If Not IsNull(rsrs!agnTUBFeinschnitt) Then
                lagnTUBFeinschnitt = rsrs!agnTUBFeinschnitt
            Else
                lagnTUBFeinschnitt = 0
            End If
            
            If Not IsNull(rsrs!agnTUBRBA) Then
                lagnTUBRBA = rsrs!agnTUBRBA
            Else
                lagnTUBRBA = 0
            End If
            
            If Not IsNull(rsrs!AGNZeitunge) Then
                lagnZeitunge = rsrs!AGNZeitunge
            Else
                lagnZeitunge = 0
            End If
            
            If Not IsNull(rsrs!AGNZeitungv) Then
                lagnZeitungv = rsrs!AGNZeitungv
            Else
                lagnZeitungv = 0
            End If
            
            If Not IsNull(rsrs!AGNVEDE) Then
                lagnVEDE = rsrs!AGNVEDE
            Else
                lagnVEDE = 0
            End If
            
            If Not IsNull(rsrs!rab) Then
                If rsrs!rab = True Then
                    irab = 0
                Else
                    irab = -1
                End If
            Else
                irab = -1
            End If
            
            If Not IsNull(rsrs!rewe) Then
                If rsrs!rewe = True Then
                    irewe = 0
                Else
                    irewe = -1
                End If
            Else
                irewe = -1
            End If
            
            If Not IsNull(rsrs!LUENING) Then
                If rsrs!LUENING = True Then
                    iLUENING = 0
                Else
                    iLUENING = -1
                End If
            Else
                iLUENING = -1
            End If
            
            If Not IsNull(rsrs!EANnullen) Then
                If rsrs!EANnullen = True Then
                    iEANnullen = 0
                Else
                    iEANnullen = -1
                End If
            Else
                iEANnullen = -1
            End If
            
            If Not IsNull(rsrs!KeinDel) Then
                If rsrs!KeinDel = True Then
                    iKeinDel = 0
                Else
                    iKeinDel = -1
                End If
            Else
                iKeinDel = -1
            End If
            
            iVergleich = 2
            
            If Not IsNull(rsrs!Vergleich) Then
                iVergleich = rsrs!Vergleich
            End If
            
            
            If Not IsNull(rsrs!hoffdoppel) Then
                If rsrs!hoffdoppel = True Then
                    iHoffDoppel = 0
                Else
                    iHoffDoppel = -1
                End If
            Else
                iHoffDoppel = -1
            End If
            
            If Not IsNull(rsrs!VedeDoppel) Then
                If rsrs!VedeDoppel = True Then
                    iVedeDoppel = 0
                Else
                    iVedeDoppel = -1
                End If
            Else
                iVedeDoppel = -1
            End If
            
            If Not IsNull(rsrs!hoffhof) Then
                If rsrs!hoffhof = True Then
                    iHoffhof = 0
                Else
                    iHoffhof = -1
                End If
            Else
                iHoffhof = -1
            End If
            
        End If
        rsrs.Close: Set rsrs = Nothing
    End If

    If lAvon = 0 Then
        Text1(0).Text = 600000
        
    Else
        Text1(0).Text = lAvon
    End If
    Text1(0).Refresh
    
    If lAbis = 0 Then
        Text1(1).Text = 700000
    Else
        Text1(1).Text = lAbis
    End If
    Text1(1).Refresh
    
    If lagn = 0 Then
        Text1(2).Text = 0
    Else
        Text1(2).Text = lagn
    End If
    
    If lagnVEDE = 0 Then
        Text1(4).Text = 0
    Else
        Text1(4).Text = lagnVEDE
    End If
    
    If lagnHOFF = 0 Then
        Text1(3).Text = 0
    Else
        Text1(3).Text = lagnHOFF
    End If
    
    If lagnGerry = 0 Then
        Text1(13).Text = 0
    Else
        Text1(13).Text = lagnGerry
    End If
    
    If lagnLue = 0 Then
        Text1(14).Text = 0
    Else
        Text1(14).Text = lagnLue
    End If
    
    If lagnTUBZigaretten = 0 Then
        Text1(5).Text = 0
    Else
        Text1(5).Text = lagnTUBZigaretten
    End If
    
    If lagnTUBZigarren = 0 Then
        Text1(8).Text = 0
    Else
        Text1(8).Text = lagnTUBZigarren
    End If
    
    If lagnTUBTabak = 0 Then
        Text1(9).Text = 0
    Else
        Text1(9).Text = lagnTUBTabak
    End If
    
    If lagnTUBPfeifentabak = 0 Then
        Text1(10).Text = 0
    Else
        Text1(10).Text = lagnTUBPfeifentabak
    End If
    
    If lagnTUBFeinschnitt = 0 Then
        Text1(11).Text = 0
    Else
        Text1(11).Text = lagnTUBFeinschnitt
    End If
    
    If lagnTUBRBA = 0 Then
        Text1(12).Text = 0
    Else
        Text1(12).Text = lagnTUBRBA
    End If
    
    
    
    
    
    
    If lagnZeitunge = 0 Then
        Text1(6).Text = 0
    Else
        Text1(6).Text = lagnZeitunge
    End If
    
    If lagnZeitungv = 0 Then
        Text1(7).Text = 0
    Else
        Text1(7).Text = lagnZeitungv
    End If
    
    If irab = 0 Then
        Checkbox1.Value = vbChecked
    Else
        Checkbox1.Value = vbUnchecked
    End If
    
    If irewe = 0 Then
        Checkbox5.Value = vbChecked
    Else
        Checkbox5.Value = vbUnchecked
    End If
    
    If iEANnullen = 0 Then
        Check2.Value = vbChecked
    Else
        Check2.Value = vbUnchecked
    End If
    
    If iKeinDel = 0 Then
        Check3.Value = vbChecked
    Else
        Check3.Value = vbUnchecked
    End If
    
    If iLUENING = 0 Then
        Checkbox6.Value = vbChecked
    Else
        Checkbox6.Value = vbUnchecked
    End If
    
    If iHoffDoppel = 0 Then
        Checkbox2.Value = vbChecked
    Else
        Checkbox2.Value = vbUnchecked
    End If
    
    If iVedeDoppel = 0 Then
        Checkbox3.Value = vbChecked
    Else
        Checkbox3.Value = vbUnchecked
    End If
    
    If iHoffhof = 0 Then
        Checkbox4.Value = vbChecked
    Else
        Checkbox4.Value = vbUnchecked
    End If
    
    Select Case iVergleich
        Case Is = 2
            Option1(2).Value = True
        Case Is = 1
             Option1(1).Value = True
        Case Is = 0
             Option1(0).Value = True
        Case Else
            Option1(2).Value = True
    End Select
    
    
    
    glartv = lAvon
    glartb = lAbis
    glagn = lagn
    girab = irab
    giLuening = iLUENING
    giKeinDel = iKeinDel
    giEANNULLEN = iEANnullen
    giVergleich = iVergleich
    giHoffdoppel = iHoffDoppel
    giVededoppel = iVedeDoppel
    
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "lesenEinstellungen"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
    Resume Next
End Sub
Private Function leseDEVFAK() As Single
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL    As String
    Dim rsrs    As Recordset
    
    leseDEVFAK = 1.53
    
    If Not NewTableSuchenDBKombi("DevilE", gdBase) Then 'das erste Mal
    
        CreateTable "DEVILE", gdBase
        
    Else
    
        Set rsrs = gdBase.OpenRecordset("DEVILE", dbOpenTable)
        If Not rsrs.RecordCount = 0 Then
            rsrs.MoveFirst
            
            If Not IsNull(rsrs!DEVFAK) Then
                leseDEVFAK = rsrs!DEVFAK
            End If
            
        End If
        rsrs.Close: Set rsrs = Nothing
    End If
   
    
    
    Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "leseDEVFAK"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Sub einlesen(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sPripfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        
        
        
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        PricatStep2
        
        pbrStatus.Value = 20
        
        If Not PricatStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 80
        
        PricatStep4
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesen"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenTCH(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sTchpfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        TchiboStep2
        
        pbrStatus.Value = 20
        

        If Not TchiboStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenTCH"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenPass(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sPassPfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        PassportStep2
        
        pbrStatus.Value = 20
        

        If Not PassportStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenPass"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenGerry(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sGerryPfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        GerryStep2
        
        pbrStatus.Value = 20
        

        If Not GerryStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenGerry"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenBOSS(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sBossPfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        BossStep2
        
        pbrStatus.Value = 20
        

        If Not BossStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenBOSS"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenNEU(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sNeupfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        NeuformStep2

        pbrStatus.Value = 20
       
        If Not NeuformStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenNEU"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenIDEN(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sIDENPfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        IDENStep2

        pbrStatus.Value = 20
       
        If Not IDENStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenIDEN"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenBOLL(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sBOLLpfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        BollwegStep2

        pbrStatus.Value = 20
        
        If Not BollwegStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenBOLL"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenHOFF(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sHOFFPfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        HOFFStep2

        pbrStatus.Value = 20
        
        If Not HOFFStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenHOFF"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenVEDE(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sVEDEPfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        VEDEStep2

        pbrStatus.Value = 20
        
        If Not VEDEStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenVEDE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenKISS(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sKISSPfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        KISSStep2

        pbrStatus.Value = 20
        
        If Not KISSStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenKISS"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenTextil(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sTextilPfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        TextilStep2

        pbrStatus.Value = 20
        
        If Not TextilStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenTextil"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub

Private Sub einlesenfriseur(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sFriseurpfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        FriseurStep2


        pbrStatus.Value = 20
        
        If Not FriseurStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenfriseur"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenREWE(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sREWEpfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        REWEStep2
        
        pbrStatus.Value = 20
        
        If Not REWEStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenREWE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenSIE(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sSIEpfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        SIEStep2
        
        pbrStatus.Value = 20
        
        If Not SIEStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenSIE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenBELA(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sBELApfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        BELAStep2
        
        pbrStatus.Value = 20
        
        If BELAStep3(sdat) = False Then
        
            Frame1.Visible = True
            Frame2.Visible = False
        
            anzeige "rot2", "Abbruch durch Benutzer...", Label3
            pbrStatus.Visible = False
        
            Exit Sub
        End If
        
        pbrStatus.Value = 100
        
        PricatStep4
        
'        Command1(5).Enabled = False
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenBELA"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenLüning(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sLUEpfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        LüningStep2
        
        pbrStatus.Value = 20
        
        If LüningStep3(sdat) = False Then
        
            Frame1.Visible = True
            Frame2.Visible = False
        
            anzeige "rot2", "Abbruch durch Benutzer...", Label3
            pbrStatus.Visible = False
        
            Exit Sub
        End If
        
        pbrStatus.Value = 100
        
        PricatStep4
        
'        Command1(5).Enabled = False
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenLüning"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenEDEK(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sEDEKApfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        EDEKStep2
        
        pbrStatus.Value = 20
        
        If EDEKStep3(sdat) = False Then
        
            Frame1.Visible = True
            Frame2.Visible = False
        
            anzeige "rot2", "Abbruch durch Benutzer...", Label3
            pbrStatus.Visible = False
        
            Exit Sub
        End If
        
        pbrStatus.Value = 100
        
        PricatStep4
        
'        Command1(5).Enabled = False
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenEDEK"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenESUE(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sESUEpfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        ESUStep2
        
        pbrStatus.Value = 20
        
        If Not ESUStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenESUE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenRING(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sRINGPfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        
        
        pbrStatus.Value = 20
        
        If Not RINGStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenRING"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenZEIT(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sZeitpfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        ZeitStep2
        
        pbrStatus.Value = 20
        
        If Not ZeitStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenZEIT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenTube(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sTubepfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        TUBEStep2
        
        pbrStatus.Value = 20
        
        If Not TUBEStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenTube"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub einlesenDEV(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Dim sdat    As String
        
        Screen.MousePointer = 11
        sdat = Right(spfa, Len(spfa) - Len(sDEVpfad) - 1)
    
        Frame1.Visible = False
        Frame2.Visible = True
        Label2(3).Caption = sdat
        Label2(3).Refresh
        
        sEinlesedat = sdat
        
        anzeige "normal", sdat & " wird eingelesen...", Label3
        
        pbrStatus.Visible = True
        pbrStatus.Max = 160
        pbrStatus.Value = 10
        
        DevilStep2

        
        pbrStatus.Value = 20
        

        If Not DevilStep3(sdat) Then Exit Sub
        
        pbrStatus.Value = 100
        
        PricatStep4
        
        Screen.MousePointer = 0
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "einlesenDEV"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub dele(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefresh
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "dele"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleNEU(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshNEU
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleneu"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleBOLL(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshBOLL
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleBOLL"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleHoff(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshHOFF
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleHoff"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleVEDE(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshVEDE
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleVEDE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleTextil(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshTextil
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleTextil"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleKISS(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshKISS
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleKISS"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleBELA(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshBELA
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleBELA"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleLüning(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshLüning
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleLüning"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleEDEK(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshEDEK
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleEDEK"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleREWE(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshREWE
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleREWE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleSIE(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshSIE
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleSIE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleESUE(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshESU
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleESUE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleRING(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshRING
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleRING"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleTUBE(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshTUBE
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleTUBE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub deleTch(spfa As String)
    On Error GoTo LOKAL_ERROR
    
        Kill spfa
        filefreshTch
        anzeige "normal", "Die Datei wurde gelöscht.", Label3
        
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "deleTch"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Tabellenbreiteanpassen(gridx As MSHFlexGrid, siEigFak As Single)
    On Error GoTo LOKAL_ERROR
    
    Dim siFak       As Single
    Dim bBreit()    As Integer
    Dim i           As Integer
    Dim j           As Integer
    
    With gridx
    
        ReDim bBreit(.Cols - 1)
        
        For j = 0 To .Rows - 1
            For i = 0 To .Cols - 1
                If TextWidth(.TextMatrix(j, i)) > bBreit(i) Then
                    bBreit(i) = TextWidth(.TextMatrix(j, i))
                End If
            Next i
        Next j
        
        
        Select Case Screen.Height
            Case Is > 15000
                siFak = 1.5
            Case Is > 12000
                siFak = 1.4
            Case Is > 11000
                siFak = 1.2
            Case Is > 10000
                siFak = 1.1
            Case Is > 8000
                siFak = 1#
        End Select
        
        For i = 0 To .Cols - 1
            .ColWidth(i) = bBreit(i) * siFak * siEigFak
        Next i
        
        .Redraw = True
        .Visible = True
    
    End With
    
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = "Modul1"
    Fehler.gsFunktion = "Tabellenbreiteanpassen"
    Fehler.gsFehlertext = "Bei Anpassen der Tabellenbreite ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub PricatStep4()
    On Error GoTo LOKAL_ERROR
    
    Dim j           As Integer
    Dim k           As Integer

    'Grid formatieren
    Tabcheck "STADAPRIB"
    FormatGridOverTablay "STADAPRIB"

    With PRIFlex
        .Redraw = False
        .Visible = False
        .Clear
        .Rows = 25
        .Cols = byAnzahlSpalten
        .FixedCols = 0
        .FixedRows = 1
        .Row = 0
        
        For j = 0 To byAnzahlSpalten - 1
            .Col = j
            .Text = sSpaltenname(j)
            aBreite(j) = TextWidth(.TextMatrix(0, j)) ' * 1.8
        Next j
    End With
    
    'Daten ermitteln
    
    If Combo1.Text = "Hoffmann - Format" Then
        If giHoffdoppel = 0 Then
            If Not FormatiereBildschirmdatenHoffmann Then
                Screen.MousePointer = 0
                Exit Sub
            End If
        Else
            If Not FormatiereBildschirmdaten Then
                Screen.MousePointer = 0
                Exit Sub
            End If
        End If
    ElseIf Combo1.Text = "Vedes - Format" Then
        If giVededoppel = 0 Then
            If Not FormatiereBildschirmdatenHoffmann Then
                Screen.MousePointer = 0
                Exit Sub
            End If
        Else
            If Not FormatiereBildschirmdaten Then
                Screen.MousePointer = 0
                Exit Sub
            End If
        End If
        
    ElseIf Combo1.Text = "KISS - Format" Then
        If Not FormatiereBildschirmdatenKISS Then
            Screen.MousePointer = 0
            Exit Sub
        End If
        
    ElseIf Combo1.Text = "TU Barkow - Format" Then
        If Not FormatiereBildschirmdatenTU Then
            Screen.MousePointer = 0
            Exit Sub
        End If
    
    ElseIf Combo1.Text = "Zeitungs - Format" Then
        If Not FormatiereBildschirmdatenZeitung Then
            Screen.MousePointer = 0
            Exit Sub
        End If
    ElseIf Combo1.Text = "Devil - Format" Then
        If Not FormatiereBildschirmdatenDEV Then
            Screen.MousePointer = 0
            Exit Sub
        End If
    ElseIf Combo1.Text = "Ringfoto - Format" Then
        If Not FormatiereBildschirmdatenRING Then
            Screen.MousePointer = 0
            Exit Sub
        End If
    ElseIf Combo1.Text = "Bela - Format" Then
        If Not FormatiereBildschirmdatenBELA Then
            Screen.MousePointer = 0
            Exit Sub
        End If
    ElseIf Combo1.Text = "Lüning - Format" Then
        If Not FormatiereBildschirmdatenLüning Then
            Screen.MousePointer = 0
            Exit Sub
        End If
    ElseIf Combo1.Text = "Edeka Minden - Format" Then
        If Not FormatiereBildschirmdatenEDEK Then
            Screen.MousePointer = 0
            Exit Sub
        End If
    ElseIf Combo1.Text = "Rewe - Format" Then
        If Not FormatiereBildschirmdatenREWE Then
            Screen.MousePointer = 0
            Exit Sub
        End If
    ElseIf Combo1.Text = "Für Sie - Format" Then
        If Not FormatiereBildschirmdatenSIE Then
            Screen.MousePointer = 0
            Exit Sub
        End If
    Else
        If Not FormatiereBildschirmdaten Then
            Screen.MousePointer = 0
            Exit Sub
        End If
    End If

    'Grid fuellen
    anzeige "normal", "Die Daten werden angezeigt...", Label3
    GridFuellen
    
    ermittlespalten
    Tabellenbreiteanpassen PRIFlex, 1.25 * gdTabfak
    
    Combo2.Clear
    Combo2.AddItem "Linr"
    Combo2.AddItem "AGN"
    Combo2.AddItem "Linie"
    Combo2.AddItem "rabattfähig"
    Combo2.AddItem "Libesnr6stell"
    Combo2.AddItem "Libesnr5stell"
    Combo2.AddItem "Libesnr4stell"
    Combo2.AddItem "Kürzel + Bezeichnung"
    Combo2.Text = "Linr"
    
    
    Zubeh_anzeigen True
    
    If Combo1.Text = "Pricat - Format" Then
        If NewTableSuchenDBKombi("pricate", gdBase) Then
            If SpalteInTabellegefundenNEW("pricate", "TRANSF0", gdBase) Then
                lastvoreinstellungzeigen "pricate", frmWKL09, 9
            Else
                loeschNEW "PricatE", gdBase
                CreateTable "PricatE", gdBase
            End If
        Else
            loeschNEW "PricatE", gdBase
            CreateTable "PricatE", gdBase
        End If
    ElseIf Combo1.Text = "Tchibo - Format" Then
        If NewTableSuchenDBKombi("tchiboe", gdBase) Then
            lastvoreinstellungzeigen "tchiboe", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Neuform - Format" Then
        If NewTableSuchenDBKombi("neuforme", gdBase) Then
            lastvoreinstellungzeigen "neuforme", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Devil - Format" Then
        If NewTableSuchenDBKombi("DEVILe", gdBase) Then
            lastvoreinstellungzeigen "DEVILe", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Bela - Format" Then
        If NewTableSuchenDBKombi("BELAE", gdBase) Then
            lastvoreinstellungzeigen "BELAE", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Lüning - Format" Then
        If NewTableSuchenDBKombi("LUEE", gdBase) Then
            lastvoreinstellungzeigen "LUEE", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Edeka Minden - Format" Then
        If NewTableSuchenDBKombi("EDEKE", gdBase) Then
            lastvoreinstellungzeigen "EDEKE", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Rewe - Format" Then
        If NewTableSuchenDBKombi("REWEE", gdBase) Then
            lastvoreinstellungzeigen "REWEE", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Für Sie - Format" Then
        If NewTableSuchenDBKombi("SIEE", gdBase) Then
            lastvoreinstellungzeigen "SIEE", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Bollweg - Format" Then
        If NewTableSuchenDBKombi("Bollwege", gdBase) Then
            lastvoreinstellungzeigen "Bollwege", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Hoffmann - Format" Then
        If NewTableSuchenDBKombi("Hoffmanne", gdBase) Then
            lastvoreinstellungzeigen "Hoffmanne", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Vedes - Format" Then
        If NewTableSuchenDBKombi("Vedese", gdBase) Then
            lastvoreinstellungzeigen "Vedese", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Textil - Format" Then
        If NewTableSuchenDBKombi("KISSe", gdBase) Then
            lastvoreinstellungzeigen "KISSe", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "KISS - Format" Then
        If NewTableSuchenDBKombi("KISSe", gdBase) Then
            lastvoreinstellungzeigen "KISSe", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Friseur - Format" Then
        If NewTableSuchenDBKombi("Friseure", gdBase) Then
            lastvoreinstellungzeigen "Friseure", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "TU Barkow - Format" Then
        If NewTableSuchenDBKombi("TUBE", gdBase) Then
            lastvoreinstellungzeigen "TUBE", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Esüdro - Format" Then
        If NewTableSuchenDBKombi("ESUE", gdBase) Then
            lastvoreinstellungzeigen "ESUE", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Ringfoto - Format" Then
        If NewTableSuchenDBKombi("RINGE", gdBase) Then
            lastvoreinstellungzeigen "RINGE", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Passport - Format" Then
        If NewTableSuchenDBKombi("PASSPORTE", gdBase) Then
            lastvoreinstellungzeigen "PASSPORTE", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "Gerry - Format" Then
        If NewTableSuchenDBKombi("GERRYE", gdBase) Then
            lastvoreinstellungzeigen "GERRYE", frmWKL09, 9
        End If
    ElseIf Combo1.Text = "BOSS - Format" Then
        If NewTableSuchenDBKombi("BOSSE", gdBase) Then
            lastvoreinstellungzeigen "BOSSE", frmWKL09, 9
        End If
    End If
    
     If gbKVKSicher = True Then
        Check1(0).Value = vbUnchecked
    End If
    
Exit Sub
LOKAL_ERROR:

    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "PricatStep4"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1

End Sub
Private Sub ermittlespalten()
    On Error GoTo LOKAL_ERROR
    
    Dim i As Integer

    For i = 0 To byAnzahlSpalten
        Select Case UCase(sSpaltenbez(i))
            Case Is = "ARTNR"
            SpaltennummerArtnr = i
            Case Is = "BEZEICH"
            SpaltennummerBEZEICH = i
            Case Is = "LINR"
            SpaltennummerLINR = i
            Case Is = "LPZ"
            SpaltennummerLPZ = i
            Case Is = "LIBESNR"
            SpaltennummerLIBESNR = i
            Case Is = "LEKPR"
            SpaltennummerLEKPR = i
            Case Is = "VKPR"
            SpaltennummerVKPR = i
            Case Is = "KVKPR1"
            SpaltennummerKVKPR1 = i
            Case Is = "MINBEST"
            SpaltennummerMINBEST = i
            Case Is = "GEFUEHRT"
            SpaltennummerGEFUEHRT = i
            Case Is = "RABATT_OK"
            SpaltennummerRABATT_OK = i
            Case Is = "PREISSCHU"
            SpaltennummerPREISSCHU = i
            Case Is = "NOTIZEN"
            SpaltennummerNOTIZEN = i
            Case Is = "AGN"
            SpaltennummerAGN = i
            Case Is = "PGN"
            SpaltennummerPGN = i
            Case Is = "RKZ"
            SpaltennummerRKZ = i
            Case Is = "EAN"
            SpaltennummerEAN = i
            Case Is = "MINMEN"
            SpaltennummerMINMEN = i
            Case Is = "MWST"
            SpaltennummerMWST = i
            Case Is = "MNOTIZEN"
            SpaltennummerMNOTIZEN = i
            Case Is = "GROESSE"
            SpaltennummerGROESSE = i
        End Select
        Select Case UCase(sSpaltenname(i))
            Case Is = "KVK NEU"
            SpaltennummerKVKNEU = i
        End Select
    Next i
    
    
Exit Sub
LOKAL_ERROR:

    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermittlespalten"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub PricatStep5()
    On Error GoTo LOKAL_ERROR
    
    Dim lcount          As Long
    Dim lAnzRows        As Long
    Dim lAktFeld        As Long
    Dim lUebernommen    As Long
    Dim counter         As Long
    
    Dim dLEKPR          As Double
    Dim dKVkPr1         As Double
    Dim dKVkPr1Neu      As Double
    Dim dVkPrAlt        As Double
    Dim dVkPrNeu        As Double
    Dim dKVkPrAlt       As Double
    Dim dKVkPrNeu       As Double
    Dim dKarVKPr        As Double

    Dim cPfad           As String
    Dim cSQL            As String

    Dim cKVkPr1         As String
    Dim cKVkPr1NEU      As String
    Dim ctmp            As String
    Dim cFeld           As String
    Dim cWert           As String
    Dim cArtNr          As String
    Dim cAgn            As String
    Dim cPGN            As String
    Dim cLinr           As String
    Dim cLEKPR          As String
    Dim cLiBesNr        As String
    Dim cMinMen         As String
    Dim cMinBest        As String
    Dim cGefuehrt       As String
    Dim cRabatt_OK      As String
    Dim cPreiSchutz     As String
    Dim clpz            As String
    Dim cGroesse        As String
    Dim cBezeich        As String
    Dim iRet            As Integer
    Dim bPreisschutz    As Boolean
    Dim rsrs1           As Recordset
    Dim rsRs2           As Recordset
    Dim rsRs3           As Recordset
    Dim rsStadapro      As Recordset
    
    Screen.MousePointer = 11
    
    pbrStatus.Visible = True
    
    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen...", Label3
    
    loeschNEW "STADAPRO", gdBase 'stadapro ist neu
    CreateTable "STADAPRO", gdBase
    Set rsStadapro = gdBase.OpenRecordset("STADAPRO")
    
    'welche Haken sind gesetzt
    For lcount = 0 To 9
        If Check1(lcount).Value = vbChecked Then
            gbTransfer(lcount + 1) = True
        Else
            gbTransfer(lcount + 1) = False
        End If
    Next
    
    lAnzRows = PRIFlex.Rows
    lAnzRows = lAnzRows - 1
    lAktFeld = 1
    
    If Check1(11).Value = vbChecked Then
        cSQL = "Update Artlief inner join importpri on Artlief.artnr = importpri.artnr and Artlief.linr = importpri.linr "
        cSQL = cSQL & " set Artlief.RKZ = 'J' , Artlief.EXDAT = '" & DateValue(Now) & "' "
        gdBase.Execute cSQL, dbFailOnError
    End If
    
    Label2(11).Caption = lAnzRows - 1
    Label2(11).Refresh
    
    'ab hier geschwindigkeit rausholen
    PRIFlex.Redraw = False  '1.
    Dim lDatum As Long
    lDatum = DateValue(Now)
    
    pbrStatus.Max = lAnzRows
    
    For lcount = 2 To lAnzRows  'Ab hier wird das ganze Grid abgeklappert
nochmal:
        Label2(12).Caption = lAktFeld
        Label2(12).Refresh
        lAktFeld = lAktFeld + 1
        rsStadapro.AddNew 'Protokoll schreiben ein neuer Datensatz
        
        rsStadapro!Quelldat = Left(sEinlesedat, 35)
        rsStadapro!Datum = lDatum 'DateValue(Now)'2.
        
        PRIFlex.Row = lcount
            
'        If counter = 500 Then
'            counter = 0
'        Else
            counter = counter + 1
            pbrStatus.Value = counter
'        End If
        
        PRIFlex.Col = SpaltennummerArtnr 'Artikelnummer holen
        cArtNr = PRIFlex.Text
        
'''        If cArtNr = "12825" Then
'''            MsgBox "Stopp"
'''        End If
        
        'Artikelnummer Check
        
        If Trim(UCase(cArtNr)) = "X" Or cArtNr = "" Then
            If lcount = lAnzRows Then
                Exit For
            ElseIf lcount < lAnzRows Then
                lcount = lcount + 1
                GoTo nochmal
            End If
        End If
        
        PRIFlex.Col = SpaltennummerLINR
        cLinr = PRIFlex.Text
        
        PRIFlex.Col = SpaltennummerLIBESNR
        cLiBesNr = PRIFlex.Text
        
        cBezeich = ""
        PRIFlex.Col = SpaltennummerBEZEICH
        cBezeich = Left(PRIFlex.Text, 35)
        
        PRIFlex.Col = SpaltennummerLEKPR
        cLEKPR = PRIFlex.Text
        
        PRIFlex.Col = SpaltennummerKVKPR1
        cKVkPr1 = PRIFlex.Text
        cKVkPr1 = fnMoveComma2Point$(cKVkPr1)
        dKVkPr1 = Val(cKVkPr1)
        
        PRIFlex.Col = SpaltennummerKVKNEU
        cKVkPr1NEU = PRIFlex.Text
        cKVkPr1NEU = fnMoveComma2Point$(cKVkPr1NEU)
        dKVkPr1Neu = Val(cKVkPr1NEU)
        
        PRIFlex.Col = SpaltennummerMINMEN
        cMinMen = PRIFlex.Text
        
        PRIFlex.Col = SpaltennummerAGN
        cAgn = PRIFlex.Text
        
        PRIFlex.Col = SpaltennummerPGN
        cPGN = PRIFlex.Text
        
        PRIFlex.Col = SpaltennummerMINBEST
        cMinBest = PRIFlex.Text
        
        PRIFlex.Col = SpaltennummerGEFUEHRT
        cGefuehrt = PRIFlex.Text
        
        PRIFlex.Col = SpaltennummerRABATT_OK
        cRabatt_OK = PRIFlex.Text
        
        PRIFlex.Col = SpaltennummerPREISSCHU
        cPreiSchutz = PRIFlex.Text
        
        PRIFlex.Col = SpaltennummerLPZ
        clpz = PRIFlex.Text
        
        
        PRIFlex.Col = SpaltennummerVKPR
        If PRIFlex.Text <> "" Then
            dKarVKPr = PRIFlex.Text
        Else
            dKarVKPr = 0
        End If
        
        PRIFlex.Col = SpaltennummerGROESSE
        If PRIFlex.Text <> "" Then
            cGroesse = PRIFlex.Text
        Else
            cGroesse = ""
        End If
        
        cSQL = "Select * from IMPORTPRI where ARTNR = " & cArtNr
        Set rsrs1 = gdBase.OpenRecordset(cSQL)
        
            
        If Not rsrs1.EOF Then
            rsrs1.MoveFirst
            
            cSQL = "Select * from ARTIKEL where ARTNR = " & cArtNr
            Set rsRs2 = gdBase.OpenRecordset(cSQL)
            
            If Not rsRs2.EOF Then
            
                If Not IsNull(rsRs2!PREISSCHU) Then
                    If rsRs2!PREISSCHU = "J" Then
                        bPreisschutz = True
                    Else
                        bPreisschutz = False
                    End If
                Else
                    bPreisschutz = False
                End If
                
                rsRs2.Edit 'ab hier Editmodus in der Artikel
                rsRs2!SYNStatus = "E"
                rsStadapro!Akt = "Änderung"
                
                rsRs2!RABATT_OK = cRabatt_OK
                rsRs2!PREISSCHU = cPreiSchutz
                rsRs2!GEFUEHRT = cGefuehrt
                rsRs2!GROESSE = cGroesse
                
                
                rsRs2!AWM = "0"
                
                rsStadapro!GEFUEHRT = cGefuehrt
                
                If gbTransfer(3) = True Then
                    rsRs2!MINBEST = cMinBest
                Else
                    rsRs2!MINBEST = 0
                End If
                If Not IsNull(rsRs2!GEFUEHRT) Then
                    ctmp = rsRs2!GEFUEHRT
                Else
                    ctmp = ""
                End If
                If ctmp = "J" Then
                    rsRs2!LASTDATE = lDatum 'DateValue(Now) 3.
                    rsRs2!LASTTIME = TimeValue(Now)
                End If
            Else
                rsRs2.AddNew    'ab AddnewModus in der Artikel
                rsRs2!AUFDAT = DateValue(Now)
                rsRs2!SYNStatus = "A"
                rsStadapro!Akt = "Neuheit"
                
                If gbTransfer(5) = True Then
                    rsRs2!GEFUEHRT = "J"
                Else
                    rsRs2!GEFUEHRT = "N" 'cGefuehrt
                    rsStadapro!GEFUEHRT = rsRs2!GEFUEHRT
                End If
                
                If gbTransfer(3) = True Then
                    rsRs2!MINBEST = cMinBest
                Else
                    rsRs2!MINBEST = 0
                End If
                
                rsRs2!RABATT_OK = cRabatt_OK
                rsRs2!BONUS_OK = "J"
                rsRs2!UMS_OK = "J"
                rsRs2!PREISSCHU = cPreiSchutz
                rsRs2!LASTDATE = lDatum 'DateValue(Now)4.
                rsRs2!LASTTIME = TimeValue(Now)
                rsRs2!ekpr = rsrs1!lekpr
                rsRs2!ETIMERK = "N"
                rsRs2!AWM = "98"
                rsRs2!EAN2 = ""
                rsRs2!EAN3 = ""
                
                
            End If
            
            If Check1(10).Value = vbChecked Then
                cSQL = "Delete from  Artlief where artnr = " & rsrs1!artnr & " "
                gdBase.Execute cSQL, dbFailOnError
            End If
            
            cSQL = "Select * from ARTLIEF where ARTNR = " & cArtNr & " and LINR = " & cLinr & " and (SYNSTATUS <> 'D' or SYNSTATUS is null)"
            Set rsRs3 = gdBase.OpenRecordset(cSQL)
            
            If Not IsNull(rsrs1!artnr) Then
                rsStadapro!artnr = rsrs1!artnr
            Else
                rsStadapro!artnr = ""
            End If
            rsRs2!artnr = rsrs1!artnr
            
            If Combo1.Text = "Devil - Format" Then
                rsRs2!AWM = rsrs1!AWM
            End If
            
            
            rsStadapro!BEZEICH = cBezeich
            
            
            If rsStadapro!Akt = "Neuheit" Then
                rsRs2!BEZEICH = cBezeich
            Else
                If (gbTransfer(10) = True) Then
                    rsRs2!BEZEICH = cBezeich
                Else
                    rsRs2!BEZEICH = rsRs2!BEZEICH
                End If
            End If
            
            rsRs2!linr = rsrs1!linr
            
            If gbTransfer(8) = True Then
                If IsNumeric(clpz) Then
                    rsRs2!LPZ = clpz
                Else
                    rsRs2!LPZ = 0
                End If
            Else
                rsRs2!LPZ = rsRs2!LPZ
            End If
                              

            rsRs2!LIBESNR = rsrs1!LIBESNR
                               
            If Not IsNull(rsRs2!lekpr) Then
                dLEKPR = rsRs2!lekpr
            Else
                dLEKPR = 0
            End If
            cWert = Format$(dLEKPR, "####0.00")
            rsStadapro!LEK_ALT = cWert

            If Not IsNull(rsrs1!lekpr) Then
                dLEKPR = rsrs1!lekpr
            Else
                dLEKPR = 0
            End If
            cWert = Format$(dLEKPR, "####0.00")

            If gbTransfer(7) = True Then
                rsStadapro!LEK_NEW = cWert

                rsRs2!lekpr = rsrs1!lekpr
            Else
                rsStadapro!LEK_NEW = rsStadapro!LEK_ALT

                rsRs2!lekpr = rsRs2!lekpr
            End If
                   
            If rsRs2!KVKPR1 <> dKVkPr1Neu Then
                If PRIFlex.CellBackColor = vbYellow Then
                    rsStadapro!AUTOKALK = True
                End If
                
                '** Bei Preisänderung ETIDRU füllen **
                If rsStadapro!Akt = "Änderung" Then
                    rsStadapro!Akt = "Preisänderung"
                End If
                
                If Not bPreisschutz Then
                    SchreibeEtiDruWKL11 rsrs1, rsRs2, dKVkPr1Neu, cArtNr
                End If
                
            End If
                        
            If Not IsNull(rsRs2!vkpr) Then
                dVkPrAlt = rsRs2!vkpr
            Else
                dVkPrAlt = 0
            End If
            cWert = Format$(dVkPrAlt, "####0.00")
            rsStadapro!VKPR_ALT = cWert

            If Not IsNull(rsRs2!KVKPR1) Then
                dKVkPrAlt = rsRs2!KVKPR1
            Else
                dKVkPrAlt = 0
            End If
            cWert = Format$(dKVkPrAlt, "####0.00")
            rsStadapro!KVK_ALT = cWert

            If Not IsNull(rsrs1!vkpr) Then
                dVkPrNeu = rsrs1!vkpr
            Else
                dVkPrNeu = 0
            End If
            
            cWert = Format$(dKarVKPr, "######0.00")
            If gbTransfer(6) = False Then
                rsStadapro!VKPR_NEW = cWert
            Else
                cWert = Format$(dVkPrNeu, "######0.00")
                rsStadapro!VKPR_NEW = cWert
                rsRs2!vkpr = dKarVKPr
            End If
            
            
            If rsStadapro!Akt = "Neuheit" Then
                If (gbTransfer(1) = True) Then
                    rsRs2!KVKPR1 = dKVkPr1Neu
                    rsRs2!vkpr = dKarVKPr
                    cWert = Format$(dKVkPr1Neu, "####0.00")
                    rsStadapro!KVK_NEW = cWert
                Else
                    rsRs2!KVKPR1 = dKVkPr1Neu
                    rsStadapro!KVK_NEW = dKVkPr1Neu
                End If
            Else
                If (gbTransfer(1) = True) And Not bPreisschutz Then
                    
                    rsRs2!KVKPR1 = dKVkPr1Neu
                    cWert = Format$(dKVkPr1Neu, "####0.00")
                    rsStadapro!KVK_NEW = cWert
                Else
'                    If dKVkPrAlt > 0 Then
'                        ctmp = Format$(dKVkPrAlt, "####0.00")
'                    Else
'                        ctmp = Format$(dKarVKPr, "####0.00")
'                    End If
                    
                    
                    'keine Ausnahme bei vorhandenen 0 - Preisen
                    ctmp = Format$(dKVkPrAlt, "####0.00")
                    
                    rsRs2!KVKPR1 = ctmp
                    rsStadapro!KVK_NEW = ctmp
                End If
            End If
            
            If gbTransfer(9) = True Then
                If IsNumeric(cAgn) Then
                    rsRs2!AGN = cAgn
                Else
                    rsRs2!AGN = 0
                End If
            Else
                rsRs2!AGN = rsRs2!AGN
            End If
                        
            If rsrs1!EAN <> rsRs2!EAN Then
                If Not IsNull(rsRs2!EAN2) Then
                    rsRs2!EAN3 = rsRs2!EAN2
                End If
                rsRs2!EAN2 = rsRs2!EAN
            End If
            rsRs2!EAN = rsrs1!EAN
            
            If gbTransfer(2) = True Then
                rsRs2!MINMEN = Val(cMinMen) 'rsrs1!MINMEN
            End If
            
            If rsStadapro!Akt = "Neuheit" And (gbTransfer(2) = False) Then rsRs2!MINMEN = 1
        
            rsRs2!MWST = rsrs1!MWST
        
            If gbTransfer(4) = True Or (rsStadapro!Akt = "Neuheit") Then
                rsRs2!NOTIZEN = Left(rsrs1!NOTIZEN, 25)
            End If
        
            rsRs2!INHALT = rsrs1!INHALT
            rsRs2!INHALTBEZ = rsrs1!INHALTBEZ
            rsRs2!GRUNDPREIS = rsrs1!GRUNDPREIS

            rsRs2.Update
            
            If rsRs3.EOF Then
                rsRs3.AddNew
                rsRs3!SYNStatus = "A"
            Else
                rsRs3.Edit
                rsRs3!SYNStatus = "E"
            End If
            rsRs3!artnr = Val(cArtNr)
            rsRs3!linr = Val(cLinr)
            rsRs3!LIBESNR = cLiBesNr
            rsRs3!lekpr = Format(cLEKPR, "####0.00")
            
            If gbTransfer(2) = True Then
                rsRs3!MINMEN = Val(cMinMen)
            Else
                rsRs3!MINMEN = 1
            End If
            
            'RKZ check
            rsRs3!RKZ = rsrs1!RKZ
            If rsRs3!RKZ = "J" Then
                If Not IsNull(rsRs3!EXDAT) Then
                    If CLng(rsRs3!EXDAT) = 0 Then
                        rsRs3!EXDAT = DateValue(Now)
                    End If
                Else
                    rsRs3!EXDAT = DateValue(Now)
                End If
            Else
                rsRs3!EXDAT = 0
            End If

            rsRs3.Update
            
        End If
        rsStadapro.Update
    Next lcount
    pbrStatus.Visible = False
    
    rsStadapro.Close
    rsRs3.Close: Set rsRs3 = Nothing
    rsRs2.Close: Set rsRs2 = Nothing: Set rsRs2 = Nothing
    rsrs1.Close: Set rsrs1 = Nothing
    
    
    'hier die vielen EAN beim Lüning Einleseverfahren in die ARTEAN_K speichern
    
'    artean_LUE
    If NewTableSuchenDBKombi("artean_LUE", gdBase) = True Then
    
        cSQL = "Update artean_LUE a inner join importpri i on a.libesnr = i.Libesnr "
        cSQL = cSQL & " set a.artnr = i.artnr  "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Update artean_LUE set artnr = 0 where artnr is null"
        gdBase.Execute cSQL, dbFailOnError
    
        cSQL = "Delete from artean_LUE where artnr = 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        If Not NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then 'das erste Mal
    
            cSQL = "Create Table ARTEAN_K"
            cSQL = cSQL & " ( "
            cSQL = cSQL & " ARTNR long "
            cSQL = cSQL & ", ean Text(13) "
            cSQL = cSQL & " ) "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Create Index EAN on ARTEAN_K (EAN)"
            gdBase.Execute cSQL, dbFailOnError
        End If
        
        'Alle EANS auffangen************************************************

        loeschNEW "artean_BU", gdBase
    
        cSQL = "Create Table artean_BU  "
        cSQL = cSQL & "( ARTNR int"
        cSQL = cSQL & ", EANCH varchar(13)"
        cSQL = cSQL & ", OTHERARTNR1 int"
        cSQL = cSQL & ", OTHERARTNR1_Bestand int"
        cSQL = cSQL & ") "
        gdBase.Execute cSQL, dbFailOnError
    
        cSQL = "Insert into artean_BU Select artnr, val(ean) as EANCH from artean_LUE  "
        gdBase.Execute cSQL, dbFailOnError
    
        cSQL = "Update artean_BU set EANCH = '0' & EANCH  "
        cSQL = cSQL & " where len(EANCH)= 11 "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Update artean_BU set OTHERARTNR1 = 0 , OTHERARTNR1_Bestand = 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Delete from artean_BU where EANCH = '0' "
        gdBase.Execute cSQL, dbFailOnError
        
        If NewTableSuchenDBKombi("artean_Artikel", gdBase) Then
    
            'mit dieser Information holen wir uns aus der Datenbank alle ARTNR(ungleich), die schon solch eine EAN besitzen
            
            cSQL = "Update artean_BU inner join artean_Artikel on artean_BU.EANCH = artean_Artikel.EANCH "
            cSQL = cSQL & " set artean_BU.OTHERARTNR1 = artean_Artikel.ARTNR "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Delete from artean_BU where Artnr = OTHERARTNR1 "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Delete from artean_BU where OTHERARTNR1 = 0 "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Update artean_BU inner join Artikel on artean_BU.OTHERARTNR1 = Artikel.ARTNR "
            cSQL = cSQL & " set artean_BU.OTHERARTNR1_Bestand = Artikel.Bestand "
            gdBase.Execute cSQL, dbFailOnError
            
            
            'nun zur Vollendung
            'bei Otherartnr1 die EAN rausnehmen und von Otherartnr1 auf Artnr den Bestand addieren
            
            cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN = artean_BU.EANCH "
            cSQL = cSQL & " set Artikel.ean = '' "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN2 = artean_BU.EANCH "
            cSQL = cSQL & " set Artikel.ean2 = '' "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN3 = artean_BU.EANCH "
            cSQL = cSQL & " set Artikel.ean3 = '' "
            gdBase.Execute cSQL, dbFailOnError
            
            If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
                cSQL = "Update ARTEAN_K inner join artean_BU on ARTEAN_K.ARTNR = artean_BU.OTHERARTNR1 and ARTEAN_K.EAN = artean_BU.EANCH "
                cSQL = cSQL & " set ARTEAN_K.ean = '' "
                gdBase.Execute cSQL, dbFailOnError
                
                cSQL = "Delete from ARTEAN_K where ean = '' "
                gdBase.Execute cSQL, dbFailOnError
            End If
            
            
            'bestand addieren
            
            cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.ARTNR  "
            cSQL = cSQL & " set Artikel.Bestand = Artikel.Bestand + artean_BU.OTHERARTNR1_Bestand"
            gdBase.Execute cSQL, dbFailOnError
        
        End If
    

        'Ende ********************** Alle EANS auffangen
        cSQL = "Insert into ARTEAN_K select artnr, ean from  artean_LUE where artnr > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        loeschNEW "artean_LUE", gdBase
    
    End If
    
    'hier die vielen EAN beim Bela Einleseverfahren in die ARTEAN_K speichern
    
'    artean_BEL
    If NewTableSuchenDBKombi("artean_BEL", gdBase) = True Then
    
    
    
        cSQL = "Update artean_BEL a inner join importpri i on a.libesnr = i.Libesnr "
        cSQL = cSQL & " set a.artnr = i.artnr  "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Update artean_BEL set artnr = 0 where artnr is null"
        gdBase.Execute cSQL, dbFailOnError
    
        cSQL = "Delete from artean_BEL where artnr = 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        If Not NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then 'das erste Mal
    
            cSQL = "Create Table ARTEAN_K"
            cSQL = cSQL & " ( "
            cSQL = cSQL & " ARTNR long "
            cSQL = cSQL & ", ean Text(13) "
            cSQL = cSQL & " ) "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Create Index EAN on ARTEAN_K (EAN)"
            gdBase.Execute cSQL, dbFailOnError
        End If
        
        'Alle EANS auffangen************************************************

        loeschNEW "artean_BU", gdBase
    
        cSQL = "Create Table artean_BU  "
        cSQL = cSQL & "( ARTNR int"
        cSQL = cSQL & ", EANCH varchar(13)"
        cSQL = cSQL & ", OTHERARTNR1 int"
        cSQL = cSQL & ", OTHERARTNR1_Bestand int"
        cSQL = cSQL & ") "
        gdBase.Execute cSQL, dbFailOnError
    
        cSQL = "Insert into artean_BU Select artnr, val(ean) as EANCH from artean_BEL  "
        gdBase.Execute cSQL, dbFailOnError
    
        cSQL = "Update artean_BU set EANCH = '0' & EANCH  "
        cSQL = cSQL & " where len(EANCH)= 11 "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Update artean_BU set OTHERARTNR1 = 0 , OTHERARTNR1_Bestand = 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Delete from artean_BU where EANCH = '0' "
        gdBase.Execute cSQL, dbFailOnError
        
        If NewTableSuchenDBKombi("artean_Artikel", gdBase) Then
    
            'mit dieser Information holen wir uns aus der Datenbank alle ARTNR(ungleich), die schon solch eine EAN besitzen
            
            cSQL = "Update artean_BU inner join artean_Artikel on artean_BU.EANCH = artean_Artikel.EANCH "
            cSQL = cSQL & " set artean_BU.OTHERARTNR1 = artean_Artikel.ARTNR "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Delete from artean_BU where Artnr = OTHERARTNR1 "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Delete from artean_BU where OTHERARTNR1 = 0 "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Update artean_BU inner join Artikel on artean_BU.OTHERARTNR1 = Artikel.ARTNR "
            cSQL = cSQL & " set artean_BU.OTHERARTNR1_Bestand = Artikel.Bestand "
            gdBase.Execute cSQL, dbFailOnError
            
            
            'nun zur Vollendung
            'bei Otherartnr1 die EAN rausnehmen und von Otherartnr1 auf Artnr den Bestand addieren
            
            cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN = artean_BU.EANCH "
            cSQL = cSQL & " set Artikel.ean = '' "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN2 = artean_BU.EANCH "
            cSQL = cSQL & " set Artikel.ean2 = '' "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN3 = artean_BU.EANCH "
            cSQL = cSQL & " set Artikel.ean3 = '' "
            gdBase.Execute cSQL, dbFailOnError
            
            If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
                cSQL = "Update ARTEAN_K inner join artean_BU on ARTEAN_K.ARTNR = artean_BU.OTHERARTNR1 and ARTEAN_K.EAN = artean_BU.EANCH "
                cSQL = cSQL & " set ARTEAN_K.ean = '' "
                gdBase.Execute cSQL, dbFailOnError
                
                cSQL = "Delete from ARTEAN_K where ean = '' "
                gdBase.Execute cSQL, dbFailOnError
            End If
            
            
            'bestand addieren
            
            cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.ARTNR  "
            cSQL = cSQL & " set Artikel.Bestand = Artikel.Bestand + artean_BU.OTHERARTNR1_Bestand"
            gdBase.Execute cSQL, dbFailOnError
        
        End If
    

        'Ende ********************** Alle EANS auffangen
        cSQL = "Insert into ARTEAN_K select artnr, ean from  artean_BEL where artnr > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        loeschNEW "artean_BEL", gdBase
    
    End If
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    'hier die vielen EAN beim FÜR SIE Einleseverfahren in die ARTEAN_K speichern
    
'    artean_SIE
    If NewTableSuchenDBKombi("artean_SIE", gdBase) = True Then
    
    
    
        cSQL = "Update artean_SIE a inner join importpri i on a.libesnr = i.Libesnr "
        cSQL = cSQL & " set a.artnr = i.artnr  "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Update artean_SIE set artnr = 0 where artnr is null"
        gdBase.Execute cSQL, dbFailOnError
    
        cSQL = "Delete from artean_SIE where artnr = 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        If Not NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then 'das erste Mal
    
            cSQL = "Create Table ARTEAN_K"
            cSQL = cSQL & " ( "
            cSQL = cSQL & " ARTNR long "
            cSQL = cSQL & ", ean Text(13) "
            cSQL = cSQL & " ) "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Create Index EAN on ARTEAN_K (EAN)"
            gdBase.Execute cSQL, dbFailOnError
        End If
        
        'Alle EANS auffangen************************************************

        loeschNEW "artean_BU", gdBase
    
        cSQL = "Create Table artean_BU  "
        cSQL = cSQL & "( ARTNR int"
        cSQL = cSQL & ", EANCH varchar(13)"
        cSQL = cSQL & ", OTHERARTNR1 int"
        cSQL = cSQL & ", OTHERARTNR1_Bestand int"
        cSQL = cSQL & ") "
        gdBase.Execute cSQL, dbFailOnError
    
        cSQL = "Insert into artean_BU Select artnr, val(ean) as EANCH from artean_SIE  "
        gdBase.Execute cSQL, dbFailOnError
    
        cSQL = "Update artean_BU set EANCH = '0' & EANCH  "
        cSQL = cSQL & " where len(EANCH)= 11 "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Update artean_BU set OTHERARTNR1 = 0 , OTHERARTNR1_Bestand = 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Delete from artean_BU where EANCH = '0' "
        gdBase.Execute cSQL, dbFailOnError
        
        If NewTableSuchenDBKombi("artean_Artikel", gdBase) Then
    
            'mit dieser Information holen wir uns aus der Datenbank alle ARTNR(ungleich), die schon solch eine EAN besitzen
            
            cSQL = "Update artean_BU inner join artean_Artikel on artean_BU.EANCH = artean_Artikel.EANCH "
            cSQL = cSQL & " set artean_BU.OTHERARTNR1 = artean_Artikel.ARTNR "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Delete from artean_BU where Artnr = OTHERARTNR1 "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Delete from artean_BU where OTHERARTNR1 = 0 "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Update artean_BU inner join Artikel on artean_BU.OTHERARTNR1 = Artikel.ARTNR "
            cSQL = cSQL & " set artean_BU.OTHERARTNR1_Bestand = Artikel.Bestand "
            gdBase.Execute cSQL, dbFailOnError
            
            
            'nun zur Vollendung
            'bei Otherartnr1 die EAN rausnehmen und von Otherartnr1 auf Artnr den Bestand addieren
            
            cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN = artean_BU.EANCH "
            cSQL = cSQL & " set Artikel.ean = '' "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN2 = artean_BU.EANCH "
            cSQL = cSQL & " set Artikel.ean2 = '' "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN3 = artean_BU.EANCH "
            cSQL = cSQL & " set Artikel.ean3 = '' "
            gdBase.Execute cSQL, dbFailOnError
            
            If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
                cSQL = "Update ARTEAN_K inner join artean_BU on ARTEAN_K.ARTNR = artean_BU.OTHERARTNR1 and ARTEAN_K.EAN = artean_BU.EANCH "
                cSQL = cSQL & " set ARTEAN_K.ean = '' "
                gdBase.Execute cSQL, dbFailOnError
                
                cSQL = "Delete from ARTEAN_K where ean = '' "
                gdBase.Execute cSQL, dbFailOnError
            End If
            
            
            'bestand addieren
            
            cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.ARTNR  "
            cSQL = cSQL & " set Artikel.Bestand = Artikel.Bestand + artean_BU.OTHERARTNR1_Bestand"
            gdBase.Execute cSQL, dbFailOnError
        
        End If
    

        'Ende ********************** Alle EANS auffangen
        cSQL = "Insert into ARTEAN_K select artnr, ean from  artean_SIE where artnr > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        loeschNEW "artean_SIE", gdBase
    
    End If
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    '**** die 2.Ean verarbeiten
    
    'die 2.Ean an die 2. Stelle setzen alles andere wird bis in die artean_k verschoben
    loeschNEW "REWEZWEAN", gdBase
    CreateTableT2 "REWEZWEAN", gdBase

    cSQL = "Insert into REWEZWEAN select ARTNR,val(EAN2) as EANTO from Importpri "
    cSQL = cSQL & " where (not ean2 is null or ean2 = '')"
    gdBase.Execute cSQL, dbFailOnError

    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen(7.2)...", Label3

    cSQL = "Create Index EANTO on REWEZWEAN (EANTO)"
    gdBase.Execute cSQL, dbFailOnError

    cSQL = "Create Index artnr on REWEZWEAN (artnr)"
    gdBase.Execute cSQL, dbFailOnError

    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen(7.3)...", Label3

    cSQL = "Update REWEZWEAN set EANTO = '0' & EANTO  "
    cSQL = cSQL & " where len(EANTO)= 11 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete * from REWEZWEAN where val(EANTO) = 0 "
    gdBase.Execute cSQL, dbFailOnError
    
    

    Dim rsrs As DAO.Recordset
    Dim rsArt As DAO.Recordset
    Dim cEAN As String
    
    Dim bEingefügt As Boolean
    Dim cEANART As String
    
    cSQL = "Select distinct(EANTO), Artnr from REWEZWEAN  "
    
    Set rsrs = gdBase.OpenRecordset(cSQL)
    If Not rsrs.EOF Then
        
        
        rsrs.MoveFirst
        Do While Not rsrs.EOF
        
            bEingefügt = False
            

            If Not IsNull(rsrs!EANTO) Then
                cEAN = Trim(rsrs!EANTO)
            End If
            
            If Not IsNull(rsrs!artnr) Then
                cArtNr = Trim(rsrs!artnr)
            End If
            
            'alle möglichkeiten gelöscht
            
            cSQL = "Update Artikel set ean = '' where ean = '" & cEAN & "'"
            cSQL = cSQL & " and Artnr <> " & cArtNr & " "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Update Artikel set ean2 = '' where ean2 = '" & cEAN & "'"
            cSQL = cSQL & " and Artnr <> " & cArtNr & " "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Update Artikel set ean3 = '' where ean3 = '" & cEAN & "'"
            cSQL = cSQL & " and Artnr <> " & cArtNr & " "
            gdBase.Execute cSQL, dbFailOnError
            
            cSQL = "Delete * from ARTEAN_K A where ean = '" & cEAN & "'"
            gdBase.Execute cSQL, dbFailOnError
            
            
            'und nun wieder rein
            
            'ist er bei dem selbigen Artikel schon drin?
            
            Dim bSchonenthalten As Boolean
            bSchonenthalten = False
            
            cSQL = "Select * from Artikel where artnr = " & cArtNr & " and ("
            cSQL = cSQL & " Artikel.EAN = '" & cEAN & "' "
            cSQL = cSQL & "or Artikel.EAN2 = '" & cEAN & "' "
            cSQL = cSQL & "or Artikel.EAN3 = '" & cEAN & "' "
            cSQL = cSQL & " )"
            Set rsArt = gdBase.OpenRecordset(cSQL)
            If Not rsArt.EOF Then
                'ja ist schon drin
                bSchonenthalten = True
                
            End If
            rsArt.Close: Set rsArt = Nothing
            
            
            
            If bSchonenthalten = False Then
                cSQL = "Select * from ARTEAN_K where artnr = " & cArtNr & " and "
                cSQL = cSQL & " ARTEAN_K.EAN = '" & cEAN & "' "
                Set rsArt = gdBase.OpenRecordset(cSQL)
                If Not rsArt.EOF Then
                    'ja ist schon drin
                    bSchonenthalten = True
                    
                End If
                rsArt.Close: Set rsArt = Nothing
            End If
            
            
            
            If bSchonenthalten = False Then
            
            
                'dann rein damit
                cSQL = "Select * from Artikel where artnr = " & cArtNr & ""
            
            
                Set rsArt = gdBase.OpenRecordset(cSQL)
                If Not rsArt.EOF Then
                    
                    rsArt.Edit
                    
                    If Not IsNull(rsArt!EAN) Then
                        cEANART = Trim(rsArt!EAN)
                        If Val(cEANART) = 0 Then
                            rsArt!EAN = cEAN
                            bEingefügt = True
                        End If
                    Else
                        rsArt!EAN = cEAN
                        bEingefügt = True
                    End If
                    
                    If bEingefügt = False Then
                    
                        If Not IsNull(rsArt!EAN2) Then
                            cEANART = Trim(rsArt!EAN2)
                            If Val(cEANART) = 0 Then
                                rsArt!EAN2 = cEAN
                                bEingefügt = True
                            End If
                        Else
                            rsArt!EAN2 = cEAN
                            bEingefügt = True
                        End If
                    
                    End If
                    
                    If bEingefügt = False Then
                    
                        If Not IsNull(rsArt!EAN3) Then
                            cEANART = Trim(rsArt!EAN3)
                            If Val(cEANART) = 0 Then
                                rsArt!EAN3 = cEAN
                                bEingefügt = True
                            End If
                        Else
                            rsArt!EAN3 = cEAN
                            bEingefügt = True
                        End If
                    
                    End If
                    
                    If bEingefügt = False Then
                    
                        cSQL = "Insert into Artean_k (artnr,ean) values (" & cArtNr & ",'" & cEAN & "')"
                        gdBase.Execute cSQL, dbFailOnError
                    End If
                    
                    
    
                    
                    rsArt.Update
                    
                End If
                rsArt.Close: Set rsArt = Nothing
            
            
            
            
            
            End If
            
            
            
            
            
            rsrs.MoveNext
        Loop
    End If

    rsrs.Close: Set rsrs = Nothing

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

''''''''    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen(7.4)...", Label3
''''''''
''''''''    cSQL = "Update REWEZWEAN i inner join Artikel a on i.artnr = a.artnr "
''''''''    cSQL = cSQL & " set i.EANTO = ''  "
''''''''    cSQL = cSQL & " where i.EANTO = a.ean "
''''''''    gdBase.Execute cSQL, dbFailOnError
''''''''
''''''''    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen(7.5)...", Label3
''''''''
''''''''    CheckIndex "ARTIKEL", "EAN2", "", gdBase
''''''''    CheckIndex "ARTIKEL", "EAN3", "", gdBase
''''''''
''''''''    cSQL = "Update Artikel a inner join REWEZWEAN i on a.artnr = i.artnr "
''''''''    cSQL = cSQL & " set a.EAN3 = ''  "
''''''''    cSQL = cSQL & " where a.ean3 is null "
''''''''    gdBase.Execute cSQL, dbFailOnError
''''''''
''''''''    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen(7.6)...", Label3
''''''''
''''''''    cSQL = "Update Artikel a inner join REWEZWEAN i on a.artnr = i.artnr "
''''''''    cSQL = cSQL & " set a.EAN2 = ''  "
''''''''    cSQL = cSQL & " where a.ean2 is null "
''''''''    gdBase.Execute cSQL, dbFailOnError
''''''''
''''''''    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen(7.7)...", Label3
''''''''
''''''''    cSQL = "Update Artikel a inner join REWEZWEAN i on a.artnr = i.artnr "
''''''''    cSQL = cSQL & " set a.EAN2 = i.EANTO  "
''''''''    cSQL = cSQL & " where a.ean2 is null "
''''''''    cSQL = cSQL & " and a.ean <> i.EANTO "
''''''''    cSQL = cSQL & " and a.ean3 <> i.EANTO "
''''''''    gdBase.Execute cSQL, dbFailOnError
''''''''
''''''''    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen(7.8)...", Label3
''''''''
''''''''    cSQL = "Update Artikel a inner join REWEZWEAN i on a.artnr = i.artnr "
''''''''    cSQL = cSQL & " set a.EAN2 = i.EANTO  "
''''''''    cSQL = cSQL & " where a.ean2 = '' "
''''''''    cSQL = cSQL & " and a.ean <> i.EANTO "
''''''''    cSQL = cSQL & " and a.ean3 <> i.EANTO "
''''''''    gdBase.Execute cSQL, dbFailOnError
''''''''
''''''''    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen(7.9)...", Label3
''''''''
''''''''            'den Rest in EAN3 rein
''''''''
''''''''    cSQL = "Update Artikel a inner join REWEZWEAN i on a.artnr = i.artnr "
''''''''    cSQL = cSQL & " set a.EAN3 = i.EANTO  "
''''''''    cSQL = cSQL & " where a.ean3 = '' "
''''''''    cSQL = cSQL & " and a.ean <> i.EANTO "
''''''''    cSQL = cSQL & " and a.ean2 <> i.EANTO "
''''''''    gdBase.Execute cSQL, dbFailOnError
''''''''
''''''''    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen(7.10)...", Label3
''''''''
''''''''    cSQL = "Update Artikel a inner join REWEZWEAN i on a.artnr = i.artnr "
''''''''    cSQL = cSQL & " set a.EAN3 = i.EANTO  "
''''''''    cSQL = cSQL & " where a.ean3 is null "
''''''''    cSQL = cSQL & " and a.ean <> i.EANTO "
''''''''    cSQL = cSQL & " and a.ean2 <> i.EANTO "
''''''''    gdBase.Execute cSQL, dbFailOnError
''''''''
    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen(7.11)...", Label3
    
    cSQL = "Update Artikel set EAN3 = ''  where ean3 = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen(7.12)...", Label3
    
    cSQL = "Update Artikel set EAN2 = ''  where ean2 = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    anzeige "normal", "Die Daten werden in den Stammdatensatz übernommen(7.13)...", Label3
    '**** ENDE die 2.Ean verarbeiten
    
    
    
    cSQL = "Update Artikel set EAN = ''  where ean = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    
    Screen.MousePointer = 0
    
Exit Sub
LOKAL_ERROR:

    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "PricatStep5"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
'    Resume Next

End Sub
Private Sub GridFuellen()
    On Error GoTo LOKAL_ERROR
    
    Dim lrow        As Long
    Dim lWert       As Long
    Dim sWert       As String
    Dim dWert       As Double
    Dim siWert      As Single
    Dim rsrs        As Recordset
    Dim counter     As Long
    Dim i           As Integer
    Dim j           As Integer
    Dim sSQL        As String
    
    Screen.MousePointer = 11
    
    sSQL = "Select * from IMPORTPRI order by awm , Linr,lpz"
    Set rsrs = gdBase.OpenRecordset(sSQL)
    
    With PRIFlex
    .Redraw = False
    counter = 0
    
    lrow = 1
    If Not rsrs.EOF Then
        rsrs.MoveLast
        Label2(11).Caption = rsrs.RecordCount
        Label2(11).Refresh
        pbrStatus.Max = rsrs.RecordCount
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            counter = counter + 1
            pbrStatus.Value = counter
            lrow = lrow + 1
            Label2(12).Caption = lrow
            Label2(12).Refresh
            
            .Rows = lrow + 1
            .Col = 0
            
            For i = 0 To byAnzahlSpalten - 1
                .Row = 0
                .Col = i
                
                If sSpaltenname(i) = .Text Then
                    
                    Select Case sSpaltenname(i)
                        Case Is = "Listen - EK", "Listen - VK", "KVK alt", "KVK neu"
                            If Not IsNull(rsrs(sSpaltenbez(i))) Then
                                sWert = rsrs(sSpaltenbez(i))
                            Else
                                sWert = "0"
                            End If
                            .Row = lrow
                            .Text = Format$(sWert, "####0.00")
                            
                        Case Is = "Preisschutz", "Geführt"
                            If Not IsNull(rsrs(sSpaltenbez(i))) Then
                                sWert = rsrs(sSpaltenbez(i))
                            Else
                                sWert = "N"
                            End If
                            .Row = lrow
                            .Text = sWert
                            
                        Case Is = "Rabatt"
                            If Not IsNull(rsrs(sSpaltenbez(i))) Then
                                sWert = rsrs(sSpaltenbez(i))
                            Else
                                sWert = "J"
                            End If
                            .Row = lrow
                            .Text = sWert
                         
                        Case Is = "MinBest"
                            If Not IsNull(rsrs(sSpaltenbez(i))) Then
                                sWert = rsrs(sSpaltenbez(i))
                            Else
                                sWert = "0"
                            End If
                            .Row = lrow
                            .Text = sWert
                            
                       
                        Case Else
                            
                            If Not IsNull(rsrs(sSpaltenbez(i))) Then
                                sWert = rsrs(sSpaltenbez(i))
                            Else
                                sWert = ""
                            End If
                            .Row = lrow
                            .Text = sWert
                    End Select
                    
                    If TextWidth(.TextMatrix(lrow, i)) > aBreite(i) Then
                        aBreite(i) = TextWidth(.TextMatrix(lrow, i))
                    End If
                    
                End If
            Next i
                                
            If Not IsNull(rsrs!AWM) Then
                sWert = rsrs!AWM
                If Trim(sWert) = "98" Then 'neue Artikel
                    For j = 0 To byAnzahlSpalten - 1
                        .Col = j
                        .CellBackColor = vbWhite
                        .CellForeColor = &HFF&
                    Next j
                ElseIf Trim(sWert) = "97" Then
                    For j = 0 To byAnzahlSpalten - 1
                        .Col = j
                        .CellBackColor = vbYellow
                        .CellForeColor = vbBlue
                    Next j
                ElseIf Trim(sWert) = "96" Then
                    For j = 0 To byAnzahlSpalten - 1
                        .Col = j
                        .CellBackColor = vbBlue
                        .CellForeColor = vbWhite
                     Next j
                ElseIf Trim(sWert) = "95" Then
                    For j = 0 To byAnzahlSpalten - 1
                        .Col = j
                        .CellBackColor = vbBlue
                        .CellForeColor = &HFF&
                    Next j
                ElseIf Trim(sWert) = "94" Then 'doppelte EANs
                    For j = 0 To byAnzahlSpalten - 1
                        .Col = j
                        .CellBackColor = vbBlack
                        .CellForeColor = vbRed
                    
                    Next j
                End If
            End If
            rsrs.MoveNext
        Loop
    End If
    
    For i = 0 To byAnzahlSpalten - 1
        .Col = i
        .ColWidth(i) = aBreite(i) * 1.5
    Next i
        
    rsrs.Close: Set rsrs = Nothing
    pbrStatus.Visible = False
    Label2(12).Caption = ""
    Label2(12).Refresh
    Label2(11).Caption = ""
    Label2(11).Refresh
    If byAnzahlSpalten < 2 Then
    Else
        .FixedCols = 1
    End If
    .RowHeight(1) = 0
    lrow = lrow - 1
    If lrow = 0 Then
        anzeige "rot", "Es wurden keine Artikel ermittelt.", Label3
    ElseIf lrow = 1 Then
        anzeige "Normal", "Ein Artikel wurde ermittelt.", Label3
    Else
        anzeige "Normal", lrow & " Artikel wurden ermittelt.", Label3
    End If
'    .Redraw = True
'    .Visible = True
    End With
    
    Screen.MousePointer = 0
    
    Exit Sub
LOKAL_ERROR:

    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "GridFuellen"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
    
    Resume Next
End Sub
Private Sub GridFuellenP()
    On Error GoTo LOKAL_ERROR
    
    Dim lrow        As Long
    Dim lWert       As Long
    Dim sWert       As String
    Dim dWert       As Double
    Dim siWert      As Single
    Dim rsrs        As Recordset
    Dim counter     As Long
    Dim i           As Integer
    Dim j           As Integer
    Dim sSQL        As String
    
    sSQL = "Select * from ANZPROC order by linr, lpz"
    Set rsrs = gdBase.OpenRecordset(sSQL)
    
    With MSHFlexGrid1
    .Redraw = False
    
    lrow = 1
    If Not rsrs.EOF Then
        rsrs.MoveLast
        
        rsrs.MoveFirst
        Do While Not rsrs.EOF
        
            lrow = lrow + 1
            
            .Rows = lrow + 1
            .Col = 0
            
            For i = 0 To byAnzahlSpalten - 1
                .Row = 0
                .Col = i
                
                If sSpaltenname(i) = .Text Then
                    
                    Select Case sSpaltenname(i)
                        Case Is = "L EKPR", "L VKPR", "S EKPR", "K VKPR"
                            If Not IsNull(rsrs(sSpaltenbez(i))) Then
                                sWert = rsrs(sSpaltenbez(i))
                            Else
                                sWert = "0"
                            End If
                            .Row = lrow
                            .Text = Format$(sWert, "####0.00")
                            
                        Case Is = "Preisschutz", "Geführt"
                            If Not IsNull(rsrs(sSpaltenbez(i))) Then
                                sWert = rsrs(sSpaltenbez(i))
                            Else
                                sWert = "N"
                            End If
                            .Row = lrow
                            .Text = sWert
                            
                        Case Is = "Rabatt"
                            If Not IsNull(rsrs(sSpaltenbez(i))) Then
                                sWert = rsrs(sSpaltenbez(i))
                            Else
                                sWert = "J"
                            End If
                            .Row = lrow
                            .Text = sWert
                         
                        Case Is = "MinBest"
                            If Not IsNull(rsrs(sSpaltenbez(i))) Then
                                sWert = rsrs(sSpaltenbez(i))
                            Else
                                sWert = "0"
                            End If
                            .Row = lrow
                            .Text = sWert
                        
                        Case Else
                            If Not IsNull(rsrs(sSpaltenbez(i))) Then
                                sWert = rsrs(sSpaltenbez(i))
                            Else
                                sWert = ""
                            End If
                            .Row = lrow
                            .Text = sWert
                    End Select
                    
                    If TextWidth(.TextMatrix(lrow, i)) > aBreite(i) Then
                        aBreite(i) = TextWidth(.TextMatrix(lrow, i))
                    End If
                    
                End If
            Next i
                                
            
            rsrs.MoveNext
        Loop
    End If
    
    For i = 0 To byAnzahlSpalten - 1
        .Col = i
        .ColWidth(i) = aBreite(i) * 1.5
    Next i
        
    rsrs.Close: Set rsrs = Nothing

    If byAnzahlSpalten < 2 Then
    Else
        .FixedCols = 1
    End If
    .RowHeight(1) = 0
    lrow = lrow - 1
    If lrow = 0 Then
        anzeige "rot", "Es wurden keine Artikel ermittelt.", Label3
    ElseIf lrow = 1 Then
        anzeige "Normal", "Ein Artikel wurde ermittelt.", Label3
    Else
        anzeige "Normal", lrow & " Artikel wurden ermittelt.", Label3
    End If
    .Redraw = True
    .Visible = True
    End With
    
    Exit Sub
LOKAL_ERROR:

    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "GridFuellenP"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
    
    Resume Next
    
End Sub
Private Function FormatiereBildschirmdaten() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim lreservArtnr    As Long
    Dim lvergebeArtnr   As Long

    Dim cSQL            As String

    Dim dNettospanne    As Double
    Dim dEK             As Double
    Dim cMWST           As String
    Dim cNewKassenPr    As String
    
    FormatiereBildschirmdaten = False
    anzeige "normal", "Neue Artikel werden ermittelt...", Label3
    'Farbe alle auf neu
    sSQL = "Update ImportPri set AWM = '98' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 85
    
    sSQL = "Create Index AWM on IMPORTPRI (AWM)"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index ean on IMPORTPRI (ean)"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 90
    
    'Artikel mit EAN übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'    sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 95
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'    sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 100
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'    sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    
    'where importpri.ean = '0' der macht ein check in artlief
    'auf linr und libesnr stimmigkeit 600283
    
    sSQL = "Update ImportPri inner join ARTLIEF on "
    sSQL = sSQL & " ARTLIEF.LINR = ImportPri.LINR and Trim(ARTLIEF.LIBESNR) = Trim(ImportPri.LIBESNR) "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.artnr = ARTLIEF.artnr  "
    sSQL = sSQL & " where Importpri.ean  = '0' "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError

    pbrStatus.Value = 105

    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "

    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "

    sSQL = sSQL & " where Importpri.ean  = '0' and ImportPri.AWM = '0' "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 110
    
    sSQL = "Update ImportPri set AWM = '96' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and not awm = '98'"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 115
    
    sSQL = "Update ImportPri set AWM = '95' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and awm = '98'"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 120
    
    If NewTableSuchenDBKombi("importdupli", gdBase) Then
        sSQL = "Update ImportPri inner join importdupli on "
        sSQL = sSQL & " importdupli.ean = ImportPri.ean set AWM = '94' "
        schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    End If
    
    cSQL = " Update ImportPri inner join Artikel on "
    cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    cSQL = cSQL & "Set "
    cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
    
    pbrStatus.Value = 125
    '*****'
    'ab Hier check der Autokalkulierung
    '1. Unter Voreinstellung basierend auf LEK
    If gsSpanne = "LEK" Then
        '2. Etimerk = J
        '3. Not Preisschu
        '4. Feld Nettospanne gefüllt
        '5. LEK gefüllt
        
        cSQL = " Update ImportPri inner join Artikel on "
        cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
        cSQL = cSQL & "Set "
        cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
        cSQL = cSQL & " where ARTIKEL.PREISSCHU = 'N'"
        cSQL = cSQL & " and ImportPri.LEKPR > 0 "
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 130
    
        
        cSQL = " Update ImportPri inner join ARTLIEF on "
        cSQL = cSQL & " ARTLIEF.ARTNR = ImportPri.ARTNR and ARTLIEF.LINR = ImportPri.LINR"
        cSQL = cSQL & " Set "
        cSQL = cSQL & " ImportPri.SPANNE = ARTLIEF.SPANNE "
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 135
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & " Set ETIMERK = 'J' "
        cSQL = cSQL & " where ImportPri.SPANNE > 0 "
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 140
        
        cSQL = "Select * from ImportPri where ETIMERK = 'J'and (not ImportPri.Spanne is null or ImportPri.Spanne <> 0 ) "
        Set rsrs = gdBase.OpenRecordset(cSQL)

        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                'Wir brauchen den LEK aus Mastemp
                'MWST
                'Nettospanne
                If Not IsNull(rsrs!lekpr) Then
                    dEK = rsrs!lekpr
                Else
                    dEK = 0
                End If

                If Not IsNull(rsrs!MWST) Then
                    cMWST = rsrs!MWST
                Else
                    cMWST = "V"
                End If


                If Not IsNull(rsrs!SPANNE) Then
                    dNettospanne = rsrs!SPANNE
                Else
                    dNettospanne = 0
                End If
                cNewKassenPr = Runden(CDbl(fnVKneuNS(dEK, cMWST, dNettospanne)))

                rsrs.Edit
                rsrs!KVKNEU = cNewKassenPr
                rsrs.Update

                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        
        pbrStatus.Value = 145
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & "Set  ImportPri.AWM = '97' "
        cSQL = cSQL & " where ETIMERK = 'J' and PREISSCHU = 'N'"
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 150
    End If
    
    '***'
    
    If Combo1.Text = "Tchibo - Format" Then
        If glagn <> 0 Then
            sSQL = "Update ImportPri set AGN =  " & glagn
            gdBase.Execute sSQL, dbFailOnError
        End If
        
        If girab = 0 Then
            sSQL = "Update ImportPri set RABATT_OK = 'N' "
            gdBase.Execute sSQL, dbFailOnError
        End If
        
    ElseIf Combo1.Text = "Gerry - Format" Then
        If Val(Text1(13).Text) <> 0 Then
            sSQL = "Update ImportPri set AGN =  " & Val(Text1(13).Text)
            gdBase.Execute sSQL, dbFailOnError
        End If
        
    End If
    
    
    Dim dEkpr As Double
    
    If Combo1.Text = "Devil - Format" Then
        Dim dDEVFAK As Double
        If IsNumeric(Text2.Text) Then
            dDEVFAK = CDbl(Text2.Text)
        End If
                
    End If
    
    
    pbrStatus.Value = 155
    anzeige "normal", "Für neue Artikel werden freie Artikelnummern ermittelt...", Label3
    sSQL = "Select * from ImportPri where awm = '98' or awm = '95' or awm = '94'"
    
   
   
    lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    pbrStatus.Value = 160
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.RecordCount = 0 Then
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            rsrs.Edit
            rsrs!artnr = lreservArtnr
            
            If Combo1.Text = "Devil - Format" Then
            
                If Not IsNull(rsrs!lekpr) Then
                    dEkpr = rsrs!lekpr
                    If dEkpr > 0 Then
                       rsrs!KVKNEU = dEkpr * dDEVFAK
                    End If
                    
                End If
            
            End If
            rsrs.Update
            
            lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
            If lvergebeArtnr = 0 Then
                
                anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                Exit Function
            Else
                lreservArtnr = lvergebeArtnr
                pbrStatus.Max = 80
                Select Case CInt(Right(CStr(lreservArtnr), 3))
                
                    Case Is = 0
                    pbrStatus.Value = 0
                    Case Is = 200
                    pbrStatus.Value = 20
                    Case Is = 400
                    pbrStatus.Value = 40
                    Case Is = 600
                    pbrStatus.Value = 60
                    Case Is = 800
                    pbrStatus.Value = 80
                End Select
            End If
            

            rsrs.MoveNext
        Loop
    
    End If
    rsrs.Close: Set rsrs = Nothing
    
    
    
    
    'dupliprüfung
    
    
    If NewTableSuchenDBKombi("importdupli", gdBase) Then
    
        sSQL = "Select ean from Importdupli"
        
        Dim cEANa As String
        lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    
        Set rsrs = gdBase.OpenRecordset(sSQL)
        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
            
                If Not IsNull(rsrs!EAN) Then
                    cEANa = rsrs!EAN
                End If
            
            
            
            
                sSQL = "Update ImportPri set artnr = " & lreservArtnr
                sSQL = sSQL & " where ean = '" & cEANa & "'"
                schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
            
                lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
                If lvergebeArtnr = 0 Then
                    
                    anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                    Exit Function
                Else
                    lreservArtnr = lvergebeArtnr
                End If
                
    
                rsrs.MoveNext
            Loop
        
        End If
        rsrs.Close: Set rsrs = Nothing
    
    End If
    
    
    
    
    
    FormatiereBildschirmdaten = True
    
    

    
    Exit Function
LOKAL_ERROR:
    If err.Number = 3372 Or err.Number = 53 Or err.Number = 3376 Or err.Number = 3375 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "FormatiereBildschirmdaten"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
    End If
End Function
Private Function FormatiereBildschirmdatenTU() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim lreservArtnr    As Long
    Dim lvergebeArtnr   As Long

    Dim cSQL            As String

    Dim dNettospanne    As Double
    Dim dEK             As Double
    Dim cMWST           As String
    Dim cNewKassenPr    As String
    
    FormatiereBildschirmdatenTU = False
    anzeige "normal", "Neue Artikel werden ermittelt...", Label3
    'Farbe alle auf neu
    sSQL = "Update ImportPri set AWM = '98' "
    sSQL = sSQL & " ,Rabatt_ok = 'N'  "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 85
    
    sSQL = "Create Index AWM on IMPORTPRI (AWM)"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index ean on IMPORTPRI (ean)"
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 90
    
    'Artikel mit EAN übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'    sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 95
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'    sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 100
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'    sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    
    'where importpri.ean = '0' der macht ein check in artlief
    'auf linr und libesnr stimmigkeit 600283
    
    sSQL = "Update ImportPri inner join ARTLIEF on "
    sSQL = sSQL & " ARTLIEF.LINR = ImportPri.LINR and Trim(ARTLIEF.LIBESNR) = Trim(ImportPri.LIBESNR) "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.artnr = ARTLIEF.artnr  "

    sSQL = sSQL & " where Importpri.ean  = '0' "
    gdBase.Execute sSQL, dbFailOnError

    pbrStatus.Value = 105

    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "

    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "

    sSQL = sSQL & " where Importpri.ean  = '0' and ImportPri.AWM = '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 110
    
    sSQL = "Update ImportPri set AWM = '96' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and not awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 115
    
    sSQL = "Update ImportPri set AWM = '95' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 120
    
    If NewTableSuchenDBKombi("importdupli", gdBase) Then
        sSQL = "Update ImportPri inner join importdupli on "
        sSQL = sSQL & " importdupli.ean = ImportPri.ean set AWM = '94' "
        gdBase.Execute sSQL, dbFailOnError
    End If
    
    cSQL = " Update ImportPri inner join Artikel on "
    cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    cSQL = cSQL & "Set "
    cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
    gdBase.Execute cSQL, dbFailOnError
    
    pbrStatus.Value = 125
    '*****'
    'ab Hier check der Autokalkulierung
    '1. Unter Voreinstellung basierend auf LEK
    If gsSpanne = "LEK" Then
        '2. Etimerk = J
        '3. Not Preisschu
        '4. Feld Nettospanne gefüllt
        '5. LEK gefüllt
        
        cSQL = " Update ImportPri inner join Artikel on "
        cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
        cSQL = cSQL & "Set "
        cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
        cSQL = cSQL & " where ARTIKEL.PREISSCHU = 'N'"
        cSQL = cSQL & " and ImportPri.LEKPR > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 130
    
        
        cSQL = " Update ImportPri inner join ARTLIEF on "
        cSQL = cSQL & " ARTLIEF.ARTNR = ImportPri.ARTNR and ARTLIEF.LINR = ImportPri.LINR"
        cSQL = cSQL & " Set "
        cSQL = cSQL & " ImportPri.SPANNE = ARTLIEF.SPANNE "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 135
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & " Set ETIMERK = 'J' "
        cSQL = cSQL & " where ImportPri.SPANNE > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 140
        
        cSQL = "Select * from ImportPri where ETIMERK = 'J'and (not ImportPri.Spanne is null or ImportPri.Spanne <> 0 ) "
        Set rsrs = gdBase.OpenRecordset(cSQL)

        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                'Wir brauchen den LEK aus Mastemp
                'MWST
                'Nettospanne
                If Not IsNull(rsrs!lekpr) Then
                    dEK = rsrs!lekpr
                Else
                    dEK = 0
                End If

                If Not IsNull(rsrs!MWST) Then
                    cMWST = rsrs!MWST
                Else
                    cMWST = "V"
                End If


                If Not IsNull(rsrs!SPANNE) Then
                    dNettospanne = rsrs!SPANNE
                Else
                    dNettospanne = 0
                End If
                cNewKassenPr = Runden(CDbl(fnVKneuNS(dEK, cMWST, dNettospanne)))

                rsrs.Edit
                rsrs!KVKNEU = cNewKassenPr
                rsrs.Update

                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        
        pbrStatus.Value = 145
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & "Set  ImportPri.AWM = '97' "
        cSQL = cSQL & " where ETIMERK = 'J' and PREISSCHU = 'N'"
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 150
    End If
    
    '***'
    
    
    
    
    Dim dEkpr As Double
    
    
    
    
    pbrStatus.Value = 155
    anzeige "normal", "Für neue Artikel werden freie Artikelnummern ermittelt...", Label3
    sSQL = "Select * from ImportPri where awm = '98' or awm = '95' or awm = '94'"
    
   
   
    lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    pbrStatus.Value = 160
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.RecordCount = 0 Then
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            rsrs.Edit
            rsrs!artnr = lreservArtnr
            
            rsrs.Update
            
            lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
            If lvergebeArtnr = 0 Then
                
                anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                Exit Function
            Else
                lreservArtnr = lvergebeArtnr
                pbrStatus.Max = 80
                Select Case CInt(Right(CStr(lreservArtnr), 3))
                
                    Case Is = 0
                    pbrStatus.Value = 0
                    Case Is = 200
                    pbrStatus.Value = 20
                    Case Is = 400
                    pbrStatus.Value = 40
                    Case Is = 600
                    pbrStatus.Value = 60
                    Case Is = 800
                    pbrStatus.Value = 80
                End Select
            End If
            

            rsrs.MoveNext
        Loop
    
    End If
    rsrs.Close: Set rsrs = Nothing
    
    
    
    
    'dupliprüfung
    
    
    If NewTableSuchenDBKombi("importdupli", gdBase) Then
    
        sSQL = "Select ean from Importdupli"
        
        Dim cEANa As String
        lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    
        Set rsrs = gdBase.OpenRecordset(sSQL)
        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
            
                If Not IsNull(rsrs!EAN) Then
                    cEANa = rsrs!EAN
                End If
            
                sSQL = "Update ImportPri set artnr = " & lreservArtnr
                sSQL = sSQL & " , rabatt_ok = 'N' "
                sSQL = sSQL & " where ean = '" & cEANa & "'"
                gdBase.Execute sSQL, dbFailOnError
            
                lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
                If lvergebeArtnr = 0 Then
                    
                    anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                    Exit Function
                Else
                    lreservArtnr = lvergebeArtnr
                End If
                
    
                rsrs.MoveNext
            Loop
        
        End If
        rsrs.Close: Set rsrs = Nothing
    
    End If
    
    
    
    
    
    FormatiereBildschirmdatenTU = True
    
    

    
    Exit Function
LOKAL_ERROR:
    If err.Number = 3372 Or err.Number = 53 Or err.Number = 3376 Or err.Number = 3375 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "FormatiereBildschirmdatenTU"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
    End If
End Function
Private Function FormatiereBildschirmdatenKISS() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim lreservArtnr    As Long
    Dim lvergebeArtnr   As Long

    Dim cSQL            As String

    Dim dNettospanne    As Double
    Dim dEK             As Double
    Dim cMWST           As String
    Dim cNewKassenPr    As String
    
    FormatiereBildschirmdatenKISS = False
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    anzeige "normal", "Neue Artikel werden ermittelt...", Label3
    'Farbe alle auf neu
    
    sSQL = "Update ImportPri set AWM = '98' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 85
    
    sSQL = "Create Index AWM on IMPORTPRI (AWM)"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index ean on IMPORTPRI (ean)"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index libesnr on IMPORTPRI (libesnr)"
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 90
    
    If giVergleich <> 1 Then
    
        'Artikel mit EAN übereinstimmung auf standard
        sSQL = "Update ImportPri inner join Artikel on "
        sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN "
        sSQL = sSQL & "Set "
        sSQL = sSQL & " ImportPri.AWM = '0' "
        sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
        sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
        sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
        sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
        sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
        sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
        sSQL = sSQL & " where Importpri.ean  <> '0' "
        sSQL = sSQL & " and Importpri.artnr is null "
        gdBase.Execute sSQL, dbFailOnError
    
        pbrStatus.Value = 95
    
        sSQL = "Update ImportPri inner join Artikel on "
        sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN "
        sSQL = sSQL & "Set "
        sSQL = sSQL & " IMPORTPRI.AWM = '0' "
        sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
        sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
        sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
        sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
        sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
        sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
        sSQL = sSQL & " where Importpri.ean  <> '0' "
        sSQL = sSQL & " and Importpri.artnr is null "
        gdBase.Execute sSQL, dbFailOnError
    
        pbrStatus.Value = 100
    
        sSQL = "Update ImportPri inner join Artikel on "
        sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN "
        sSQL = sSQL & "Set "
        sSQL = sSQL & " IMPORTPRI.AWM = '0' "
        sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
        sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
        sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
        sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
        sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
        sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
        sSQL = sSQL & " where Importpri.ean  <> '0' "
        sSQL = sSQL & " and Importpri.artnr is null "
        gdBase.Execute sSQL, dbFailOnError
    
        pbrStatus.Value = 102
    
        sSQL = "Update ImportPri inner join ARTEAN_K on "
        sSQL = sSQL & " ARTEAN_K.EAN = ImportPri.EAN "
        sSQL = sSQL & "Set "
        sSQL = sSQL & " IMPORTPRI.AWM = '0' "
        sSQL = sSQL & " ,ImportPri.artnr = ARTEAN_K.artnr  "
        sSQL = sSQL & " where Importpri.ean  <> '0' "
        sSQL = sSQL & " and Importpri.artnr is null "
        gdBase.Execute sSQL, dbFailOnError
    
    End If
    
    
    'where importpri.ean = '0' der macht ein check in artlief
    
    If giVergleich <> 0 Then
    
        'hol mal die Linr
        Dim lLinr As Long
        lLinr = 0
        
        cSQL = "Select distinct(Linr) as maxi from ImportPri  "
        Set rsrs = gdBase.OpenRecordset(cSQL)

        If Not rsrs.EOF Then
            If Not IsNull(rsrs!maxi) Then
                lLinr = rsrs!maxi
            End If
        End If
        rsrs.Close: Set rsrs = Nothing
        
        
        
        loeschNEW "Artlief" & srechnertab, gdBase
        
        
        sSQL = "Select * into ARTLIEF" & srechnertab & " from Artlief where linr = " & lLinr
        gdBase.Execute sSQL, dbFailOnError
    
        sSQL = "Create Index libesnr on ARTLIEF" & srechnertab & " (libesnr)"
        gdBase.Execute sSQL, dbFailOnError
    
        If giVergleich = 1 Then
            
            sSQL = "Update ARTLIEF" & srechnertab & " set LIBESNR = val(Libesnr) "
            gdBase.Execute sSQL, dbFailOnError
        
        End If
    
    
    
        sSQL = "Update ImportPri inner join ARTLIEF" & srechnertab & " on "
        
        If giVergleich = 1 Then
            sSQL = sSQL & "  val(ARTLIEF" & srechnertab & ".LIBESNR) = val(ImportPri.LIBESNR) "
        Else
            sSQL = sSQL & "  Trim(ARTLIEF" & srechnertab & ".LIBESNR) = Trim(ImportPri.LIBESNR) "
        End If
        sSQL = sSQL & "Set "
        sSQL = sSQL & " ImportPri.AWM = '0' "
        sSQL = sSQL & " ,ImportPri.artnr = ARTLIEF" & srechnertab & ".artnr  "
        
        sSQL = sSQL & " where  Importpri.artnr is null "
        If giVergleich <> 1 Then
            sSQL = sSQL & " and Importpri.ean  = '0' "
        End If
        
        gdBase.Execute sSQL, dbFailOnError
        
        loeschNEW "Artlief" & srechnertab, gdBase
    
    End If

    pbrStatus.Value = 105

    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "

    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "

    sSQL = sSQL & " where Importpri.ean  = '0' and ImportPri.AWM = '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 110
    
    sSQL = "Update ImportPri set AWM = '96' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and not awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 115
    
    sSQL = "Update ImportPri set AWM = '95' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 120
    
    If NewTableSuchenDBKombi("importdupli", gdBase) Then
        sSQL = "Update ImportPri inner join importdupli on "
        sSQL = sSQL & " importdupli.ean = ImportPri.ean set AWM = '94' "
        gdBase.Execute sSQL, dbFailOnError
    End If
    
    cSQL = " Update ImportPri inner join Artikel on "
    cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    cSQL = cSQL & "Set "
    cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
    gdBase.Execute cSQL, dbFailOnError
    
    pbrStatus.Value = 125
    '*****'
    'ab Hier check der Autokalkulierung
    '1. Unter Voreinstellung basierend auf LEK
    If gsSpanne = "LEK" Then
        '2. Etimerk = J
        '3. Not Preisschu
        '4. Feld Nettospanne gefüllt
        '5. LEK gefüllt
        
        cSQL = " Update ImportPri inner join Artikel on "
        cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
        cSQL = cSQL & "Set "
        cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
        cSQL = cSQL & " where ARTIKEL.PREISSCHU = 'N'"
        cSQL = cSQL & " and ImportPri.LEKPR > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 130
    
        
        cSQL = " Update ImportPri inner join ARTLIEF on "
        cSQL = cSQL & " ARTLIEF.ARTNR = ImportPri.ARTNR and ARTLIEF.LINR = ImportPri.LINR"
        cSQL = cSQL & " Set "
        cSQL = cSQL & " ImportPri.SPANNE = ARTLIEF.SPANNE "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 135
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & " Set ETIMERK = 'J' "
        cSQL = cSQL & " where ImportPri.SPANNE > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 140
        
        cSQL = "Select * from ImportPri where ETIMERK = 'J'and (not ImportPri.Spanne is null or ImportPri.Spanne <> 0 ) "
        Set rsrs = gdBase.OpenRecordset(cSQL)

        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                'Wir brauchen den LEK aus Mastemp
                'MWST
                'Nettospanne
                If Not IsNull(rsrs!lekpr) Then
                    dEK = rsrs!lekpr
                Else
                    dEK = 0
                End If

                If Not IsNull(rsrs!MWST) Then
                    cMWST = rsrs!MWST
                Else
                    cMWST = "V"
                End If


                If Not IsNull(rsrs!SPANNE) Then
                    dNettospanne = rsrs!SPANNE
                Else
                    dNettospanne = 0
                End If
                cNewKassenPr = Runden(CDbl(fnVKneuNS(dEK, cMWST, dNettospanne)))

                rsrs.Edit
                rsrs!KVKNEU = cNewKassenPr
                rsrs.Update

                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        
        pbrStatus.Value = 145
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & "Set  ImportPri.AWM = '97' "
        cSQL = cSQL & " where ETIMERK = 'J' and PREISSCHU = 'N'"
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 150
    End If
    
    '***'
    
    If Combo1.Text = "Tchibo - Format" Then
        If glagn <> 0 Then
            sSQL = "Update ImportPri set AGN =  " & glagn
            gdBase.Execute sSQL, dbFailOnError
        End If
        
        If girab = 0 Then
            sSQL = "Update ImportPri set RABATT_OK = 'N' "
            gdBase.Execute sSQL, dbFailOnError
        End If
        
    End If
    
    
    Dim dEkpr As Double
    
    If Combo1.Text = "Devil - Format" Then
        Dim dDEVFAK As Double
        If IsNumeric(Text2.Text) Then
            dDEVFAK = CDbl(Text2.Text)
        End If
                
    End If
    
    
    pbrStatus.Value = 155
    anzeige "normal", "Für neue Artikel werden freie Artikelnummern ermittelt...", Label3
    sSQL = "Select * from ImportPri where awm = '98' or awm = '95' or awm = '94'"
    
   
   
    lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    pbrStatus.Value = 160
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.RecordCount = 0 Then
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            rsrs.Edit
            rsrs!artnr = lreservArtnr
            
            If Combo1.Text = "Devil - Format" Then
            
                If Not IsNull(rsrs!lekpr) Then
                    dEkpr = rsrs!lekpr
                    If dEkpr > 0 Then
                       rsrs!KVKNEU = dEkpr * dDEVFAK
                    End If
                    
                End If
            
            End If
            rsrs.Update
            
            lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
            If lvergebeArtnr = 0 Then
                
                anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                Exit Function
            Else
                lreservArtnr = lvergebeArtnr
                pbrStatus.Max = 80
                Select Case CInt(Right(CStr(lreservArtnr), 3))
                
                    Case Is = 0
                    pbrStatus.Value = 0
                    Case Is = 200
                    pbrStatus.Value = 20
                    Case Is = 400
                    pbrStatus.Value = 40
                    Case Is = 600
                    pbrStatus.Value = 60
                    Case Is = 800
                    pbrStatus.Value = 80
                End Select
            End If
            

            rsrs.MoveNext
        Loop
    
    End If
    rsrs.Close: Set rsrs = Nothing
    
    
    
    
    'dupliprüfung
    
    
    If NewTableSuchenDBKombi("importdupli", gdBase) Then
    
        sSQL = "Select ean from Importdupli"
        
        Dim cEANa As String
        lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    
        Set rsrs = gdBase.OpenRecordset(sSQL)
        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
            
                If Not IsNull(rsrs!EAN) Then
                    cEANa = rsrs!EAN
                End If
            
                sSQL = "Update ImportPri set artnr = " & lreservArtnr
                sSQL = sSQL & " where ean = '" & cEANa & "'"
                gdBase.Execute sSQL, dbFailOnError
            
                lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
                If lvergebeArtnr = 0 Then
                    
                    anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                    Exit Function
                Else
                    lreservArtnr = lvergebeArtnr
                End If
                
    
                rsrs.MoveNext
            Loop
        
        End If
        rsrs.Close: Set rsrs = Nothing
    
    End If
    
    
    
    
    
    
    
    
    
    
    'Alle EANS auffangen************************************************

    loeschNEW "artean_BU", gdBase

    cSQL = "Create Table artean_BU  "
    cSQL = cSQL & "( ARTNR int"
    cSQL = cSQL & ", EANCH varchar(13)"
    cSQL = cSQL & ", OTHERARTNR1 int"
    cSQL = cSQL & ", OTHERARTNR1_Bestand int"
    
    cSQL = cSQL & ") "
    gdBase.Execute cSQL, dbFailOnError


    cSQL = "Insert into artean_BU Select artnr, val(ean) as EANCH from ImportPri  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU set EANCH = '0' & EANCH  "
    cSQL = cSQL & " where len(EANCH)= 11 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU set OTHERARTNR1 = 0 , OTHERARTNR1_Bestand = 0 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where EANCH = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    
    loeschNEW "artean_Artikel", gdBase

    cSQL = "Create Table artean_Artikel  "
    cSQL = cSQL & "( ARTNR int"
    cSQL = cSQL & ", EANCH varchar(13)"
    cSQL = cSQL & ") "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN = '' where EAN is null  "
    gdBase.Execute cSQL, dbFailOnError

    cSQL = "Insert into artean_Artikel Select artnr, val(ean) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN2 = '' where EAN2 is null  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Insert into artean_Artikel Select artnr, val(ean2) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN3 = '' where EAN3 is null  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Insert into artean_Artikel Select artnr, val(ean3) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    
    If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
        'nich vergessen ARTEAN_K
        cSQL = "Update ARTEAN_K set EAN = '' where EAN is null  "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Insert into artean_Artikel Select artnr, val(ean) as EANCH from ARTEAN_K  "
        gdBase.Execute cSQL, dbFailOnError
    End If
    
    cSQL = "Delete from artean_Artikel where EANCH = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    
    cSQL = "Update artean_Artikel set EANCH = '0' & EANCH "
    cSQL = cSQL & " where len(EANCH)= 11 "
    gdBase.Execute cSQL, dbFailOnError
    
    
    'mit dieser Information holen wir uns aus der Datenbank alle ARTNR(ungleich), die schon solch eine EAN besitzen
    
    cSQL = "Update artean_BU inner join artean_Artikel on artean_BU.EANCH = artean_Artikel.EANCH "
    cSQL = cSQL & " set artean_BU.OTHERARTNR1 = artean_Artikel.ARTNR "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where Artnr = OTHERARTNR1 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where OTHERARTNR1 = 0 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU inner join Artikel on artean_BU.OTHERARTNR1 = Artikel.ARTNR "
    cSQL = cSQL & " set artean_BU.OTHERARTNR1_Bestand = Artikel.Bestand "
    gdBase.Execute cSQL, dbFailOnError
    
    
    'nun zur Vollendung
    'bei Otherartnr1 die EAN rausnehmen und von Otherartnr1 auf Artnr den Bestand addieren
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN2 = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean2 = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN3 = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean3 = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
        cSQL = "Update ARTEAN_K inner join artean_BU on ARTEAN_K.ARTNR = artean_BU.OTHERARTNR1 and ARTEAN_K.EAN = artean_BU.EANCH "
        cSQL = cSQL & " set ARTEAN_K.ean = '' "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Delete from ARTEAN_K where ean = '' "
        gdBase.Execute cSQL, dbFailOnError
    End If
    
    
    'bestand addieren
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.ARTNR  "
    cSQL = cSQL & " set Artikel.Bestand = Artikel.Bestand + artean_BU.OTHERARTNR1_Bestand"
    gdBase.Execute cSQL, dbFailOnError
    
    
    
    

    'Ende ********************** Alle EANS auffangen
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    FormatiereBildschirmdatenKISS = True
    
    Exit Function
LOKAL_ERROR:
    If err.Number = 3372 Or err.Number = 53 Or err.Number = 3376 Or err.Number = 3375 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "FormatiereBildschirmdatenKISS"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
    End If
End Function
Private Function FormatiereBildschirmdatenRING() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim lreservArtnr    As Long
    Dim lvergebeArtnr   As Long
    Dim lMax            As Long
    Dim lcount          As Long

    Dim cSQL            As String
    Dim cEANa           As String

    Dim dNettospanne    As Double
    Dim dEK             As Double
    Dim cMWST           As String
    Dim cNewKassenPr    As String
    
    
    FormatiereBildschirmdatenRING = False
    pbrStatus.Max = 185
    pbrStatus.Value = 5
    
    anzeige "normal", "Neue Artikel werden ermittelt...", Label3
    'Farbe alle auf neu
    sSQL = "Update ImportPri set AWM = '98' "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 10
    
    sSQL = "Create Index AWM on IMPORTPRI (AWM)"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index ean on IMPORTPRI (ean)"
    gdBase.Execute sSQL, dbFailOnError
    
''''    sSQL = "Create Index ean2 on IMPORTPRI (ean2)"
''''    gdBase.Execute sSQL, dbFailOnError
''''
''''    sSQL = "Create Index ean3 on IMPORTPRI (ean3)"
''''    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index linr on IMPORTPRI (linr)"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index libesnr on IMPORTPRI (libesnr)"
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 15
    
    'Artikel mit EAN übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 25
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 35
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 45
    
'''    'ean2
'''    sSQL = "Update ImportPri inner join Artikel on "
'''    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN2 "
'''    sSQL = sSQL & "Set "
'''    sSQL = sSQL & " ImportPri.AWM = '0' "
'''    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
'''    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
'''    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'''    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
'''    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
'''    sSQL = sSQL & " where Importpri.ean  <> '0' "
'''    gdBase.Execute sSQL, dbFailOnError
'''
'''    pbrStatus.Value = 55
'''
'''    sSQL = "Update ImportPri inner join Artikel on "
'''    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN2 "
'''    sSQL = sSQL & "Set "
'''    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
'''    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
'''    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
'''    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'''    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
'''    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
'''    sSQL = sSQL & " where Importpri.ean  <> '0' "
'''    gdBase.Execute sSQL, dbFailOnError
'''
'''    pbrStatus.Value = 65
'''
'''    sSQL = "Update ImportPri inner join Artikel on "
'''    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN2 "
'''    sSQL = sSQL & "Set "
'''    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
'''    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
'''    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
'''    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'''    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
'''    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
'''    sSQL = sSQL & " where Importpri.ean  <> '0' "
'''    gdBase.Execute sSQL, dbFailOnError
'''
'''    pbrStatus.Value = 80
'''
'''    'ean3
'''    sSQL = "Update ImportPri inner join Artikel on "
'''    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN3 "
'''    sSQL = sSQL & "Set "
'''    sSQL = sSQL & " ImportPri.AWM = '0' "
'''    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
'''    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
'''    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'''    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
'''    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
'''    sSQL = sSQL & " where Importpri.ean  <> '0' "
'''    gdBase.Execute sSQL, dbFailOnError
'''
'''    pbrStatus.Value = 95
'''
'''    sSQL = "Update ImportPri inner join Artikel on "
'''    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN3 "
'''    sSQL = sSQL & "Set "
'''    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
'''    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
'''    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
'''    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'''    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
'''    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
'''    sSQL = sSQL & " where Importpri.ean  <> '0' "
'''    gdBase.Execute sSQL, dbFailOnError
'''
'''    pbrStatus.Value = 105
'''
'''    sSQL = "Update ImportPri inner join Artikel on "
'''    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN3 "
'''    sSQL = sSQL & "Set "
'''    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
'''    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
'''    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
'''    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'''    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
'''    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
'''    sSQL = sSQL & " where Importpri.ean  <> '0' "
'''    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 125
    
    
    'where importpri.ean = '0' der macht ein check in artlief
    'auf linr und libesnr stimmigkeit 600283
    
'    sSQL = "Update ImportPri inner join ARTLIEF on "
'    sSQL = sSQL & " ARTLIEF.LINR = ImportPri.LINR and Trim(ARTLIEF.LIBESNR) = Trim(ImportPri.LIBESNR) "
'    sSQL = sSQL & "Set "
'    sSQL = sSQL & " ImportPri.AWM = '0' "
'    sSQL = sSQL & " ,ImportPri.artnr = ARTLIEF.artnr  "
'    sSQL = sSQL & " where Importpri.ean  = '0' "
'    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Update ImportPri inner join ARTLIEF on "
    sSQL = sSQL & " ARTLIEF.LINR = ImportPri.LINR and ARTLIEF.LIBESNR = ImportPri.LIBESNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.artnr = ARTLIEF.artnr  "
    sSQL = sSQL & " where Importpri.ean  = '0' "
    gdBase.Execute sSQL, dbFailOnError

    pbrStatus.Value = 140

    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "

    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "

    sSQL = sSQL & " where Importpri.ean  = '0' and ImportPri.AWM = '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 145
    
    sSQL = "Update ImportPri set AWM = '96' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and not awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 150
    
    sSQL = "Update ImportPri set AWM = '95' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 155
    
    If NewTableSuchenDBKombi("importdupli", gdBase) Then
        sSQL = "Update ImportPri inner join importdupli on "
        sSQL = sSQL & " importdupli.ean = ImportPri.ean set AWM = '94' "
        gdBase.Execute sSQL, dbFailOnError
    End If
    
    cSQL = " Update ImportPri inner join Artikel on "
    cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    cSQL = cSQL & "Set "
    cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
    gdBase.Execute cSQL, dbFailOnError
    
    pbrStatus.Value = 160
    '*****'
    'ab Hier check der Autokalkulierung
    '1. Unter Voreinstellung basierend auf LEK
    If gsSpanne = "LEK" Then
        '2. Etimerk = J
        '3. Not Preisschu
        '4. Feld Nettospanne gefüllt
        '5. LEK gefüllt
        
        cSQL = " Update ImportPri inner join Artikel on "
        cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
        cSQL = cSQL & "Set "
        cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
        cSQL = cSQL & " where ARTIKEL.PREISSCHU = 'N'"
        cSQL = cSQL & " and ImportPri.LEKPR > 0 "
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 165
    
        
        cSQL = " Update ImportPri inner join ARTLIEF on "
        cSQL = cSQL & " ARTLIEF.ARTNR = ImportPri.ARTNR and ARTLIEF.LINR = ImportPri.LINR"
        cSQL = cSQL & " Set "
        cSQL = cSQL & " ImportPri.SPANNE = ARTLIEF.SPANNE "
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 166
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & " Set ETIMERK = 'J' "
        cSQL = cSQL & " where ImportPri.SPANNE > 0 "
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 168
        
        cSQL = "Select * from ImportPri where ETIMERK = 'J'and (not ImportPri.Spanne is null or ImportPri.Spanne <> 0 ) "
        Set rsrs = gdBase.OpenRecordset(cSQL)

        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                'Wir brauchen den LEK aus Mastemp
                'MWST
                'Nettospanne
                If Not IsNull(rsrs!lekpr) Then
                    dEK = rsrs!lekpr
                Else
                    dEK = 0
                End If

                If Not IsNull(rsrs!MWST) Then
                    cMWST = rsrs!MWST
                Else
                    cMWST = "V"
                End If


                If Not IsNull(rsrs!SPANNE) Then
                    dNettospanne = rsrs!SPANNE
                Else
                    dNettospanne = 0
                End If
                cNewKassenPr = Runden(CDbl(fnVKneuNS(dEK, cMWST, dNettospanne)))

                rsrs.Edit
                rsrs!KVKNEU = cNewKassenPr
                rsrs.Update

                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        
        pbrStatus.Value = 170
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & "Set  ImportPri.AWM = '97' "
        cSQL = cSQL & " where ETIMERK = 'J' and PREISSCHU = 'N'"
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 175
    End If
    
    
    Dim dEkpr As Double
    
    pbrStatus.Value = 180
    anzeige "normal", "Für neue Artikel werden freie Artikelnummern ermittelt...", Label3
    
    

    lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    pbrStatus.Value = 185
    
    sSQL = "Select * from ImportPri where awm = '98' or awm = '95' or awm = '94'"
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
    
        rsrs.MoveLast
        pbrStatus.Max = rsrs.RecordCount + 10
        lcount = 10
        pbrStatus.Value = lcount
        
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            rsrs.Edit
            rsrs!artnr = lreservArtnr
            rsrs.Update
            
            lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
            If lvergebeArtnr = 0 Then
                anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                Exit Function
            Else
                lreservArtnr = lvergebeArtnr
                lcount = lcount + 1
                pbrStatus.Value = lcount
            End If
            rsrs.MoveNext
        Loop
    
    End If
    rsrs.Close: Set rsrs = Nothing
    
    
    
    
    'dupliprüfung
    anzeige "normal", "Duplikate beachten...", Label3
    
    If NewTableSuchenDBKombi("importdupli", gdBase) Then
    
        lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    
        sSQL = "Select ean from Importdupli"
        Set rsrs = gdBase.OpenRecordset(sSQL)
        If Not rsrs.EOF Then
            rsrs.MoveLast
            pbrStatus.Max = rsrs.RecordCount + 10
            lcount = 10
            pbrStatus.Value = lcount
            rsrs.MoveFirst
            Do While Not rsrs.EOF
            
                If Not IsNull(rsrs!EAN) Then
                    cEANa = rsrs!EAN
                End If
            
                sSQL = "Update ImportPri set artnr = " & lreservArtnr
                sSQL = sSQL & " where ean = '" & cEANa & "'"
                gdBase.Execute sSQL, dbFailOnError
            
                lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
                If lvergebeArtnr = 0 Then
                    
                    anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                    Exit Function
                Else
                    lreservArtnr = lvergebeArtnr
                    lcount = lcount + 1
                    pbrStatus.Value = lcount
                End If
                rsrs.MoveNext
            Loop
        
        End If
        rsrs.Close: Set rsrs = Nothing
    
    End If
    
    FormatiereBildschirmdatenRING = True
    
    Exit Function
LOKAL_ERROR:
    If err.Number = 3372 Or err.Number = 53 Or err.Number = 3376 Or err.Number = 3375 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "FormatiereBildschirmdatenRING"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
    End If
End Function
Private Function FormatiereBildschirmdatenREWE() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim lreservArtnr    As Long
    Dim lvergebeArtnr   As Long
    Dim lMax            As Long
    Dim lcount          As Long

    Dim cSQL            As String
    Dim cEANa           As String

    Dim dNettospanne    As Double
    Dim dEK             As Double
    Dim cMWST           As String
    Dim cNewKassenPr    As String
    
    
    FormatiereBildschirmdatenREWE = False
    pbrStatus.Max = 185
    pbrStatus.Value = 5
    
    anzeige "normal", "Neue Artikel werden ermittelt...", Label3
    'Farbe alle auf neu
    sSQL = "Update ImportPri set AWM = '98' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 10
    
    anzeige "normal", "Neue Artikel werden ermittelt(1)......", Label3
    
    sSQL = "Create Index AWM on IMPORTPRI (AWM)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(2).........", Label3
    
    sSQL = "Create Index ean on IMPORTPRI (ean)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(3)............", Label3
    
    sSQL = "Create Index linr on IMPORTPRI (linr)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(4)...", Label3
    
    sSQL = "Create Index libesnr on IMPORTPRI (libesnr)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(5)......", Label3
    pbrStatus.Value = 15
    
    'Artikel mit EAN übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(6).........", Label3
    
    pbrStatus.Value = 25
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(7)............", Label3
    
    pbrStatus.Value = 35
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(8)...", Label3
    pbrStatus.Value = 45
    
    sSQL = "Update ImportPri inner join ARTLIEF on "
    sSQL = sSQL & " ARTLIEF.LINR = ImportPri.LINR and ARTLIEF.LIBESNR = ImportPri.LIBESNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.artnr = ARTLIEF.artnr  "
    sSQL = sSQL & " where Importpri.artnr is null "
'    sSQL = sSQL & " where Importpri.ean  = '0' "
    gdBase.Execute sSQL, dbFailOnError

    anzeige "normal", "Neue Artikel werden ermittelt(9)......", Label3

    pbrStatus.Value = 140

    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  = '0' and ImportPri.AWM = '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(10).........", Label3
    
    pbrStatus.Value = 145
    
    sSQL = "Update ImportPri set AWM = '96' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and not awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(11)............", Label3
    
    pbrStatus.Value = 150
    
    sSQL = "Update ImportPri set AWM = '95' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(12)...", Label3
    
    pbrStatus.Value = 155
    
'    If NewTableSuchenDBKombi("importdupli", gdBase) Then
'        sSQL = "Update ImportPri inner join importdupli on "
'        sSQL = sSQL & " importdupli.ean = ImportPri.ean set AWM = '94' "
'        gdBase.Execute sSQL, dbFailOnError
'    End If
    
    cSQL = " Update ImportPri inner join Artikel on "
    cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    cSQL = cSQL & "Set "
    cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
    gdBase.Execute cSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(13)......", Label3
    pbrStatus.Value = 160
    '*****'
    'ab Hier check der Autokalkulierung
    '1. Unter Voreinstellung basierend auf LEK
    If gsSpanne = "LEK" Then
        '2. Etimerk = J
        '3. Not Preisschu
        '4. Feld Nettospanne gefüllt
        '5. LEK gefüllt
        
        cSQL = " Update ImportPri inner join Artikel on "
        cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
        cSQL = cSQL & "Set "
        cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
        cSQL = cSQL & " where ARTIKEL.PREISSCHU = 'N'"
        cSQL = cSQL & " and ImportPri.LEKPR > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 165
    
        cSQL = " Update ImportPri inner join ARTLIEF on "
        cSQL = cSQL & " ARTLIEF.ARTNR = ImportPri.ARTNR and ARTLIEF.LINR = ImportPri.LINR"
        cSQL = cSQL & " Set "
        cSQL = cSQL & " ImportPri.SPANNE = ARTLIEF.SPANNE "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 166
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & " Set ETIMERK = 'J' "
        cSQL = cSQL & " where ImportPri.SPANNE > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 168
        
        cSQL = "Select * from ImportPri where ETIMERK = 'J'and (not ImportPri.Spanne is null or ImportPri.Spanne <> 0 ) "
        Set rsrs = gdBase.OpenRecordset(cSQL)

        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                'Wir brauchen den LEK aus Mastemp
                'MWST
                'Nettospanne
                If Not IsNull(rsrs!lekpr) Then
                    dEK = rsrs!lekpr
                Else
                    dEK = 0
                End If

                If Not IsNull(rsrs!MWST) Then
                    cMWST = rsrs!MWST
                Else
                    cMWST = "V"
                End If

                If Not IsNull(rsrs!SPANNE) Then
                    dNettospanne = rsrs!SPANNE
                Else
                    dNettospanne = 0
                End If
                cNewKassenPr = Runden(CDbl(fnVKneuNS(dEK, cMWST, dNettospanne)))

                rsrs.Edit
                rsrs!KVKNEU = cNewKassenPr
                rsrs.Update
                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        
        pbrStatus.Value = 170
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & "Set  ImportPri.AWM = '97' "
        cSQL = cSQL & " where ETIMERK = 'J' and PREISSCHU = 'N'"
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 175
    End If
    
    sSQL = "Delete from ImportPri where bezeich is null"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from ImportPri where bezeich = ''"
    gdBase.Execute sSQL, dbFailOnError
    
    Dim dEkpr As Double
    
    pbrStatus.Value = 180
    anzeige "normal", "Für neue Artikel werden freie Artikelnummern ermittelt...", Label3
    
    lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    pbrStatus.Value = 185
    
    sSQL = "Select * from ImportPri where awm = '98' or awm = '95' or awm = '94'"
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
    
        rsrs.MoveLast
        pbrStatus.Max = rsrs.RecordCount + 10
        lcount = 10
        pbrStatus.Value = lcount
        
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            rsrs.Edit
            rsrs!artnr = lreservArtnr
            rsrs.Update
            
            lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
            If lvergebeArtnr = 0 Then
                anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                Exit Function
            Else
                lreservArtnr = lvergebeArtnr
                lcount = lcount + 1
                pbrStatus.Value = lcount
            End If
            rsrs.MoveNext
        Loop
    
    End If
    rsrs.Close: Set rsrs = Nothing
    
    'Alle EANS auffangen************************************************

    loeschNEW "artean_BU", gdBase

    cSQL = "Create Table artean_BU  "
    cSQL = cSQL & "( ARTNR int"
    cSQL = cSQL & ", EANCH varchar(13)"
    cSQL = cSQL & ", OTHERARTNR1 int"
    cSQL = cSQL & ", OTHERARTNR1_Bestand int"
    
    cSQL = cSQL & ") "
    gdBase.Execute cSQL, dbFailOnError


    cSQL = "Insert into artean_BU Select artnr, val(ean) as EANCH from ImportPri  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU set EANCH = '0' & EANCH  "
    cSQL = cSQL & " where len(EANCH)= 11 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU set OTHERARTNR1 = 0 , OTHERARTNR1_Bestand = 0 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where EANCH = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    
    loeschNEW "artean_Artikel", gdBase

    cSQL = "Create Table artean_Artikel  "
    cSQL = cSQL & "( ARTNR int"
    cSQL = cSQL & ", EANCH varchar(13)"
    cSQL = cSQL & ") "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN = '' where EAN is null  "
    gdBase.Execute cSQL, dbFailOnError

    cSQL = "Insert into artean_Artikel Select artnr, val(ean) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN2 = '' where EAN2 is null  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Insert into artean_Artikel Select artnr, val(ean2) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN3 = '' where EAN3 is null  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Insert into artean_Artikel Select artnr, val(ean3) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    
    If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
        'nich vergessen ARTEAN_K
        cSQL = "Update ARTEAN_K set EAN = '' where EAN is null  "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Insert into artean_Artikel Select artnr, val(ean) as EANCH from ARTEAN_K  "
        gdBase.Execute cSQL, dbFailOnError
    End If
    
    cSQL = "Delete from artean_Artikel where EANCH = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    
    cSQL = "Update artean_Artikel set EANCH = '0' & EANCH "
    cSQL = cSQL & " where len(EANCH)= 11 "
    gdBase.Execute cSQL, dbFailOnError
    
    
    'mit dieser Information holen wir uns aus der Datenbank alle ARTNR(ungleich), die schon solch eine EAN besitzen
    
    cSQL = "Update artean_BU inner join artean_Artikel on artean_BU.EANCH = artean_Artikel.EANCH "
    cSQL = cSQL & " set artean_BU.OTHERARTNR1 = artean_Artikel.ARTNR "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where Artnr = OTHERARTNR1 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where OTHERARTNR1 = 0 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU inner join Artikel on artean_BU.OTHERARTNR1 = Artikel.ARTNR "
    cSQL = cSQL & " set artean_BU.OTHERARTNR1_Bestand = Artikel.Bestand "
    gdBase.Execute cSQL, dbFailOnError
    
    
    'nun zur Vollendung
    'bei Otherartnr1 die EAN rausnehmen und von Otherartnr1 auf Artnr den Bestand addieren
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN2 = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean2 = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN3 = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean3 = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
        cSQL = "Update ARTEAN_K inner join artean_BU on ARTEAN_K.ARTNR = artean_BU.OTHERARTNR1 and ARTEAN_K.EAN = artean_BU.EANCH "
        cSQL = cSQL & " set ARTEAN_K.ean = '' "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Delete from ARTEAN_K where ean = '' "
        gdBase.Execute cSQL, dbFailOnError
    End If
    
    
    'bestand addieren
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.ARTNR  "
    cSQL = cSQL & " set Artikel.Bestand = Artikel.Bestand + artean_BU.OTHERARTNR1_Bestand"
    gdBase.Execute cSQL, dbFailOnError
    
    
    
    

    'Ende ********************** Alle EANS auffangen
    
    FormatiereBildschirmdatenREWE = True
    
    Exit Function
LOKAL_ERROR:

        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "FormatiereBildschirmdatenREWE"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1

End Function
Private Function FormatiereBildschirmdatenSIE() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim lreservArtnr    As Long
    Dim lvergebeArtnr   As Long
    Dim lMax            As Long
    Dim lcount          As Long

    Dim cSQL            As String
    Dim cEANa           As String

    Dim dNettospanne    As Double
    Dim dEK             As Double
    Dim cMWST           As String
    Dim cNewKassenPr    As String
    
    
    FormatiereBildschirmdatenSIE = False
    pbrStatus.Max = 185
    pbrStatus.Value = 5
    
    anzeige "normal", "Neue Artikel werden ermittelt...", Label3
    'Farbe alle auf neu
    sSQL = "Update ImportPri set AWM = '98' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 10
    
    anzeige "normal", "Neue Artikel werden ermittelt(1)......", Label3
    
    sSQL = "Create Index AWM on IMPORTPRI (AWM)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(2).........", Label3
    
    sSQL = "Create Index ean on IMPORTPRI (ean)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(3)............", Label3
    
    sSQL = "Create Index linr on IMPORTPRI (linr)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(4)...", Label3
    
    sSQL = "Create Index libesnr on IMPORTPRI (libesnr)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(5)......", Label3
    pbrStatus.Value = 15
    
    'Artikel mit EAN übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(6).........", Label3
    
    pbrStatus.Value = 25
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(7)............", Label3
    
    pbrStatus.Value = 35
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(8)...", Label3
    pbrStatus.Value = 45
    
    sSQL = "Update ImportPri inner join ARTLIEF on "
    sSQL = sSQL & " ARTLIEF.LINR = ImportPri.LINR and ARTLIEF.LIBESNR = ImportPri.LIBESNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.artnr = ARTLIEF.artnr  "
    sSQL = sSQL & " where Importpri.artnr is null "
'    sSQL = sSQL & " where Importpri.ean  = '0' "
    gdBase.Execute sSQL, dbFailOnError

    anzeige "normal", "Neue Artikel werden ermittelt(9)......", Label3

    pbrStatus.Value = 140

    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  = '0' and ImportPri.AWM = '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(10).........", Label3
    
    pbrStatus.Value = 145
    
    sSQL = "Update ImportPri set AWM = '96' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and not awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(11)............", Label3
    
    pbrStatus.Value = 150
    
    sSQL = "Update ImportPri set AWM = '95' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(12)...", Label3
    
    pbrStatus.Value = 155
    
'    If NewTableSuchenDBKombi("importdupli", gdBase) Then
'        sSQL = "Update ImportPri inner join importdupli on "
'        sSQL = sSQL & " importdupli.ean = ImportPri.ean set AWM = '94' "
'        gdBase.Execute sSQL, dbFailOnError
'    End If
    
    cSQL = " Update ImportPri inner join Artikel on "
    cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    cSQL = cSQL & "Set "
    cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
    gdBase.Execute cSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(13)......", Label3
    pbrStatus.Value = 160
    '*****'
    'ab Hier check der Autokalkulierung
    '1. Unter Voreinstellung basierend auf LEK
    If gsSpanne = "LEK" Then
        '2. Etimerk = J
        '3. Not Preisschu
        '4. Feld Nettospanne gefüllt
        '5. LEK gefüllt
        
        cSQL = " Update ImportPri inner join Artikel on "
        cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
        cSQL = cSQL & "Set "
        cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
        cSQL = cSQL & " where ARTIKEL.PREISSCHU = 'N'"
        cSQL = cSQL & " and ImportPri.LEKPR > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 165
    
        cSQL = " Update ImportPri inner join ARTLIEF on "
        cSQL = cSQL & " ARTLIEF.ARTNR = ImportPri.ARTNR and ARTLIEF.LINR = ImportPri.LINR"
        cSQL = cSQL & " Set "
        cSQL = cSQL & " ImportPri.SPANNE = ARTLIEF.SPANNE "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 166
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & " Set ETIMERK = 'J' "
        cSQL = cSQL & " where ImportPri.SPANNE > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 168
        
        cSQL = "Select * from ImportPri where ETIMERK = 'J'and (not ImportPri.Spanne is null or ImportPri.Spanne <> 0 ) "
        Set rsrs = gdBase.OpenRecordset(cSQL)

        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                'Wir brauchen den LEK aus Mastemp
                'MWST
                'Nettospanne
                If Not IsNull(rsrs!lekpr) Then
                    dEK = rsrs!lekpr
                Else
                    dEK = 0
                End If

                If Not IsNull(rsrs!MWST) Then
                    cMWST = rsrs!MWST
                Else
                    cMWST = "V"
                End If

                If Not IsNull(rsrs!SPANNE) Then
                    dNettospanne = rsrs!SPANNE
                Else
                    dNettospanne = 0
                End If
                cNewKassenPr = Runden(CDbl(fnVKneuNS(dEK, cMWST, dNettospanne)))

                rsrs.Edit
                rsrs!KVKNEU = cNewKassenPr
                rsrs.Update
                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        
        pbrStatus.Value = 170
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & "Set  ImportPri.AWM = '97' "
        cSQL = cSQL & " where ETIMERK = 'J' and PREISSCHU = 'N'"
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 175
    End If
    
    sSQL = "Delete from ImportPri where bezeich is null"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from ImportPri where bezeich = ''"
    gdBase.Execute sSQL, dbFailOnError
    
    
    'Hier neue Preise auf 1000 setzen
    sSQL = "Update ImportPri set KVKNEU = 1000 "
    sSQL = sSQL & " where awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    
    
    
    Dim dEkpr As Double
    
    pbrStatus.Value = 180
    anzeige "normal", "Für neue Artikel werden freie Artikelnummern ermittelt...", Label3
    
    lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    pbrStatus.Value = 185
    
    sSQL = "Select * from ImportPri where awm = '98' or awm = '95' or awm = '94'"
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
    
        rsrs.MoveLast
        pbrStatus.Max = rsrs.RecordCount + 10
        lcount = 10
        pbrStatus.Value = lcount
        
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            rsrs.Edit
            rsrs!artnr = lreservArtnr
            rsrs.Update
            
            lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
            If lvergebeArtnr = 0 Then
                anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                Exit Function
            Else
                lreservArtnr = lvergebeArtnr
                lcount = lcount + 1
                pbrStatus.Value = lcount
            End If
            rsrs.MoveNext
        Loop
    
    End If
    rsrs.Close: Set rsrs = Nothing
    
    'Alle EANS auffangen************************************************

    loeschNEW "artean_BU", gdBase

    cSQL = "Create Table artean_BU  "
    cSQL = cSQL & "( ARTNR int"
    cSQL = cSQL & ", EANCH varchar(13)"
    cSQL = cSQL & ", OTHERARTNR1 int"
    cSQL = cSQL & ", OTHERARTNR1_Bestand int"
    
    cSQL = cSQL & ") "
    gdBase.Execute cSQL, dbFailOnError


    cSQL = "Insert into artean_BU Select artnr, val(ean) as EANCH from ImportPri  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU set EANCH = '0' & EANCH  "
    cSQL = cSQL & " where len(EANCH)= 11 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU set OTHERARTNR1 = 0 , OTHERARTNR1_Bestand = 0 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where EANCH = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    
    loeschNEW "artean_Artikel", gdBase

    cSQL = "Create Table artean_Artikel  "
    cSQL = cSQL & "( ARTNR int"
    cSQL = cSQL & ", EANCH varchar(13)"
    cSQL = cSQL & ") "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN = '' where EAN is null  "
    gdBase.Execute cSQL, dbFailOnError

    cSQL = "Insert into artean_Artikel Select artnr, val(ean) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN2 = '' where EAN2 is null  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Insert into artean_Artikel Select artnr, val(ean2) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN3 = '' where EAN3 is null  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Insert into artean_Artikel Select artnr, val(ean3) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    
    If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
        'nich vergessen ARTEAN_K
        cSQL = "Update ARTEAN_K set EAN = '' where EAN is null  "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Insert into artean_Artikel Select artnr, val(ean) as EANCH from ARTEAN_K  "
        gdBase.Execute cSQL, dbFailOnError
    End If
    
    cSQL = "Delete from artean_Artikel where EANCH = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    
    cSQL = "Update artean_Artikel set EANCH = '0' & EANCH "
    cSQL = cSQL & " where len(EANCH)= 11 "
    gdBase.Execute cSQL, dbFailOnError
    
    
    'mit dieser Information holen wir uns aus der Datenbank alle ARTNR(ungleich), die schon solch eine EAN besitzen
    
    cSQL = "Update artean_BU inner join artean_Artikel on artean_BU.EANCH = artean_Artikel.EANCH "
    cSQL = cSQL & " set artean_BU.OTHERARTNR1 = artean_Artikel.ARTNR "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where Artnr = OTHERARTNR1 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where OTHERARTNR1 = 0 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU inner join Artikel on artean_BU.OTHERARTNR1 = Artikel.ARTNR "
    cSQL = cSQL & " set artean_BU.OTHERARTNR1_Bestand = Artikel.Bestand "
    gdBase.Execute cSQL, dbFailOnError
    
    
    'nun zur Vollendung
    'bei Otherartnr1 die EAN rausnehmen und von Otherartnr1 auf Artnr den Bestand addieren
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN2 = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean2 = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN3 = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean3 = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
        cSQL = "Update ARTEAN_K inner join artean_BU on ARTEAN_K.ARTNR = artean_BU.OTHERARTNR1 and ARTEAN_K.EAN = artean_BU.EANCH "
        cSQL = cSQL & " set ARTEAN_K.ean = '' "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Delete from ARTEAN_K where ean = '' "
        gdBase.Execute cSQL, dbFailOnError
    End If
    
    
    'bestand addieren
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.ARTNR  "
    cSQL = cSQL & " set Artikel.Bestand = Artikel.Bestand + artean_BU.OTHERARTNR1_Bestand"
    gdBase.Execute cSQL, dbFailOnError
    
    
    
    

    'Ende ********************** Alle EANS auffangen
    
    FormatiereBildschirmdatenSIE = True
    
    Exit Function
LOKAL_ERROR:

        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "FormatiereBildschirmdatenSIE"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1

End Function
Private Function FormatiereBildschirmdatenEDEK() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim lreservArtnr    As Long
    Dim lvergebeArtnr   As Long
    Dim lMax            As Long
    Dim lcount          As Long

    Dim cSQL            As String
    Dim cEANa           As String

    Dim dNettospanne    As Double
    Dim dEK             As Double
    Dim cMWST           As String
    Dim cNewKassenPr    As String
    
    
    FormatiereBildschirmdatenEDEK = False
    pbrStatus.Max = 185
    pbrStatus.Value = 5
    
    anzeige "normal", "Neue Artikel werden ermittelt...", Label3
    'Farbe alle auf neu
    sSQL = "Update ImportPri set AWM = '98' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 10
    
    anzeige "normal", "Neue Artikel werden ermittelt(1)......", Label3
    
    sSQL = "Create Index AWM on IMPORTPRI (AWM)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(2).........", Label3
    
    sSQL = "Create Index ean on IMPORTPRI (ean)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(3)............", Label3
    
    sSQL = "Create Index linr on IMPORTPRI (linr)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(4)...", Label3
    
    sSQL = "Create Index libesnr on IMPORTPRI (libesnr)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(5)......", Label3
    pbrStatus.Value = 15
    
    'Artikel mit EAN übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(6).........", Label3
    
    pbrStatus.Value = 25
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(7)............", Label3
    
    pbrStatus.Value = 35
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(8)...", Label3
    pbrStatus.Value = 45
    
    sSQL = "Update ImportPri inner join ARTLIEF on "
    sSQL = sSQL & " ARTLIEF.LINR = ImportPri.LINR and ARTLIEF.LIBESNR = ImportPri.LIBESNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.artnr = ARTLIEF.artnr  "
    sSQL = sSQL & " where Importpri.artnr is null "
'    sSQL = sSQL & " where Importpri.ean  = '0' "
    gdBase.Execute sSQL, dbFailOnError

    anzeige "normal", "Neue Artikel werden ermittelt(9)......", Label3

    pbrStatus.Value = 140

    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  = '0' and ImportPri.AWM = '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(10).........", Label3
    
    pbrStatus.Value = 145
    
    sSQL = "Update ImportPri set AWM = '96' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and not awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(11)............", Label3
    
    pbrStatus.Value = 150
    
    sSQL = "Update ImportPri set AWM = '95' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(12)...", Label3
    
    pbrStatus.Value = 155
    
'    If NewTableSuchenDBKombi("importdupli", gdBase) Then
'        sSQL = "Update ImportPri inner join importdupli on "
'        sSQL = sSQL & " importdupli.ean = ImportPri.ean set AWM = '94' "
'        gdBase.Execute sSQL, dbFailOnError
'    End If
    
    cSQL = " Update ImportPri inner join Artikel on "
    cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    cSQL = cSQL & "Set "
    cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
    gdBase.Execute cSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(13)......", Label3
    pbrStatus.Value = 160
    '*****'
    'ab Hier check der Autokalkulierung
    '1. Unter Voreinstellung basierend auf LEK
    If gsSpanne = "LEK" Then
        '2. Etimerk = J
        '3. Not Preisschu
        '4. Feld Nettospanne gefüllt
        '5. LEK gefüllt
        
        cSQL = " Update ImportPri inner join Artikel on "
        cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
        cSQL = cSQL & "Set "
        cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
        cSQL = cSQL & " where ARTIKEL.PREISSCHU = 'N'"
        cSQL = cSQL & " and ImportPri.LEKPR > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 165
    
        cSQL = " Update ImportPri inner join ARTLIEF on "
        cSQL = cSQL & " ARTLIEF.ARTNR = ImportPri.ARTNR and ARTLIEF.LINR = ImportPri.LINR"
        cSQL = cSQL & " Set "
        cSQL = cSQL & " ImportPri.SPANNE = ARTLIEF.SPANNE "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 166
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & " Set ETIMERK = 'J' "
        cSQL = cSQL & " where ImportPri.SPANNE > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 168
        
        cSQL = "Select * from ImportPri where ETIMERK = 'J'and (not ImportPri.Spanne is null or ImportPri.Spanne <> 0 ) "
        Set rsrs = gdBase.OpenRecordset(cSQL)

        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                'Wir brauchen den LEK aus Mastemp
                'MWST
                'Nettospanne
                If Not IsNull(rsrs!lekpr) Then
                    dEK = rsrs!lekpr
                Else
                    dEK = 0
                End If

                If Not IsNull(rsrs!MWST) Then
                    cMWST = rsrs!MWST
                Else
                    cMWST = "V"
                End If

                If Not IsNull(rsrs!SPANNE) Then
                    dNettospanne = rsrs!SPANNE
                Else
                    dNettospanne = 0
                End If
                cNewKassenPr = Runden(CDbl(fnVKneuNS(dEK, cMWST, dNettospanne)))

                rsrs.Edit
                rsrs!KVKNEU = cNewKassenPr
                rsrs.Update
                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        
        pbrStatus.Value = 170
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & "Set  ImportPri.AWM = '97' "
        cSQL = cSQL & " where ETIMERK = 'J' and PREISSCHU = 'N'"
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 175
    End If
    
    sSQL = "Delete from ImportPri where bezeich is null"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from ImportPri where bezeich = ''"
    gdBase.Execute sSQL, dbFailOnError
    
    Dim dEkpr As Double
    
    pbrStatus.Value = 180
    anzeige "normal", "Für neue Artikel werden freie Artikelnummern ermittelt...", Label3
    
    lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    pbrStatus.Value = 185
    
    sSQL = "Select * from ImportPri where awm = '98' or awm = '95' or awm = '94'"
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
    
        rsrs.MoveLast
        pbrStatus.Max = rsrs.RecordCount + 10
        lcount = 10
        pbrStatus.Value = lcount
        
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            rsrs.Edit
            rsrs!artnr = lreservArtnr
            rsrs.Update
            
            lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
            If lvergebeArtnr = 0 Then
                anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                Exit Function
            Else
                lreservArtnr = lvergebeArtnr
                lcount = lcount + 1
                pbrStatus.Value = lcount
            End If
            rsrs.MoveNext
        Loop
    
    End If
    rsrs.Close: Set rsrs = Nothing
    
''    'dupliprüfung
''    anzeige "normal", "Duplikate beachten..."
    
''    If NewTableSuchenDBKombi("importdupli", gdBase) Then
''
''        lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
''
''        sSQL = "Select ean from Importdupli"
''        Set rsrs = gdBase.OpenRecordset(sSQL)
''        If Not rsrs.EOF Then
''            rsrs.MoveLast
''            pbrStatus.Max = rsrs.RecordCount + 10
''            lcount = 10
''            pbrStatus.Value = lcount
''            rsrs.MoveFirst
''            Do While Not rsrs.EOF
''
''                If Not IsNull(rsrs!EAN) Then
''                    cEANa = rsrs!EAN
''                End If
''
''                sSQL = "Update ImportPri set artnr = " & lreservArtnr
''                sSQL = sSQL & " where ean = '" & cEANa & "'"
''                gdBase.Execute sSQL, dbFailOnError
''
''                lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
''                If lvergebeArtnr = 0 Then
''
''                    anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen)."
''                    Exit Function
''                Else
''                    lreservArtnr = lvergebeArtnr
''                    lcount = lcount + 1
''                    pbrStatus.Value = lcount
''                End If
''                rsrs.MoveNext
''            Loop
''
''        End If
''        rsrs.Close: Set rsrs = Nothing
''
''    End If
    
    FormatiereBildschirmdatenEDEK = True
    
    Exit Function
LOKAL_ERROR:
'    If err.Number = 3372 Or err.Number = 53 Or err.Number = 3376 Or err.Number = 3375 Then
'        Resume Next
'    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "FormatiereBildschirmdatenEDEK"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
'    End If
End Function
Private Function FormatiereBildschirmdatenLüning() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim lreservArtnr    As Long
    Dim lvergebeArtnr   As Long
    Dim lMax            As Long
    Dim lcount          As Long

    Dim cSQL            As String
    Dim cEANa           As String

    Dim dNettospanne    As Double
    Dim dEK             As Double
    Dim cMWST           As String
    Dim cNewKassenPr    As String
    
    
    FormatiereBildschirmdatenLüning = False
    pbrStatus.Max = 185
    pbrStatus.Value = 5
    
    anzeige "normal", "Neue Artikel werden ermittelt...", Label3
    'Farbe alle auf neu
    sSQL = "Update ImportPri set AWM = '98' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 10
    
    anzeige "normal", "Neue Artikel werden ermittelt(1)......", Label3
    
    sSQL = "Create Index AWM on IMPORTPRI (AWM)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(2).........", Label3
    
    sSQL = "Create Index ean on IMPORTPRI (ean)"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index ean2 on IMPORTPRI (ean2)"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index ean3 on IMPORTPRI (ean3)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(3)............", Label3
    
    sSQL = "Create Index linr on IMPORTPRI (linr)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(4)...", Label3
    
    sSQL = "Create Index libesnr on IMPORTPRI (libesnr)"
    gdBase.Execute sSQL, dbFailOnError
    
    
    sSQL = "Update IMPORTPRI set ean2 = '0' where ean2 = ''"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Update IMPORTPRI set ean2 = '0' where ean2 is null "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Update IMPORTPRI set ean3 = '0' where ean3 = ''"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Update IMPORTPRI set ean3 = '0' where ean3 is null "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(5)......", Label3
    pbrStatus.Value = 15
    
    'Artikel mit EAN übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    sSQL = sSQL & " and Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(6).........", Label3
    
    pbrStatus.Value = 25
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    sSQL = sSQL & " and Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(7)............", Label3
    
    pbrStatus.Value = 35
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    sSQL = sSQL & " and Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    
    
    
    
    
    
    
    
    
    
    'Artikel mit EAN übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN2 "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean2  <> '0' "
    sSQL = sSQL & " and Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(6).........", Label3
    
    pbrStatus.Value = 25
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN2 "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean2  <> '0' "
    sSQL = sSQL & " and Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(7)............", Label3
    
    pbrStatus.Value = 35
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN2 "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean2  <> '0' "
    sSQL = sSQL & " and Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    'Artikel mit EAN übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN3 "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean3  <> '0' "
    sSQL = sSQL & " and Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(6).........", Label3
    
    pbrStatus.Value = 25
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN3 "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean3  <> '0' "
    sSQL = sSQL & " and Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(7)............", Label3
    
    pbrStatus.Value = 35
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN3 "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean3  <> '0' "
    sSQL = sSQL & " and Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    anzeige "normal", "Neue Artikel werden ermittelt(8)...", Label3
    pbrStatus.Value = 40
    
    
    
    sSQL = "Update ImportPri inner join ARTEAN_K on "
    sSQL = sSQL & " ARTEAN_K.EAN = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.artnr = ARTEAN_K.artnr  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    sSQL = sSQL & " and Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    
    pbrStatus.Value = 45
    
    
    sSQL = "Update ImportPri inner join ARTLIEF on "
    sSQL = sSQL & " ARTLIEF.LINR = ImportPri.LINR and ARTLIEF.LIBESNR = ImportPri.LIBESNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.artnr = ARTLIEF.artnr  "
    sSQL = sSQL & " where Importpri.artnr is null "
'    sSQL = sSQL & " where Importpri.ean  = '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    
    sSQL = "Delete from ImportPri "
    sSQL = sSQL & " where Importpri.artnr is null "
    sSQL = sSQL & " and  Importpri.ean is null "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from ImportPri "
    sSQL = sSQL & " where Importpri.artnr is null "
    sSQL = sSQL & " and  Importpri.ean = '' "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from ImportPri "
    sSQL = sSQL & " where Importpri.artnr is null "
    sSQL = sSQL & " and  Importpri.ean = '0' "
    gdBase.Execute sSQL, dbFailOnError

    anzeige "normal", "Neue Artikel werden ermittelt(9)......", Label3

    pbrStatus.Value = 140

    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  = '0' and ImportPri.AWM = '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(10).........", Label3
    
    pbrStatus.Value = 145
    
    sSQL = "Update ImportPri set AWM = '96' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and not awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(11)............", Label3
    
    pbrStatus.Value = 150
    
    sSQL = "Update ImportPri set AWM = '95' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(12)...", Label3
    
    pbrStatus.Value = 155
    
'    If NewTableSuchenDBKombi("importdupli", gdBase) Then
'        sSQL = "Update ImportPri inner join importdupli on "
'        sSQL = sSQL & " importdupli.ean = ImportPri.ean set AWM = '94' "
'        gdBase.Execute sSQL, dbFailOnError
'    End If
    
    cSQL = " Update ImportPri inner join Artikel on "
    cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    cSQL = cSQL & "Set "
    cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
    gdBase.Execute cSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(13)......", Label3
    pbrStatus.Value = 160
    '*****'
    'ab Hier check der Autokalkulierung
    '1. Unter Voreinstellung basierend auf LEK
    If gsSpanne = "LEK" Then
        '2. Etimerk = J
        '3. Not Preisschu
        '4. Feld Nettospanne gefüllt
        '5. LEK gefüllt
        
        cSQL = " Update ImportPri inner join Artikel on "
        cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
        cSQL = cSQL & "Set "
        cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
        cSQL = cSQL & " where ARTIKEL.PREISSCHU = 'N'"
        cSQL = cSQL & " and ImportPri.LEKPR > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 165
    
        cSQL = " Update ImportPri inner join ARTLIEF on "
        cSQL = cSQL & " ARTLIEF.ARTNR = ImportPri.ARTNR and ARTLIEF.LINR = ImportPri.LINR"
        cSQL = cSQL & " Set "
        cSQL = cSQL & " ImportPri.SPANNE = ARTLIEF.SPANNE "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 166
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & " Set ETIMERK = 'J' "
        cSQL = cSQL & " where ImportPri.SPANNE > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 168
        
        cSQL = "Select * from ImportPri where ETIMERK = 'J'and (not ImportPri.Spanne is null or ImportPri.Spanne <> 0 ) "
        Set rsrs = gdBase.OpenRecordset(cSQL)

        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                'Wir brauchen den LEK aus Mastemp
                'MWST
                'Nettospanne
                If Not IsNull(rsrs!lekpr) Then
                    dEK = rsrs!lekpr
                Else
                    dEK = 0
                End If

                If Not IsNull(rsrs!MWST) Then
                    cMWST = rsrs!MWST
                Else
                    cMWST = "V"
                End If

                If Not IsNull(rsrs!SPANNE) Then
                    dNettospanne = rsrs!SPANNE
                Else
                    dNettospanne = 0
                End If
                cNewKassenPr = Runden(CDbl(fnVKneuNS(dEK, cMWST, dNettospanne)))

                rsrs.Edit
                rsrs!KVKNEU = cNewKassenPr
                rsrs.Update
                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        
        pbrStatus.Value = 170
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & "Set  ImportPri.AWM = '97' "
        cSQL = cSQL & " where ETIMERK = 'J' and PREISSCHU = 'N'"
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 175
    End If
    
    sSQL = "Delete from ImportPri where bezeich is null"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from ImportPri where bezeich = ''"
    gdBase.Execute sSQL, dbFailOnError
    
    Dim dEkpr As Double
    
    pbrStatus.Value = 180
    anzeige "normal", "Für neue Artikel werden freie Artikelnummern ermittelt...", Label3
    
    lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    pbrStatus.Value = 185
    
    sSQL = "Select * from ImportPri where awm = '98' or awm = '95' or awm = '94'"
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
    
        rsrs.MoveLast
        pbrStatus.Max = rsrs.RecordCount + 10
        lcount = 10
        pbrStatus.Value = lcount
        
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            rsrs.Edit
            rsrs!artnr = lreservArtnr
            rsrs.Update
            
            lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
            If lvergebeArtnr = 0 Then
                anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                Exit Function
            Else
                lreservArtnr = lvergebeArtnr
                lcount = lcount + 1
                pbrStatus.Value = lcount
            End If
            rsrs.MoveNext
        Loop
    
    End If
    rsrs.Close: Set rsrs = Nothing
    
    
    
    
    
    
    
    
    
    'Alle EANS auffangen************************************************

    loeschNEW "artean_BU", gdBase

    cSQL = "Create Table artean_BU  "
    cSQL = cSQL & "( ARTNR int"
    cSQL = cSQL & ", EANCH varchar(13)"
    cSQL = cSQL & ", OTHERARTNR1 int"
    cSQL = cSQL & ", OTHERARTNR1_Bestand int"
    
    cSQL = cSQL & ") "
    gdBase.Execute cSQL, dbFailOnError


    cSQL = "Insert into artean_BU Select artnr, val(ean) as EANCH from ImportPri  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU set EANCH = '0' & EANCH  "
    cSQL = cSQL & " where len(EANCH)= 11 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU set OTHERARTNR1 = 0 , OTHERARTNR1_Bestand = 0 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where EANCH = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    
    loeschNEW "artean_Artikel", gdBase

    cSQL = "Create Table artean_Artikel  "
    cSQL = cSQL & "( ARTNR int"
    cSQL = cSQL & ", EANCH varchar(13)"
    cSQL = cSQL & ") "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN = '' where EAN is null  "
    gdBase.Execute cSQL, dbFailOnError

    cSQL = "Insert into artean_Artikel Select artnr, val(ean) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN2 = '' where EAN2 is null  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Insert into artean_Artikel Select artnr, val(ean2) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN3 = '' where EAN3 is null  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Insert into artean_Artikel Select artnr, val(ean3) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    
    If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
        'nich vergessen ARTEAN_K
        cSQL = "Update ARTEAN_K set EAN = '' where EAN is null  "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Insert into artean_Artikel Select artnr, val(ean) as EANCH from ARTEAN_K  "
        gdBase.Execute cSQL, dbFailOnError
    End If
    
    cSQL = "Delete from artean_Artikel where EANCH = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    
    cSQL = "Update artean_Artikel set EANCH = '0' & EANCH "
    cSQL = cSQL & " where len(EANCH)= 11 "
    gdBase.Execute cSQL, dbFailOnError
    
    
    'mit dieser Information holen wir uns aus der Datenbank alle ARTNR(ungleich), die schon solch eine EAN besitzen
    
    cSQL = "Update artean_BU inner join artean_Artikel on artean_BU.EANCH = artean_Artikel.EANCH "
    cSQL = cSQL & " set artean_BU.OTHERARTNR1 = artean_Artikel.ARTNR "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where Artnr = OTHERARTNR1 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where OTHERARTNR1 = 0 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU inner join Artikel on artean_BU.OTHERARTNR1 = Artikel.ARTNR "
    cSQL = cSQL & " set artean_BU.OTHERARTNR1_Bestand = Artikel.Bestand "
    gdBase.Execute cSQL, dbFailOnError
    
    
    'nun zur Vollendung
    'bei Otherartnr1 die EAN rausnehmen und von Otherartnr1 auf Artnr den Bestand addieren
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN2 = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean2 = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN3 = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean3 = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
        cSQL = "Update ARTEAN_K inner join artean_BU on ARTEAN_K.ARTNR = artean_BU.OTHERARTNR1 and ARTEAN_K.EAN = artean_BU.EANCH "
        cSQL = cSQL & " set ARTEAN_K.ean = '' "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Delete from ARTEAN_K where ean = '' "
        gdBase.Execute cSQL, dbFailOnError
    End If
    
    
    'bestand addieren
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.ARTNR  "
    cSQL = cSQL & " set Artikel.Bestand = Artikel.Bestand + artean_BU.OTHERARTNR1_Bestand"
    gdBase.Execute cSQL, dbFailOnError
    
    
    
    

    'Ende ********************** Alle EANS auffangen
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    FormatiereBildschirmdatenLüning = True
    
    Exit Function
LOKAL_ERROR:

    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "FormatiereBildschirmdatenLüning"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1

End Function
Private Function FormatiereBildschirmdatenBELA() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim lreservArtnr    As Long
    Dim lvergebeArtnr   As Long
    Dim lMax            As Long
    Dim lcount          As Long

    Dim cSQL            As String
    Dim cEANa           As String

    Dim dNettospanne    As Double
    Dim dEK             As Double
    Dim cMWST           As String
    Dim cNewKassenPr    As String
    
    
    FormatiereBildschirmdatenBELA = False
    pbrStatus.Max = 185
    pbrStatus.Value = 5
    
    anzeige "normal", "Neue Artikel werden ermittelt...", Label3
    'Farbe alle auf neu
    sSQL = "Update ImportPri set AWM = '98' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 10
    
    anzeige "normal", "Neue Artikel werden ermittelt(1)......", Label3
    
    sSQL = "Create Index AWM on IMPORTPRI (AWM)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(2).........", Label3
    
    sSQL = "Create Index ean on IMPORTPRI (ean)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(3)............", Label3
    
    sSQL = "Create Index linr on IMPORTPRI (linr)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(4)...", Label3
    
    sSQL = "Create Index libesnr on IMPORTPRI (libesnr)"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(5)......", Label3
    pbrStatus.Value = 15
    
    'Artikel mit EAN übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    'im ersten durchlauf gefunden
    loeschNEW "GEFUNDEN1", gdBase
    sSQL = "Select * into GEFUNDEN1 from ImportPri "
    sSQL = sSQL & " where Importpri.artnr > 0 "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from ImportPri "
    sSQL = sSQL & " where lfnr in (Select lfnr from GEFUNDEN1) "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(6).........", Label3
    
    pbrStatus.Value = 25
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    'im zweiten durchlauf gefunden
    loeschNEW "GEFUNDEN2", gdBase
    sSQL = "Select * into GEFUNDEN2 from ImportPri "
    sSQL = sSQL & " where Importpri.artnr > 0 "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from ImportPri "
    sSQL = sSQL & " where lfnr in (Select lfnr from GEFUNDEN2) "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(7)............", Label3
    
    pbrStatus.Value = 35
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " IMPORTPRI.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    'im dritten durchlauf gefunden
    loeschNEW "GEFUNDEN3", gdBase
    sSQL = "Select * into GEFUNDEN3 from ImportPri "
    sSQL = sSQL & " where Importpri.artnr > 0 "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from ImportPri "
    sSQL = sSQL & " where lfnr in (Select lfnr from GEFUNDEN3) "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(8)...", Label3
    pbrStatus.Value = 45
    
    sSQL = "Update ImportPri inner join ARTLIEF on "
    sSQL = sSQL & " ARTLIEF.LINR = ImportPri.LINR and ARTLIEF.LIBESNR = ImportPri.LIBESNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.artnr = ARTLIEF.artnr  "
    sSQL = sSQL & " where Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    'im vierten durchlauf gefunden
    loeschNEW "GEFUNDEN4", gdBase
    sSQL = "Select * into GEFUNDEN4 from ImportPri "
    sSQL = sSQL & " where Importpri.artnr > 0 "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from ImportPri "
    sSQL = sSQL & " where lfnr in (Select lfnr from GEFUNDEN4) "
    gdBase.Execute sSQL, dbFailOnError
    
    
    
    'Jetzt alle Gefundenen zusammenführen
    
    loeschNEW "ImportPri_Neu", gdBase
    
    sSQL = "Select * into ImportPri_Neu from GEFUNDEN1 "
    gdBase.Execute sSQL, dbFailOnError
    
    'muss schneller werden
    
    sSQL = "Create Index artnr on ImportPri_Neu (artnr)"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index artnr on GEFUNDEN2 (artnr)"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index artnr on GEFUNDEN3 (artnr)"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index artnr on GEFUNDEN4 (artnr)"
    gdBase.Execute sSQL, dbFailOnError
    
    
    sSQL = "Insert into ImportPri_Neu select * from GEFUNDEN2 "
    sSQL = sSQL & " where not artnr in (select artnr from ImportPri_Neu) "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into ImportPri_Neu select * from GEFUNDEN3 "
    sSQL = sSQL & " where not artnr in (select artnr from ImportPri_Neu) "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into ImportPri_Neu select * from GEFUNDEN4 "
    sSQL = sSQL & " where not artnr in (select artnr from ImportPri_Neu) "
    gdBase.Execute sSQL, dbFailOnError
    
    
    'Mehr Eans der bekannten festhalten
    
    loeschNEW "BEKANNTEEAN", gdBase
    sSQL = "Select ImportPri.LFNR "
    sSQL = sSQL & ",ImportPri_neu.ARTNR "
    sSQL = sSQL & ",ImportPri.LIBESNR "
    sSQL = sSQL & ",ImportPri.BEZEICH "
    sSQL = sSQL & ",ImportPri.EAN "
    sSQL = sSQL & " into BEKANNTEEAN "
    sSQL = sSQL & " from ImportPri inner join ImportPri_Neu   "
    sSQL = sSQL & " on ImportPri.libesnr = ImportPri_Neu.libesnr "
    gdBase.Execute sSQL, dbFailOnError
    
    
    
    
    
    
    
    
    anzeige "normal", "Duplikate werden gelöscht......", Label3
    pbrStatus.Value = 120
    
    
    
    'hier zwischen EAN2 und EAN3 füllen
    
    sSQL = "Delete from ImportPri "
    sSQL = sSQL & " where libesnr in (Select libesnr from ImportPri_Neu) "
    sSQL = sSQL & " and Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    loeschNEW "UNBEKANNTEDU", gdBase
    sSQL = "Select * into UnbekannteDU from ImportPri "
    sSQL = sSQL & " where Importpri.artnr is null "
    gdBase.Execute sSQL, dbFailOnError
    
    'jeweils einen unbekannten anfügen
    
    loeschNEW "UNBEKANNT", gdBase
    
    sSQL = "Select MAX(lfnr) as laufnr "
    sSQL = sSQL & ", LIBESNR "
    sSQL = sSQL & " into Unbekannt from UNBEKANNTEDU "
    sSQL = sSQL & " group by "
    sSQL = sSQL & " LIBESNR "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into IMPORTPRI_neu select laufnr as lfnr , libesnr from Unbekannt "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Update ImportPri_neu i inner join UNBEKANNTEDU u on "
    sSQL = sSQL & " i.LFNR = u.lfnr "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " i.ARTNR = u.ARTNR"
    sSQL = sSQL & ", i.BEZEICH = u.BEZEICH"
    sSQL = sSQL & ", i.AGN = u.AGN"
    sSQL = sSQL & ", i.PGN = u.PGN"
    sSQL = sSQL & ", i.LEKPR = u.LEKPR"
    sSQL = sSQL & ", i.VKPR = u.VKPR"
    sSQL = sSQL & ", i.MWST = u.MWST"
    sSQL = sSQL & ", i.LINR = u.LINR"
    sSQL = sSQL & ", i.EAN = u.EAN"
    sSQL = sSQL & ", i.EAN2 = u.EAN2"
    sSQL = sSQL & ", i.EAN3 = u.EAN3"
    sSQL = sSQL & ", i.ETIMERK = u.ETIMERK"
    sSQL = sSQL & ", i.MOPREIS = u.MOPREIS"
    sSQL = sSQL & ", i.RKZ = u.RKZ"
    sSQL = sSQL & ", i.LPZ = u.LPZ"
    sSQL = sSQL & ", i.NOTIZEN = u.NOTIZEN"
    sSQL = sSQL & ", i.BESTAND = u.BESTAND"
    sSQL = sSQL & ", i.VKMENGE = u.VKMENGE"
    sSQL = sSQL & ", i.VKDATUM = u.VKDATUM"
    sSQL = sSQL & ", i.MINMEN = u.MINMEN"
    sSQL = sSQL & ", i.INHALT = u.INHALT"
    sSQL = sSQL & ", i.INHALTBEZ = u.INHALTBEZ"
    sSQL = sSQL & ", i.GRUNDPREIS = u.GRUNDPREIS"
    sSQL = sSQL & ", i.MINBEST = u.MINBEST"
    sSQL = sSQL & ", i.RABATT_OK = u.RABATT_OK"
    sSQL = sSQL & ", i.GEFUEHRT = u.GEFUEHRT"
    sSQL = sSQL & ", i.KVKPR1 = u.KVKPR1"
    sSQL = sSQL & ", i.EKPR = u.EKPR"
    sSQL = sSQL & ", i.PREISSCHU = u.PREISSCHU"
    sSQL = sSQL & ", i.BONUS_OK = u.BONUS_OK"
    sSQL = sSQL & ", i.UMS_OK = u.UMS_OK"
    sSQL = sSQL & ", i.AWM = u.AWM"
    sSQL = sSQL & ", i.LASTDATE = u.LASTDATE"
    sSQL = sSQL & ", i.LASTTIME = u.LASTTIME"
    sSQL = sSQL & ", i.AUFDAT = u.AUFDAT"
    sSQL = sSQL & ", i.EXDAT = u.EXDAT"
    sSQL = sSQL & ", i.FARBNR = u.FARBNR"
    sSQL = sSQL & ", i.MARKE = u.MARKE"
    sSQL = sSQL & ", i.GROESSE = u.GROESSE"
    sSQL = sSQL & ", i.SPANNE = u.SPANNE"
    sSQL = sSQL & ", i.AUFSCHLAG = u.AUFSCHLAG"
    sSQL = sSQL & ", i.SYNSTATUS = u.SYNSTATUS"
    sSQL = sSQL & ", i.MNOTIZEN = u.MNOTIZEN"
    sSQL = sSQL & ", i.KVKALT = u.KVKALT"
    sSQL = sSQL & ", i.KVKNEU = u.KVKNEU"
    gdBase.Execute sSQL, dbFailOnError
    


    
    loeschNEW "ImportPri", gdBase
    sSQL = "Select * into ImportPri from ImportPri_Neu  "
    gdBase.Execute sSQL, dbFailOnError
    
    'Jetzt geht es normal weiter

    anzeige "normal", "Neue Artikel werden ermittelt(9)......", Label3
    

    pbrStatus.Value = 140

    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  = '0' and ImportPri.AWM = '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(10).........", Label3
    
    pbrStatus.Value = 145
    
    sSQL = "Update ImportPri set AWM = '96' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and not awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(11)............", Label3
    
    pbrStatus.Value = 150
    
    sSQL = "Update ImportPri set AWM = '95' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and awm = '98'"
    gdBase.Execute sSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(12)...", Label3
    
    pbrStatus.Value = 155
    
'    If NewTableSuchenDBKombi("importdupli", gdBase) Then
'        sSQL = "Update ImportPri inner join importdupli on "
'        sSQL = sSQL & " importdupli.ean = ImportPri.ean set AWM = '94' "
'        gdBase.Execute sSQL, dbFailOnError
'    End If
    
    cSQL = " Update ImportPri inner join Artikel on "
    cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    cSQL = cSQL & "Set "
    cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
    gdBase.Execute cSQL, dbFailOnError
    
    anzeige "normal", "Neue Artikel werden ermittelt(13)......", Label3
    pbrStatus.Value = 160
    '*****'
    'ab Hier check der Autokalkulierung
    '1. Unter Voreinstellung basierend auf LEK
    If gsSpanne = "LEK" Then
        '2. Etimerk = J
        '3. Not Preisschu
        '4. Feld Nettospanne gefüllt
        '5. LEK gefüllt
        
        cSQL = " Update ImportPri inner join Artikel on "
        cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
        cSQL = cSQL & "Set "
        cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
        cSQL = cSQL & " where ARTIKEL.PREISSCHU = 'N'"
        cSQL = cSQL & " and ImportPri.LEKPR > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 165
    
        cSQL = " Update ImportPri inner join ARTLIEF on "
        cSQL = cSQL & " ARTLIEF.ARTNR = ImportPri.ARTNR and ARTLIEF.LINR = ImportPri.LINR"
        cSQL = cSQL & " Set "
        cSQL = cSQL & " ImportPri.SPANNE = ARTLIEF.SPANNE "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 166
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & " Set ETIMERK = 'J' "
        cSQL = cSQL & " where ImportPri.SPANNE > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 168
        
        cSQL = "Select * from ImportPri where ETIMERK = 'J'and (not ImportPri.Spanne is null or ImportPri.Spanne <> 0 ) "
        Set rsrs = gdBase.OpenRecordset(cSQL)

        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                'Wir brauchen den LEK aus Mastemp
                'MWST
                'Nettospanne
                If Not IsNull(rsrs!lekpr) Then
                    dEK = rsrs!lekpr
                Else
                    dEK = 0
                End If

                If Not IsNull(rsrs!MWST) Then
                    cMWST = rsrs!MWST
                Else
                    cMWST = "V"
                End If

                If Not IsNull(rsrs!SPANNE) Then
                    dNettospanne = rsrs!SPANNE
                Else
                    dNettospanne = 0
                End If
                cNewKassenPr = Runden(CDbl(fnVKneuNS(dEK, cMWST, dNettospanne)))

                rsrs.Edit
                rsrs!KVKNEU = cNewKassenPr
                rsrs.Update
                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        
        pbrStatus.Value = 170
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & "Set  ImportPri.AWM = '97' "
        cSQL = cSQL & " where ETIMERK = 'J' and PREISSCHU = 'N'"
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 175
    End If
    
    sSQL = "Delete from ImportPri where bezeich is null"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from ImportPri where bezeich = ''"
    gdBase.Execute sSQL, dbFailOnError
    
    Dim dEkpr As Double
    
    pbrStatus.Value = 180
    anzeige "normal", "Für neue Artikel werden freie Artikelnummern ermittelt...", Label3
    
    lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    pbrStatus.Value = 185
    
    sSQL = "Select * from ImportPri where awm = '98' or awm = '95' or awm = '94'"
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.EOF Then
    
        rsrs.MoveLast
        pbrStatus.Max = rsrs.RecordCount + 10
        lcount = 10
        pbrStatus.Value = lcount
        
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            rsrs.Edit
            rsrs!artnr = lreservArtnr
            rsrs.Update
            
            lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
            If lvergebeArtnr = 0 Then
                anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                Exit Function
            Else
                lreservArtnr = lvergebeArtnr
                lcount = lcount + 1
                pbrStatus.Value = lcount
            End If
            rsrs.MoveNext
        Loop
    
    End If
    rsrs.Close: Set rsrs = Nothing
    
    'Mehr Eans der UN-bekannten festhalten

    loeschNEW "UNBEKANNTEEAN", gdBase
    
    sSQL = "Select UNBEKANNTEDU.LFNR "
    sSQL = sSQL & ",ImportPri.ARTNR "
    sSQL = sSQL & ",UNBEKANNTEDU.LIBESNR "
    sSQL = sSQL & ",UNBEKANNTEDU.BEZEICH "
    sSQL = sSQL & ",UNBEKANNTEDU.EAN "
    sSQL = sSQL & " into UNBEKANNTEEAN "
    sSQL = sSQL & " from UNBEKANNTEDU inner join ImportPri   "
    sSQL = sSQL & " on UNBEKANNTEDU.libesnr = ImportPri.libesnr "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Delete from UNBEKANNTEEAN "
    sSQL = sSQL & " where lfnr in (Select laufnr from UNBEKANNT) "
    gdBase.Execute sSQL, dbFailOnError
    
    loeschNEW "MEHREAN", gdBase
    
    sSQL = "Select * into MEHREAN from UNBEKANNTEEAN  "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into MEHREAN Select * from BEKANNTEEAN  "
    gdBase.Execute sSQL, dbFailOnError
    
    loeschNEW "EAN2", gdBase
    
    sSQL = "Select MAX(lfnr) as laufnr "
    sSQL = sSQL & ", ARTNR "
    sSQL = sSQL & ", '' as EAN "
    sSQL = sSQL & " into EAN2 from MEHREAN "
    sSQL = sSQL & " group by "
    sSQL = sSQL & " ARTNR "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Update EAN2 inner join MEHREAN  on "
    sSQL = sSQL & " EAN2.laufnr = MEHREAN.lfnr "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " EAN2.EAN = MEHREAN.EAN"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Update ImportPri inner join EAN2 on "
    sSQL = sSQL & " ImportPri.ARTNR = EAN2.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.EAN2 = EAN2.EAN"
    gdBase.Execute sSQL, dbFailOnError
    
    
    
    
    
    
    
     'Alle EANS auffangen************************************************

    loeschNEW "artean_BU", gdBase

    cSQL = "Create Table artean_BU  "
    cSQL = cSQL & "( ARTNR int"
    cSQL = cSQL & ", EANCH varchar(13)"
    cSQL = cSQL & ", OTHERARTNR1 int"
    cSQL = cSQL & ", OTHERARTNR1_Bestand int"
    
    cSQL = cSQL & ") "
    gdBase.Execute cSQL, dbFailOnError


    cSQL = "Insert into artean_BU Select artnr, val(ean) as EANCH from ImportPri  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU set EANCH = '0' & EANCH  "
    cSQL = cSQL & " where len(EANCH)= 11 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU set OTHERARTNR1 = 0 , OTHERARTNR1_Bestand = 0 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where EANCH = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    
    loeschNEW "artean_Artikel", gdBase

    cSQL = "Create Table artean_Artikel  "
    cSQL = cSQL & "( ARTNR int"
    cSQL = cSQL & ", EANCH varchar(13)"
    cSQL = cSQL & ") "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN = '' where EAN is null  "
    gdBase.Execute cSQL, dbFailOnError

    cSQL = "Insert into artean_Artikel Select artnr, val(ean) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN2 = '' where EAN2 is null  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Insert into artean_Artikel Select artnr, val(ean2) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel set EAN3 = '' where EAN3 is null  "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Insert into artean_Artikel Select artnr, val(ean3) as EANCH from Artikel  "
    gdBase.Execute cSQL, dbFailOnError
    
    
    If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
        'nich vergessen ARTEAN_K
        cSQL = "Update ARTEAN_K set EAN = '' where EAN is null  "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Insert into artean_Artikel Select artnr, val(ean) as EANCH from ARTEAN_K  "
        gdBase.Execute cSQL, dbFailOnError
    End If
    
    cSQL = "Delete from artean_Artikel where EANCH = '0' "
    gdBase.Execute cSQL, dbFailOnError
    
    
    cSQL = "Update artean_Artikel set EANCH = '0' & EANCH "
    cSQL = cSQL & " where len(EANCH)= 11 "
    gdBase.Execute cSQL, dbFailOnError
    
    
    'mit dieser Information holen wir uns aus der Datenbank alle ARTNR(ungleich), die schon solch eine EAN besitzen
    
    cSQL = "Update artean_BU inner join artean_Artikel on artean_BU.EANCH = artean_Artikel.EANCH "
    cSQL = cSQL & " set artean_BU.OTHERARTNR1 = artean_Artikel.ARTNR "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where Artnr = OTHERARTNR1 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Delete from artean_BU where OTHERARTNR1 = 0 "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update artean_BU inner join Artikel on artean_BU.OTHERARTNR1 = Artikel.ARTNR "
    cSQL = cSQL & " set artean_BU.OTHERARTNR1_Bestand = Artikel.Bestand "
    gdBase.Execute cSQL, dbFailOnError
    
    
    'nun zur Vollendung
    'bei Otherartnr1 die EAN rausnehmen und von Otherartnr1 auf Artnr den Bestand addieren
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN2 = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean2 = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.OTHERARTNR1 and Artikel.EAN3 = artean_BU.EANCH "
    cSQL = cSQL & " set Artikel.ean3 = '' "
    gdBase.Execute cSQL, dbFailOnError
    
    If NewTableSuchenDBKombi("ARTEAN_K", gdBase) Then
        cSQL = "Update ARTEAN_K inner join artean_BU on ARTEAN_K.ARTNR = artean_BU.OTHERARTNR1 and ARTEAN_K.EAN = artean_BU.EANCH "
        cSQL = cSQL & " set ARTEAN_K.ean = '' "
        gdBase.Execute cSQL, dbFailOnError
        
        cSQL = "Delete from ARTEAN_K where ean = '' "
        gdBase.Execute cSQL, dbFailOnError
    End If
    
    
    'bestand addieren
    
    cSQL = "Update Artikel inner join artean_BU on Artikel.ARTNR = artean_BU.ARTNR  "
    cSQL = cSQL & " set Artikel.Bestand = Artikel.Bestand + artean_BU.OTHERARTNR1_Bestand"
    gdBase.Execute cSQL, dbFailOnError
    
    
    
    

    'Ende ********************** Alle EANS auffangen
    
    
    
    
    
    
    
    
    
    
    
    
    
    FormatiereBildschirmdatenBELA = True
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "FormatiereBildschirmdatenBELA"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Function
Private Function FormatiereBildschirmdatenDEV() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim lreservArtnr    As Long
    Dim lvergebeArtnr   As Long

    Dim cSQL            As String

    Dim dNettospanne    As Double
    Dim dEK             As Double
    Dim cMWST           As String
    Dim cNewKassenPr    As String
    
    FormatiereBildschirmdatenDEV = False
    anzeige "normal", "Neue Artikel werden ermittelt...", Label3
    
    
    pbrStatus.Value = 85
    
    sSQL = "Create Index AWM on IMPORTPRI (AWM)"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index ean on IMPORTPRI (ean)"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 90
    
    'Artikel mit EAN übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN = ImportPri.EAN "
    sSQL = sSQL & "Set "
    
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 95
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN2 = ImportPri.EAN "
    sSQL = sSQL & "Set "
    
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 100
    
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.EAN3 = ImportPri.EAN "
    sSQL = sSQL & "Set "
   
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.ean  <> '0' "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    
    'where importpri.ean = '0' der macht ein check in artlief
    'auf linr und libesnr stimmigkeit 600283
    
    sSQL = "Update ImportPri inner join ARTLIEF on "
    sSQL = sSQL & " ARTLIEF.LINR = ImportPri.LINR and Trim(ARTLIEF.LIBESNR) = Trim(ImportPri.LIBESNR) "
    sSQL = sSQL & "Set "
    
    sSQL = sSQL & " ImportPri.artnr = ARTLIEF.artnr  "
    sSQL = sSQL & " where Importpri.ean  = '0' "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError

    pbrStatus.Value = 105

    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "

    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "

    sSQL = sSQL & " where Importpri.ean  = '0'  "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    
    Dim dEkpr As Double
    
    If Combo1.Text = "Devil - Format" Then
        Dim dDEVFAK As Double
        If IsNumeric(Text2.Text) Then
            dDEVFAK = CDbl(Text2.Text)
        End If
                
    End If
    
    
    pbrStatus.Value = 155
    anzeige "normal", "Für neue Artikel werden freie Artikelnummern ermittelt...", Label3
    sSQL = "Select * from ImportPri "
    
   
   
    lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    pbrStatus.Value = 160
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.RecordCount = 0 Then
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            rsrs.Edit
            rsrs!artnr = lreservArtnr
            
            If Combo1.Text = "Devil - Format" Then
            
                If Not IsNull(rsrs!lekpr) Then
                    dEkpr = rsrs!lekpr
                    If dEkpr > 0 Then
                       rsrs!KVKNEU = Runden(dEkpr * dDEVFAK)
                    End If
                    
                End If
            
            End If
            rsrs.Update
            
            lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
            If lvergebeArtnr = 0 Then
                
                anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                Exit Function
            Else
                lreservArtnr = lvergebeArtnr
                pbrStatus.Max = 80
                Select Case CInt(Right(CStr(lreservArtnr), 3))
                
                    Case Is = 0
                    pbrStatus.Value = 0
                    Case Is = 200
                    pbrStatus.Value = 20
                    Case Is = 400
                    pbrStatus.Value = 40
                    Case Is = 600
                    pbrStatus.Value = 60
                    Case Is = 800
                    pbrStatus.Value = 80
                End Select
            End If
            

            rsrs.MoveNext
        Loop
    
    End If
    rsrs.Close: Set rsrs = Nothing
    
    FormatiereBildschirmdatenDEV = True

    Exit Function
LOKAL_ERROR:
    If err.Number = 3372 Or err.Number = 53 Or err.Number = 3376 Or err.Number = 3375 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "FormatiereBildschirmdatenDEV"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
        Resume Next
    End If
End Function
Private Function FormatiereBildschirmdatenHoffmann() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim lreservArtnr    As Long
    Dim lvergebeArtnr   As Long
    Dim lLinr           As Long

    Dim cSQL            As String

    Dim dNettospanne    As Double
    Dim dEK             As Double
    Dim cMWST           As String
    Dim cNewKassenPr    As String
    
    FormatiereBildschirmdatenHoffmann = False
    anzeige "normal", "Neue Artikel werden ermittelt...", Label3
    'Farbe alle auf neu
    sSQL = "Update ImportPri set AWM = '98' "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 85
    
    sSQL = "Create Index AWM on IMPORTPRI (AWM)"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index ean on IMPORTPRI (ean)"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 90
    
    'Artikel mit libesnr übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.libesnr = ImportPri.libesnr "
    sSQL = sSQL & " and ARTIKEL.linr = Importpri.linr   "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.libesnr  <> '' "
    
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 95
    

    pbrStatus.Value = 100
    


    pbrStatus.Value = 105

    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "

    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "

    sSQL = sSQL & " where Importpri.ean  = '0' and ImportPri.AWM = '0' "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 110
    
    lLinr = checkLinrInLISRT(gcStadaLinr)
    
    sSQL = "Update ImportPri set EAN = '' "
    sSQL = sSQL & " where EAN in (Select ean from artikel where linr <> " & lLinr & ")"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    
    sSQL = "Update ImportPri set AWM = '96' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and not awm = '98'"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 115
    
    sSQL = "Update ImportPri set AWM = '95' "
    sSQL = sSQL & " where LPZ = 70 and ETIMERK = 'J' and awm = '98'"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 120
    
    If NewTableSuchenDBKombi("importdupli", gdBase) Then
    
        sSQL = "Update ImportPri inner join importdupli on "
        sSQL = sSQL & " importdupli.ean = ImportPri.ean set AWM = '94' "
        schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    End If
    
    pbrStatus.Value = 125
    '*****'
    'ab Hier check der Autokalkulierung
    '1. Unter Voreinstellung basierend auf LEK
    If gsSpanne = "LEK" Then
        '2. Etimerk = J
        '3. Not Preisschu
        '4. Feld Nettospanne gefüllt
        '5. LEK gefüllt
        
        cSQL = " Update ImportPri inner join Artikel on "
        cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
        cSQL = cSQL & "Set "
        cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
        cSQL = cSQL & " where ARTIKEL.PREISSCHU = 'N'"
        cSQL = cSQL & " and ImportPri.LEKPR > 0 "
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 130
    
        
        cSQL = " Update ImportPri inner join ARTLIEF on "
        cSQL = cSQL & " ARTLIEF.ARTNR = ImportPri.ARTNR and ARTLIEF.LINR = ImportPri.LINR"
        cSQL = cSQL & " Set "
        cSQL = cSQL & " ImportPri.SPANNE = ARTLIEF.SPANNE "
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 135
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & " Set ETIMERK = 'J' "
        cSQL = cSQL & " where ImportPri.SPANNE > 0 "
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 140
        
        cSQL = "Select * from ImportPri where ETIMERK = 'J'and (not ImportPri.Spanne is null or ImportPri.Spanne <> 0 ) "
        Set rsrs = gdBase.OpenRecordset(cSQL)

        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                'Wir brauchen den LEK aus Mastemp
                'MWST
                'Nettospanne
                If Not IsNull(rsrs!lekpr) Then
                    dEK = rsrs!lekpr
                Else
                    dEK = 0
                End If

                If Not IsNull(rsrs!MWST) Then
                    cMWST = rsrs!MWST
                Else
                    cMWST = "V"
                End If

                If Not IsNull(rsrs!SPANNE) Then
                    dNettospanne = rsrs!SPANNE
                Else
                    dNettospanne = 0
                End If
                cNewKassenPr = Runden(CDbl(fnVKneuNS(dEK, cMWST, dNettospanne)))

                rsrs.Edit
                rsrs!KVKNEU = cNewKassenPr
                rsrs.Update

                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        
        pbrStatus.Value = 145
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & "Set  ImportPri.AWM = '97' "
        cSQL = cSQL & " where ETIMERK = 'J' and PREISSCHU = 'N'"
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 150
    End If
    
    If Checkbox4.Value = True Then
        cSQL = " Update ImportPri "
        cSQL = cSQL & "Set  Bezeich = 'HOF ' & left(Bezeich,31) "
        gdBase.Execute cSQL, dbFailOnError
    End If
    
    '***'
    
    If Combo1.Text = "Hoffmann - Format" Then
        If Val(Text1(3).Text) <> 0 Then
            sSQL = "Update ImportPri set AGN =  " & Val(Text1(3).Text)
            gdBase.Execute sSQL, dbFailOnError
        End If
    
    ElseIf Combo1.Text = "Vedes - Format" Then
        If Val(Text1(4).Text) <> 0 Then
            sSQL = "Update ImportPri set AGN =  " & Val(Text1(4).Text)
            gdBase.Execute sSQL, dbFailOnError
        End If
    End If
   
    Dim dEkpr As Double
    
    If Combo1.Text = "Devil - Format" Then
        Dim dDEVFAK As Double
        If IsNumeric(Text2.Text) Then
            dDEVFAK = CDbl(Text2.Text)
        End If
                
    End If
    
    pbrStatus.Value = 155
    anzeige "normal", "Für neue Artikel werden freie Artikelnummern ermittelt...", Label3
    sSQL = "Select * from ImportPri where awm = '98' or awm = '95' or awm = '94'"
    
   
   
    lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    pbrStatus.Value = 160
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.RecordCount = 0 Then
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            rsrs.Edit
            rsrs!artnr = lreservArtnr
            
            If Combo1.Text = "Devil - Format" Then
            
                If Not IsNull(rsrs!lekpr) Then
                    dEkpr = rsrs!lekpr
                    If dEkpr > 0 Then
                       rsrs!KVKNEU = dEkpr * dDEVFAK
                    End If
                    
                End If
            
            End If
            rsrs.Update
            
            lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
            If lvergebeArtnr = 0 Then
                
                anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                Exit Function
            Else
                lreservArtnr = lvergebeArtnr
                pbrStatus.Max = 80
                Select Case CInt(Right(CStr(lreservArtnr), 3))
                
                    Case Is = 0
                    pbrStatus.Value = 0
                    Case Is = 200
                    pbrStatus.Value = 20
                    Case Is = 400
                    pbrStatus.Value = 40
                    Case Is = 600
                    pbrStatus.Value = 60
                    Case Is = 800
                    pbrStatus.Value = 80
                End Select
            End If
            

            rsrs.MoveNext
        Loop
    
    End If
    rsrs.Close: Set rsrs = Nothing
    
    
    
    
    'dupliprüfung
    
    
    If NewTableSuchenDBKombi("importdupli", gdBase) Then
    
        sSQL = "Select ean from Importdupli"
        
        Dim cEANa As String
        lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    
        Set rsrs = gdBase.OpenRecordset(sSQL)
        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
            
                If Not IsNull(rsrs!EAN) Then
                    cEANa = rsrs!EAN
                End If
            
            
            
            
                sSQL = "Update ImportPri set artnr = " & lreservArtnr
                sSQL = sSQL & " where ean = '" & cEANa & "'"
                schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
            
                lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
                If lvergebeArtnr = 0 Then
                    
                    anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                    Exit Function
                Else
                    lreservArtnr = lvergebeArtnr
                End If
                
    
                rsrs.MoveNext
            Loop
        
        End If
        rsrs.Close: Set rsrs = Nothing
    
    End If
    
    
    
    
    
    FormatiereBildschirmdatenHoffmann = True
    
    

    
    Exit Function
LOKAL_ERROR:
    If err.Number = 3372 Or err.Number = 53 Or err.Number = 3376 Or err.Number = 3375 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "FormatiereBildschirmdatenHoffmann"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
    End If
End Function
Private Function FormatiereBildschirmdatenZeitung() As Boolean
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL            As String
    Dim rsrs            As Recordset
    Dim lreservArtnr    As Long
    Dim lvergebeArtnr   As Long
    Dim lLinr           As Long

    Dim cSQL            As String

    Dim dNettospanne    As Double
    Dim dEK             As Double
    Dim cMWST           As String
    Dim cNewKassenPr    As String
    
    FormatiereBildschirmdatenZeitung = False
    anzeige "normal", "Neue Artikel werden ermittelt...", Label3
    'Farbe alle auf neu
    sSQL = "Update ImportPri set AWM = '98' "
    sSQL = sSQL & " ,Rabatt_ok = 'N'  "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 85
    
    sSQL = "Create Index AWM on IMPORTPRI (AWM)"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Create Index ean on IMPORTPRI (ean)"
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 90
    
    'Artikel mit libesnr übereinstimmung auf standard
    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.libesnr = ImportPri.libesnr "
    sSQL = sSQL & " and ARTIKEL.linr = Importpri.linr   "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.AWM = '0' "
    sSQL = sSQL & " ,ImportPri.KVKALT = Artikel.kvkpr1  "
    sSQL = sSQL & " ,ImportPri.artnr = Artikel.artnr  "
    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
'    sSQL = sSQL & " ,ImportPri.AGN = Artikel.AGN  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " where Importpri.libesnr  <> '' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 95

    pbrStatus.Value = 115

    sSQL = "Update ImportPri inner join Artikel on "
    sSQL = sSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
    sSQL = sSQL & "Set "
    sSQL = sSQL & " ImportPri.KVKALT = Artikel.kvkpr1  "

    sSQL = sSQL & " ,ImportPri.Bestand = Artikel.Bestand  "
    sSQL = sSQL & " ,ImportPri.gefuehrt = Artikel.gefuehrt  "
    sSQL = sSQL & " ,ImportPri.Rabatt_ok = Artikel.Rabatt_ok  "

    sSQL = sSQL & " where Importpri.ean  = '0' and ImportPri.AWM = '0' "
    gdBase.Execute sSQL, dbFailOnError
    
    pbrStatus.Value = 120
    
    If NewTableSuchenDBKombi("importdupli", gdBase) Then
    
        sSQL = "Update ImportPri inner join importdupli on "
        sSQL = sSQL & " importdupli.ean = ImportPri.ean set AWM = '94' "
        gdBase.Execute sSQL, dbFailOnError
    
    End If
    
    pbrStatus.Value = 125
    '*****'
    'ab Hier check der Autokalkulierung
    '1. Unter Voreinstellung basierend auf LEK
    If gsSpanne = "LEK" Then
        '2. Etimerk = J
        '3. Not Preisschu
        '4. Feld Nettospanne gefüllt
        '5. LEK gefüllt
        
        cSQL = " Update ImportPri inner join Artikel on "
        cSQL = cSQL & " ARTIKEL.ARTNR = ImportPri.ARTNR "
        cSQL = cSQL & "Set "
        cSQL = cSQL & " ImportPri.PREISSCHU = ARTIKEL.PREISSCHU "
        cSQL = cSQL & " where ARTIKEL.PREISSCHU = 'N'"
        cSQL = cSQL & " and ImportPri.LEKPR > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 130
    
        
        cSQL = " Update ImportPri inner join ARTLIEF on "
        cSQL = cSQL & " ARTLIEF.ARTNR = ImportPri.ARTNR and ARTLIEF.LINR = ImportPri.LINR"
        cSQL = cSQL & " Set "
        cSQL = cSQL & " ImportPri.SPANNE = ARTLIEF.SPANNE "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 135
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & " Set ETIMERK = 'J' "
        cSQL = cSQL & " where ImportPri.SPANNE > 0 "
        gdBase.Execute cSQL, dbFailOnError
        
        pbrStatus.Value = 140
        
        cSQL = "Select * from ImportPri where ETIMERK = 'J'and (not ImportPri.Spanne is null or ImportPri.Spanne <> 0 ) "
        Set rsrs = gdBase.OpenRecordset(cSQL)

        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
                'Wir brauchen den LEK aus Mastemp
                'MWST
                'Nettospanne
                If Not IsNull(rsrs!lekpr) Then
                    dEK = rsrs!lekpr
                Else
                    dEK = 0
                End If

                If Not IsNull(rsrs!MWST) Then
                    cMWST = rsrs!MWST
                Else
                    cMWST = "V"
                End If


                If Not IsNull(rsrs!SPANNE) Then
                    dNettospanne = rsrs!SPANNE
                Else
                    dNettospanne = 0
                End If
                cNewKassenPr = Runden(CDbl(fnVKneuNS(dEK, cMWST, dNettospanne)))

                rsrs.Edit
                rsrs!KVKNEU = cNewKassenPr
                rsrs.Update

                rsrs.MoveNext
            Loop
        End If
        rsrs.Close: Set rsrs = Nothing
        
        pbrStatus.Value = 145
        
        cSQL = " Update ImportPri "
        cSQL = cSQL & "Set  ImportPri.AWM = '97' "
        cSQL = cSQL & " where ETIMERK = 'J' and PREISSCHU = 'N'"
        gdBase.Execute cSQL, dbFailOnError
        
        
        
        pbrStatus.Value = 150
    End If
    
    '***'
    
    If Combo1.Text = "Hoffmann - Format" Then
        If Val(Text1(3).Text) <> 0 Then
            sSQL = "Update ImportPri set AGN =  " & Val(Text1(3).Text)
            gdBase.Execute sSQL, dbFailOnError
        End If
    ElseIf Combo1.Text = "Vedes - Format" Then
        If Val(Text1(4).Text) <> 0 Then
            sSQL = "Update ImportPri set AGN =  " & Val(Text1(4).Text)
            gdBase.Execute sSQL, dbFailOnError
        End If
    End If
    
    
    
    
   
    Dim dEkpr As Double
    
    If Combo1.Text = "Devil - Format" Then
        Dim dDEVFAK As Double
        If IsNumeric(Text2.Text) Then
            dDEVFAK = CDbl(Text2.Text)
        End If
                
    End If
    
    pbrStatus.Value = 155
    anzeige "normal", "Für neue Artikel werden freie Artikelnummern ermittelt...", Label3
    sSQL = "Select * from ImportPri where awm = '98' or awm = '95' or awm = '94'"
    
   
   
    lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    pbrStatus.Value = 160
    Set rsrs = gdBase.OpenRecordset(sSQL)
    If Not rsrs.RecordCount = 0 Then
        rsrs.MoveFirst
        Do While Not rsrs.EOF
            rsrs.Edit
            rsrs!artnr = lreservArtnr
            
            If Combo1.Text = "Devil - Format" Then
            
                If Not IsNull(rsrs!lekpr) Then
                    dEkpr = rsrs!lekpr
                    If dEkpr > 0 Then
                       rsrs!KVKNEU = dEkpr * dDEVFAK
                    End If
                    
                End If
            
            End If
            rsrs.Update
            
            lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
            If lvergebeArtnr = 0 Then
                
                anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                Exit Function
            Else
                lreservArtnr = lvergebeArtnr
                pbrStatus.Max = 80
                Select Case CInt(Right(CStr(lreservArtnr), 3))
                
                    Case Is = 0
                    pbrStatus.Value = 0
                    Case Is = 200
                    pbrStatus.Value = 20
                    Case Is = 400
                    pbrStatus.Value = 40
                    Case Is = 600
                    pbrStatus.Value = 60
                    Case Is = 800
                    pbrStatus.Value = 80
                End Select
            End If
            

            rsrs.MoveNext
        Loop
    
    End If
    rsrs.Close: Set rsrs = Nothing
    
    
    
    
    'dupliprüfung
    
    
    If NewTableSuchenDBKombi("importdupli", gdBase) Then
    
        sSQL = "Select ean from Importdupli"
        
        Dim cEANa As String
        lreservArtnr = HoleFreieArtikelNrab(glartv, glartb)
    
        Set rsrs = gdBase.OpenRecordset(sSQL)
        If Not rsrs.EOF Then
            rsrs.MoveFirst
            Do While Not rsrs.EOF
            
                If Not IsNull(rsrs!EAN) Then
                    cEANa = rsrs!EAN
                End If
            
            
                sSQL = "Update ImportPri set artnr = " & lreservArtnr
                sSQL = sSQL & " , rabatt_ok = 'N' "
                sSQL = sSQL & " where ean = '" & cEANa & "'"
                gdBase.Execute sSQL, dbFailOnError
            
                lvergebeArtnr = NextfreieArtnr(lreservArtnr, glartb)
                If lvergebeArtnr = 0 Then
                    
                    anzeige "rot", "Es stehen keine neuen Artikelnummern zur Verfügung (Einstellungen überprüfen).", Label3
                    Exit Function
                Else
                    lreservArtnr = lvergebeArtnr
                End If
                
    
                rsrs.MoveNext
            Loop
        
        End If
        rsrs.Close: Set rsrs = Nothing
    
    End If
    
    
    
    
    
    FormatiereBildschirmdatenZeitung = True
    
    

    
    Exit Function
LOKAL_ERROR:
    If err.Number = 3372 Or err.Number = 53 Or err.Number = 3376 Or err.Number = 3375 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "FormatiereBildschirmdatenZeitung"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
        Fehlermeldung1
    End If
End Function
Private Sub urzustand()
    On Error GoTo LOKAL_ERROR
    
    combofuellen Combo1
    Combo1.Visible = True
    anzeige "normal", "Bitte wählen Sie ein Format aus!", Label3
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "urzustand"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Proctervera()
    On Error GoTo LOKAL_ERROR
    
    Dim cSQL            As String
    Dim rsrs            As Recordset
    Dim sSQL            As String
    Dim rsArt           As Recordset
    Dim cArtNr          As String

    Screen.MousePointer = 11
    
    anzeige "normal", "Procter Daten werden verarbeitet", Label3
    
    If Not NewTableSuchenDBKombi("Procter", gdBase) Then
        anzeige "rot", "keine Procter Daten vorhanden (erwarte Tabelle 'Procter')", Label3
        Exit Sub
    End If
    
    loeschNEW "Proc1", gdBase
    sSQL = "select * into Proc1 from procter "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError

    If SpalteInTabellegefundenNEW("Procter", "Feld2", gdBase) Then
        cSQL = " Alter table Procter drop Feld2 "
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
    End If
'    If SpalteInTabellegefundenNEW("Procter", "Feld3", gdBase) Then
'        cSQL = " Alter table Procter drop Feld3 "
'        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
'    End If

    cSQL = " Delete from Procter where Feld6 is null "
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = " Delete from Procter where Feld5 is null "
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = " Delete from Procter where Feld4 is null "
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = " Delete from Procter where Feld6 = 1 "
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    loeschNEW "alit", gdBase
    sSQL = "select count(feld4) as count ,feld4 into alit from procter group by feld4 having count(feld4) > 1"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError

    Set rsrs = gdBase.OpenRecordset("alit", dbOpenTable)
    If Not rsrs.EOF Then
        Do While Not rsrs.EOF
            If Not IsNull(rsrs!feld4) Then
                cArtNr = Trim(rsrs!feld4)
            End If

            sSQL = "Select * from procter where feld4 = '" & cArtNr & "'"
            sSQL = sSQL & " order by feld6 asc "
            Set rsArt = gdBase.OpenRecordset(sSQL)
            If Not rsArt.EOF Then
                rsArt.MoveFirst
                rsArt.MoveNext
                Do While Not rsArt.EOF
                    rsArt.delete
                    rsArt.MoveNext
                Loop
                rsrs.MoveNext
            End If
            rsArt.Close: Set rsArt = Nothing
        Loop
    End If
    rsrs.Close: Set rsrs = Nothing
    
    cSQL = " Alter table Procter add ARTNR long "
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = "update Procter set procter.artnr = 0"
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = "update Procter inner join artikel on procter.feld4 = artikel.ean  "
    cSQL = cSQL & " set procter.artnr = artikel.artnr where procter.artnr = 0"
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = "update Procter inner join artikel on procter.feld4 = artikel.ean2  "
    cSQL = cSQL & " set procter.artnr = artikel.artnr where procter.artnr = 0"
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = "update Procter inner join artikel on procter.feld4 = artikel.ean3  "
    cSQL = cSQL & " set procter.artnr = artikel.artnr where procter.artnr = 0"
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
    

    sSQL = "Delete from ZUORDEAN where artnr in (Select artnr from procter )"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError


    sSQL = "Insert into ZUORDEAN Select ARTNR ,feld4 as EAN,feld6 as FAKTOR,feld5 as GPEAN from procter "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
'    sSQL = "Update artikel inner join Procter on artikel.artnr = procter.artnr "
'    sSQL = sSQL & " set artikel.notizen = left(trim(procter.feld3,25))"
'    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    loeschNEW "procter", gdBase
    sSQL = "select * into Procter from proc1 "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError

    anzeige "normal", "Procter Daten fertig", Label3
    Screen.MousePointer = 0

    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Proctervera"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Proctervorarbeit()
    On Error GoTo LOKAL_ERROR
    
    Dim cSQL            As String
    Dim rsrs            As Recordset
    Dim sSQL            As String
    Dim rsArt           As Recordset
    Dim cArtNr          As String

    Screen.MousePointer = 11
    
    anzeige "normal", "Procter Daten werden verarbeitet", Label3
    
    If Not NewTableSuchenDBKombi("Procter", gdBase) Then
        anzeige "rot", "keine Procter Daten vorhanden (erwarte Tabelle 'Procter')", Label3
        Exit Sub
    End If
    
    loeschNEW "Proc1", gdBase
    sSQL = "select * into Proc1 from procter "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError

    If SpalteInTabellegefundenNEW("Procter", "Feld2", gdBase) Then
        cSQL = " Alter table Procter drop Feld2 "
        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
    End If
'    If SpalteInTabellegefundenNEW("Procter", "Feld3", gdBase) Then
'        cSQL = " Alter table Procter drop Feld3 "
'        schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
'    End If

    cSQL = " Delete from Procter where Feld6 is null "
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = " Delete from Procter where Feld5 is null "
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = " Delete from Procter where Feld4 is null "
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = " Delete from Procter where Feld6 = 1 "
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    loeschNEW "alit", gdBase
    sSQL = "select count(feld4) as count ,feld4 into alit from procter group by feld4 having count(feld4) > 1"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError

    Set rsrs = gdBase.OpenRecordset("alit", dbOpenTable)
    If Not rsrs.EOF Then
        Do While Not rsrs.EOF
            If Not IsNull(rsrs!feld4) Then
                cArtNr = Trim(rsrs!feld4)
            End If

            sSQL = "Select * from procter where feld4 = '" & cArtNr & "'"
            sSQL = sSQL & " order by feld6 asc "
            Set rsArt = gdBase.OpenRecordset(sSQL)
            If Not rsArt.EOF Then
                rsArt.MoveFirst
                rsArt.MoveNext
                Do While Not rsArt.EOF
                    rsArt.delete
                    rsArt.MoveNext
                Loop
                rsrs.MoveNext
            End If
            rsArt.Close: Set rsArt = Nothing
        Loop
    End If
    rsrs.Close: Set rsrs = Nothing
    
    cSQL = " Alter table Procter add ARTNR long "
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = "update Procter set procter.artnr = 0"
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = "update Procter inner join artikel on procter.feld4 = artikel.ean  "
    cSQL = cSQL & " set procter.artnr = artikel.artnr where procter.artnr = 0"
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = "update Procter inner join artikel on procter.feld4 = artikel.ean2  "
    cSQL = cSQL & " set procter.artnr = artikel.artnr where procter.artnr = 0"
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError

    cSQL = "update Procter inner join artikel on procter.feld4 = artikel.ean3  "
    cSQL = cSQL & " set procter.artnr = artikel.artnr where procter.artnr = 0"
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
    
    sSQL = "Delete from ZUORDEAN where artnr in (Select artnr from procter )"
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError

    sSQL = "Insert into ZUORDEAN Select ARTNR ,feld4 as EAN,feld6 as FAKTOR,feld5 as GPEAN from procter "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    
    loeschNEW "ANZPROC", gdBase
    CreateTable "ANZPROC", gdBase

    cSQL = "Insert into ANZPROC Select "
    cSQL = cSQL & "  procter.artnr"
    cSQL = cSQL & ", artikel.Bezeich "
    cSQL = cSQL & ", artikel.Bestand "
    cSQL = cSQL & ", artikel.KVKPR1 "
    cSQL = cSQL & ", artikel.VKPR "
    cSQL = cSQL & ", artikel.PGN "
    cSQL = cSQL & ", artikel.EKPR "
    cSQL = cSQL & ", artikel.EAN "
    cSQL = cSQL & ", artikel.EAN2 "
    cSQL = cSQL & ", artikel.EAN3 "
    cSQL = cSQL & ", artikel.LPZ "
    cSQL = cSQL & ", artikel.gefuehrt "
    cSQL = cSQL & ", artikel.RKZ "
    cSQL = cSQL & ", artikel.MINBEST "
    cSQL = cSQL & ", artikel.NOTIZEN "
    cSQL = cSQL & ", artikel.AGN "
    cSQL = cSQL & ", artikel.AWM "
    cSQL = cSQL & ", artikel.MINMEN "
    cSQL = cSQL & ", artikel.LINR "
    cSQL = cSQL & ", artikel.LEKPR "
    cSQL = cSQL & ", artikel.LIBESNR "
    cSQL = cSQL & ", artikel.Rabatt_ok "
    cSQL = cSQL & ", procter.feld5 as GPEAN  "
    cSQL = cSQL & ", procter.feld6 as Faktor "
    cSQL = cSQL & ", procter.feld3 as gultig "
    cSQL = cSQL & " from procter inner join artikel on procter.artnr = artikel.artnr "
    
    schreibeProtokollDabaAblauf cSQL: gdBase.Execute cSQL, dbFailOnError
    
    loeschNEW "procter", gdBase
    sSQL = "select * into Procter from proc1 "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError


    Screen.MousePointer = 0

    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Proctervorarbeit"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
    Resume Next
End Sub
Private Sub Procteranz()
    On Error GoTo LOKAL_ERROR
    
    Dim cSQL            As String
    Dim rsrs            As Recordset
    Dim j As Integer


    Screen.MousePointer = 11
    
    anzeige "normal", "Procter Daten werden verarbeitet", Label3
    
    If Not NewTableSuchenDBKombi("Procter", gdBase) Then
        anzeige "rot", "keine Procter Daten vorhanden (erwarte Tabelle 'Procter')", Label3
        Exit Sub
    End If
    
    Proctervorarbeit
    
    Tabcheck "PROC"
    FormatGridOverTablay "PROC"

    With MSHFlexGrid1
        .Redraw = False
        .Visible = False
        .Clear
        .Rows = 25
        .Cols = byAnzahlSpalten
        .FixedCols = 0
        .FixedRows = 1
        .Row = 0
        
        For j = 0 To byAnzahlSpalten - 1
            .Col = j
            .Text = sSpaltenname(j)
            aBreite(j) = TextWidth(.TextMatrix(0, j)) ' * 1.8
        Next j
    End With
    
    

    'Grid fuellen
    anzeige "normal", "Die Daten werden angezeigt...", Label3
    GridFuellenP

    Tabellenbreiteanpassen MSHFlexGrid1, 1.25 * gdTabfak

    Screen.MousePointer = 0

    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Procteranz"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub urzustand1()
    On Error GoTo LOKAL_ERROR

    anzeige "normal", "", Label3
    PRIFlex.Visible = False
    Frame5.Visible = False
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "urzustand1"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Function Datmark() As String
    On Error GoTo LOKAL_ERROR
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\BTE"
    
    Datmark = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                Datmark = sPripfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If Datmark <> "" Then
        Exit Function
    End If
    
    
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sPripfad = cPfad
                Datmark = sPripfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Datmark"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkTch() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\TCHIBO"
    
    DatmarkTch = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        
    
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkTch = sTchpfad & "\" & File1.list(lcount)
            End If
        Next lcount
        
        
    End If
    
    If DatmarkTch <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sTchpfad = cPfad
                DatmarkTch = sTchpfad & "\" & File2.list(lcount)
            End If
        Next lcount


    End If
    
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkTch"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkNEU() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\NEUFORM"
    
    DatmarkNEU = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        
    
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkNEU = sNeupfad & "\" & File1.list(lcount)
            End If
        Next lcount
        
        
    End If
    
    If DatmarkNEU <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sNeupfad = cPfad
                DatmarkNEU = sNeupfad & "\" & File2.list(lcount)
            End If
        Next lcount


    End If
    
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkNEU"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkIDEN() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\IDEN"
    
    DatmarkIDEN = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                DatmarkIDEN = sIDENPfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkIDEN <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sIDENPfad = cPfad
                DatmarkIDEN = sIDENPfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkIDEN"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkBOLL() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\BOLLWEG"
    
    DatmarkBOLL = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkBOLL = sBOLLpfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkBOLL <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sBOLLpfad = cPfad
                DatmarkBOLL = sBOLLpfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkBOLL"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkHoff() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\HOFFMANN"
    
    DatmarkHoff = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkHoff = sHOFFPfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkHoff <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sHOFFPfad = cPfad
                DatmarkHoff = sHOFFPfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkHoff"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkVEDE() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\VEDES"
    
    DatmarkVEDE = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkVEDE = sVEDEPfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkVEDE <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sVEDEPfad = cPfad
                DatmarkVEDE = sVEDEPfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkVEDE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkKISS() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\KISS"
    
    DatmarkKISS = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkKISS = sKISSPfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkKISS <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sKISSPfad = cPfad
                DatmarkKISS = sKISSPfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkKISS"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkTextil() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\Textil"
    
    DatmarkTextil = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkTextil = sTextilPfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkTextil <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sTextilPfad = cPfad
                DatmarkTextil = sTextilPfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkTextil"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function

Private Function Datmarkfriseur() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\FRISEUR"
    
    Datmarkfriseur = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                Datmarkfriseur = sFriseurpfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If Datmarkfriseur <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sFriseurpfad = cPfad
                Datmarkfriseur = sFriseurpfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Datmarkfriseur"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkREWE() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\REWE"
    
    DatmarkREWE = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkREWE = sREWEpfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkREWE <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sREWEpfad = cPfad
                DatmarkREWE = sREWEpfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkREWE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkSIE() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\SIE"
    
    DatmarkSIE = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkSIE = sSIEpfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkSIE <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sSIEpfad = cPfad
                DatmarkSIE = sSIEpfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkSIE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkBELA() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\BELA"
    
    DatmarkBELA = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkBELA = sBELApfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkBELA <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sBELApfad = cPfad
                DatmarkBELA = sBELApfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkBELA"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkLüning() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\LUE"
    
    DatmarkLüning = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkLüning = sLUEpfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkLüning <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sLUEpfad = cPfad
                DatmarkLüning = sLUEpfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkLüning"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkEDEK() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\EDEKA"
    
    DatmarkEDEK = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkEDEK = sEDEKApfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkEDEK <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sEDEKApfad = cPfad
                DatmarkEDEK = sEDEKApfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkEDEK"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkTUBE() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\TUB"
    
    DatmarkTUBE = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkTUBE = sTubepfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkTUBE <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sTubepfad = cPfad
                DatmarkTUBE = sTubepfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkTUBE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function

Private Function DatmarkUni(sBox, sPfad As String) As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\" & sBox
    
    DatmarkUni = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkUni = sPfad & "\" & File1.list(lcount)
            End If
        Next lcount
    End If
    
    If DatmarkUni <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sPfad = cPfad
                DatmarkUni = sPfad & "\" & File2.list(lcount)
            End If
        Next lcount
    End If
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkUni"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function DatmarkDEV() As String
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    cPfad = cPfad & "Stammda\DEVIL"
    
    DatmarkDEV = ""
    
    If File1.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        
    
    Else
         For lcount = 0 To File1.ListCount - 1
            If File1.Selected(lcount) = True Then
                
                DatmarkDEV = sDEVpfad & "\" & File1.list(lcount)
            End If
        Next lcount
        
        
    End If
    
    If DatmarkDEV <> "" Then
        Exit Function
    End If
    
    If File2.ListIndex < 0 Then
        anzeige "rot", "Bitte einen Eintrag auswählen!", Label3
        Exit Function
    Else
         For lcount = 0 To File2.ListCount - 1
            If File2.Selected(lcount) = True Then
                sDEVpfad = cPfad
                DatmarkDEV = sDEVpfad & "\" & File2.list(lcount)
            End If
        Next lcount


    End If
    
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "DatmarkDEV"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Sub pfadseek()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "PRI - Dateien (*.pri)|*.pri"
    
    sOldpfad = Label2(1).Caption
    sPripfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sPripfad
    
    sPripfad = ShortPath(sPripfad)
    speicherpfad Trim(sPripfad)
    filefresh
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseek"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekTch()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Tchibo - Dateien (*.csv)|*.csv"
    
    sOldpfad = Label2(1).Caption
    sTchpfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sTchpfad
    
    sTchpfad = ShortPath(sTchpfad)
    speicherpfadTch Trim(sTchpfad)
    filefreshTch
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekTch"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekNeu()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Neuform - Dateien (*.exp)|*.exp"
    
    sOldpfad = Label2(1).Caption
    sNeupfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sNeupfad
    
    sNeupfad = ShortPath(sNeupfad)
    speicherpfadNEU Trim(sNeupfad)
    filefreshNEU
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekNeu"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekBOLL()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Bollweg - Dateien (*.txt)|*.txt"
    
    sOldpfad = Label2(1).Caption
    sBOLLpfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sBOLLpfad
    
    sBOLLpfad = ShortPath(sBOLLpfad)
    speicherpfadBOLL Trim(sBOLLpfad)
    filefreshBOLL
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekBOLL"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekHOFF()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Hoffmann - Dateien (*.dat)|*.dat"
    
    sOldpfad = Label2(1).Caption
    sHOFFPfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sHOFFPfad
    
    sHOFFPfad = ShortPath(sHOFFPfad)
    speicherpfadHOFF Trim(sHOFFPfad)
    filefreshHOFF
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekHOFF"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekVEDE()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Vedes - Dateien (*.txt)|*.txt"
    
    sOldpfad = Label2(1).Caption
    sVEDEPfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sVEDEPfad
    
    sVEDEPfad = ShortPath(sVEDEPfad)
    speicherpfadVEDE Trim(sVEDEPfad)
    filefreshVEDE
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekVEDE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekKISS()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "KISS - Dateien (*.111)|*.111"
    
    sOldpfad = Label2(1).Caption
    sKISSPfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sKISSPfad
    
    sKISSPfad = ShortPath(sKISSPfad)
    speicherpfadKISS Trim(sKISSPfad)
    filefreshKISS
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekVEDE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekTextil()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Textil - Dateien (*.xml)|*.xml"
    
    sOldpfad = Label2(1).Caption
    sTextilPfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sTextilPfad
    
    sTextilPfad = ShortPath(sTextilPfad)
    speicherpfadtextil Trim(sTextilPfad)

    filefreshTextil
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekTextil"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekIDEN()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "IDEN - Dateien (*.zip)|*.zip"
    
    sOldpfad = Label2(1).Caption
    sIDENPfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sIDENPfad
    
    sIDENPfad = ShortPath(sIDENPfad)
    speicherpfadIDEN Trim(sIDENPfad)

    filefreshIDEN
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekIDEN"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekDEV()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Devil - Dateien (*.xls)|*.xls"
    
    sOldpfad = Label2(1).Caption
    sDEVpfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sDEVpfad
    
'    sDEVpfad = ShortPath(sDEVpfad)
    speicherpfadDEV Trim(sDEVpfad)
    filefreshDEV
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekDEV"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub

Private Sub pfadseekfriseur()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Friseur - Dateien (*.txt)|*.txt"
    
    sOldpfad = Label2(1).Caption
    sFriseurpfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sFriseurpfad
    
    sFriseurpfad = ShortPath(sFriseurpfad)
    speicherpfadfriseur Trim(sFriseurpfad)
    filefreshfriseur
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekfriseur"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekREWE()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
'    sFilter = "Rewe - Dateien (*.xls)|*.xls"
    sFilter = "Rewe - Dateien (REWE*.csv)|*.csv"
    
    sOldpfad = Label2(1).Caption
    sREWEpfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sREWEpfad
    
    sREWEpfad = ShortPath(sREWEpfad)
    speicherpfadREWE Trim(sREWEpfad)
    filefreshREWE
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekREWE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekSIE()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Rewe - Dateien (*Lager*.csv)|*.csv"
    
'    .Filter = "Access - Dateien (*.mdb)|Stada.mdb"
'
    sOldpfad = Label2(1).Caption
    sSIEpfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sSIEpfad
    
    sSIEpfad = ShortPath(sSIEpfad)
    speicherpfadSIE Trim(sSIEpfad)
    filefreshSIE
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekSIE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekEDEK()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
'    sFilter = "Rewe - Dateien (*.xls)|*.xls"
    sFilter = "Edeka - Dateien (Edeka*.dbf)|*.dbf"
    
    sOldpfad = Label2(1).Caption
    sEDEKApfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sEDEKApfad
    
    sEDEKApfad = ShortPath(sEDEKApfad)
    speicherpfadEDEK Trim(sEDEKApfad)
    filefreshEDEK
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekEDEK"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekBELA()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    

    Dim sKennNr As String
    sKennNr = ermKenn_fromBela

    
    
    sFilter = "Bela - Dateien (kissurlad*." & sKennNr & ")|*." & sKennNr
    
    sOldpfad = Label2(1).Caption
    sBELApfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sBELApfad
    
    sBELApfad = ShortPath(sBELApfad)
    speicherpfadBELA Trim(sBELApfad)
    filefreshBELA
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekBELA"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekLüning()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    

    sFilter = "Lüning - Dateien (luening*.zip)|*.zip"
    
    sOldpfad = Label2(1).Caption
    sLUEpfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sLUEpfad
    
    sLUEpfad = ShortPath(sLUEpfad)
    speicherpfadLüning Trim(sLUEpfad)
    filefreshLüning
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekLüning"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekZEIT()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Zeitungs - Dateien (*.xls)|*.xls"
    
    sOldpfad = Label2(1).Caption
    sZeitpfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sZeitpfad
    
    sZeitpfad = ShortPath(sZeitpfad)
    speicherpfadUni Trim(sZeitpfad), "ZEITE", "zeitpfad"
    filefreshZEIT
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekZEIT"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekTUBE()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "TU Barkow - Dateien (*.txt)|*.txt"
    
    sOldpfad = Label2(1).Caption
    sTubepfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sTubepfad
    
    sTubepfad = ShortPath(sTubepfad)
    speicherpfadUni Trim(sTubepfad), "TUBE", "tubepfad"
    filefreshTUBE
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekTUBE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekESUE()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Esüdro - Dateien (*.zip)|*.zip"
    
    sOldpfad = Label2(1).Caption
    sESUEpfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sESUEpfad
    
    sESUEpfad = ShortPath(sESUEpfad)
    speicherpfadUni Trim(sESUEpfad), "ESUE", "esuepfad"
    filefreshESU
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekESUE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekRING()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Ringfoto - Dateien (*.zip)|*.zip"
'    sFilter = "Ringfoto - Dateien (*.xls)|*.xls"
    
    sOldpfad = Label2(1).Caption
    sRINGPfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sRINGPfad
    
    sRINGPfad = ShortPath(sRINGPfad)
    speicherpfadUni Trim(sRINGPfad), "RINGE", "RINGpfad"
    filefreshRING
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekRING"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekPass()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "PASSPORT - Dateien (AR*.*)|*.*"
    
    sOldpfad = Label2(1).Caption
    sPassPfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sPassPfad
    
    sPassPfad = ShortPath(sPassPfad)
    speicherpfadUni Trim(sPassPfad), "PASSPORTe", "Passpfad"
    filefreshPass
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekPass"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekGerry()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "Gerry Weber - Dateien (*PRICAT*.txt)|*.*"
    
    sOldpfad = Label2(1).Caption
    sGerryPfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sGerryPfad
    
    sGerryPfad = ShortPath(sGerryPfad)
    speicherpfadUni Trim(sGerryPfad), "Gerrye", "Gerrypfad"
    filefreshGerry
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekGerry"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub pfadseekBOSS()
    On Error GoTo LOKAL_ERROR
    
    Dim sTitle      As String
    Dim sFilter     As String
    Dim sOldpfad    As String

    sTitle = "Speichern des Pfades"
    
    sFilter = "HUGO BOSS - Dateien (*PRICAT*.csv)|*.*"
    
    sOldpfad = Label2(1).Caption
    sBossPfad = pfadaendern(sTitle, sFilter, sOldpfad)
    
    Label2(1).Caption = sBossPfad
    
    sBossPfad = ShortPath(sBossPfad)
    speicherpfadUni Trim(sBossPfad), "BOSSe", "BOSSpfad"
    filefreshBoss
    zeigeanzahl File1
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "pfadseekBOSS"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Command4_Click(Index As Integer)
    On Error GoTo LOKAL_ERROR
    
    Dim btxt As Boolean
    Dim iFileNr As Integer
    Dim lRet As Long
    Dim cPfad As String
    
    cPfad = gcDBPfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    Select Case Index
        Case 0 To 2
            If Datendrin("Stadapro", gdBase) = True Then
                Select Case Index
                    Case Is = 0 'alle Artikel hier auf geführtcheck achten
                        If CG.Value Then
                            reportbildschirm "dWKL11a", "aWKL11e"
                        Else
                            reportbildschirm "dWKL11a", "aWKL11a"
                        End If
                    Case Is = 1 'neue Artikel
                        reportbildschirm "dWKL11b", "aWKL11b"
                    Case Is = 2 'Preisänderungen hier auf geführtcheck achten
                    
                        If CG.Value Then
                            reportbildschirm "dWKL11a", "aWKL11f"
                        Else
                            reportbildschirm "dWKL11a", "aWKL11c"
                        End If
                End Select
            Else
                anzeige "rot", "keine Protokoll - Daten vorhanden", Label3
            End If
        Case 3
            'rewe-Wochendaten
            If NewTableSuchenDBKombi("STADAPROREWE", gdBase) Then
                anzeige "normal", "Druckvorschau wird erstellt...", Label3
                reportbildschirm "", "aWKL185"
            Else
                anzeige "rot2", "Keine Druckansicht vorhanden", Label3
            End If
        Case 4
            'letzte Streckendatei-Wochendaten
            If NewTableSuchenDBKombi("STADAPROSTRECKE", gdBase) Then
                anzeige "normal", "Druckvorschau wird erstellt...", Label3
                reportbildschirm "", "aWKL186"
            Else
                anzeige "rot2", "Keine Druckansicht vorhanden", Label3
            End If
        Case 5
            'bela-Wochendaten
            If NewTableSuchenDBKombi("STADAPROBELA", gdBase) Then
                anzeige "normal", "Druckvorschau wird erstellt...", Label3
                reportbildschirm "", "aWKL194"
            Else
                anzeige "rot2", "Keine Druckansicht vorhanden", Label3
            End If
        Case 6
            'lüning-Wochendaten
            If NewTableSuchenDBKombi("STADAPROLUENING", gdBase) Then
                anzeige "normal", "Druckvorschau wird erstellt...", Label3
                reportbildschirm "", "aWKL195"
            Else
                anzeige "rot2", "Keine Druckansicht vorhanden", Label3
            End If
            
        Case 7
            'budni-Wochendaten
            If NewTableSuchenDBKombi("STADAPROBUDNI", gdBase) Then
                anzeige "normal", "Druckvorschau wird erstellt...", Label3
                reportbildschirm "", "aWKL196"
            Else
                anzeige "rot2", "Keine Druckansicht vorhanden", Label3
            End If
            
    End Select
    
    
    
Exit Sub
LOKAL_ERROR:

    
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Command4_Click"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
    
    
End Sub

Private Sub Command6_Click(Index As Integer)
    On Error GoTo LOKAL_ERROR

    Screen.MousePointer = 11

    Select Case Index
        Case 0 'Hilfe
            gsHelpstring = "Stammdaten einlesen Fremdformate "
            frmWKL110.Show 1
        Case 11 'Hilfe
            gsHelpstring = "Procter Umverpackungsdaten"
            frmWKL110.Show 1
        
    End Select
    Screen.MousePointer = 0
    
Exit Sub
LOKAL_ERROR:
   
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Command6_Click"
    Fehler.gsFehlertext = "Es ist ein Fehler aufgetreten."
    
    Fehlermeldung1
    
End Sub

Private Sub Command98_Click()
On Error GoTo LOKAL_ERROR
    
    gsZSpalte = "Artnr"
    gstab = "PROC"
    frmWKL36.Show 1
    'fertig
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Command98_Click"
    Fehler.gsFehlertext = "Es ist ein Fehler aufgetreten."
        
    Fehlermeldung1
End Sub

Private Sub File1_gotfocus()
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    
    If File2.ListIndex < 0 Then
        Exit Sub
    Else
         For lcount = 0 To File2.ListCount - 1
            File2.Selected(lcount) = False
        Next lcount
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "File1_gotfocus"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub File1_Click()
    On Error GoTo LOKAL_ERROR
    
    If Combo1.Text = "KISS - Format" Then
    
        If IsNumeric(Mid(File1.list(File1.ListIndex), 2, 6)) Then
            Label2(32).Caption = ermLiefBez(CLng(Mid(File1.list(File1.ListIndex), 2, 6)))
            Label2(32).Refresh
            Command2(7).Visible = True
            
            
        Else
            Label2(32).Caption = ""
            Label2(32).Refresh
            Command2(7).Visible = False
        End If
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "File1_Click"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."

    Fehlermeldung1
End Sub
Private Sub File2_gotfocus()
    On Error GoTo LOKAL_ERROR
    
    Dim lcount As Long
    
    If File1.ListIndex < 0 Then
        Exit Sub
    Else
         For lcount = 0 To File1.ListCount - 1
            File1.Selected(lcount) = False
        Next lcount
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "File2_gotfocus"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Form_Load()
    On Error GoTo LOKAL_ERROR
    
    WKL09Positionieren
    
    Modul6.Skalieren Me, True, True: Modul6.Schrift Me: Modul6.Log Me
    Modul6.Farbform Me, lblUeberschrift
    
    urzustand

    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Form_Load"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Function ermthenextnumberPGN() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim cSQL    As String
    Dim rsrs    As Recordset
    Dim i       As Long
    
    ermthenextnumberPGN = 0
    
    For i = 100 To 200
        cSQL = "Select PGN from PGNDBF where PGN =" & i
        Set rsrs = gdBase.OpenRecordset(cSQL)
        If rsrs.EOF Then
            Exit For
        End If
        rsrs.Close: Set rsrs = Nothing
    Next i
    
    ermthenextnumberPGN = i
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermthenextnumberPGN"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Function ermthenextnumberAGN() As Long
    On Error GoTo LOKAL_ERROR
    
    Dim cSQL    As String
    Dim rsrs    As Recordset
    Dim i       As Long
    
    ermthenextnumberAGN = 0
    
    For i = 1000 To 2000
        cSQL = "Select AGN from AGNDBF where AGN =" & i
        Set rsrs = gdBase.OpenRecordset(cSQL)
        If rsrs.EOF Then
            Exit For
        End If
        rsrs.Close: Set rsrs = Nothing
    Next i
    
    
    ermthenextnumberAGN = i
    
Exit Function
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "ermthenextnumberAGN"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Function
Private Sub insertPGNt(byPGN As Byte, sPGNBEZEICH As String)
    On Error GoTo LOKAL_ERROR
    
    Dim cSQL    As String
    Dim rsrs    As Recordset
    
    cSQL = "Select * from PGNDBF"
    Set rsrs = gdBase.OpenRecordset(cSQL)

    rsrs.AddNew
    rsrs!PGN = byPGN
    rsrs!PGNBEZEICH = sPGNBEZEICH
    rsrs.Update
    rsrs.Close: Set rsrs = Nothing
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "insertPGNt"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub insertAGNt(lagn As Long, sAGNBEZEICH As String)
    On Error GoTo LOKAL_ERROR
    
    Dim cSQL    As String
    Dim rsrs    As Recordset
    
    cSQL = "Select * from AGNDBF"
    Set rsrs = gdBase.OpenRecordset(cSQL)

    rsrs.AddNew
    rsrs!AGN = lagn
    rsrs!AGTEXT = sAGNBEZEICH
    rsrs.Update
    rsrs.Close: Set rsrs = Nothing
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "insertAGNt"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Form_Unload(Cancel As Integer)
    On Error GoTo LOKAL_ERROR
    
    loeschNEW "importdupli", gdBase
    loeschNEW "alit", gdBase
    
    LogtoEnd Me

Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Form_Unload"
    Fehler.gsFehlertext = "Es ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub zeigeanzahl(fil As FileListBox)
    On Error GoTo LOKAL_ERROR
    
    If File1.ListCount = 0 Then
        anzeige "Rot", "Keine Stammdaten - Dateien vorhanden.", Label3
    ElseIf File1.ListCount = 1 Then
        anzeige "Normal", File1.ListCount & " Stammdaten - Datei vorhanden.", Label3
    Else
        anzeige "Normal", File1.ListCount & " Stammdaten - Dateien vorhanden.", Label3
    End If
    Label3.Refresh
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "zeigeanzahl"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransf()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update pricate set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransf"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfTch()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update tchiboe set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfTch"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfNEU()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update neuforme set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfNEU"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfBOLL()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update BOLLWEGe set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfBOLL"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfVEDE()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update VEDESe set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfVEDE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfIDEN()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update IDENe set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfIDEN"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfKISS()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update KISSe set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfKISS"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfHOFF()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update HOFFMANNe set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfHOFF"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransffriseur()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 11
    
        If i = 9 Then
        
        ElseIf i = 10 Then
        
        Else
            sSQL = "Update friseure set transf" & i & "= true "
            gdBase.Execute sSQL, dbFailOnError
        End If
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransffriseur"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfLüning()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update LUEE set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfLüning"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfBELA()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update BELAE set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfBELA"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfEDEK()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update EDEKE set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfEDEK"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfREWE()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update REWEE set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfREWE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfSIE()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update SIEE set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfSIE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfUni(jMax As Integer, sTab As String)
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To jMax
        sSQL = "Update " & sTab & " set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfUni"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherGrundETransfDEV()
    On Error GoTo LOKAL_ERROR
    
    Dim sSQL As String
    Dim i As Integer
    
    For i = 0 To 8
        sSQL = "Update DEVILE set transf" & i & "= true "
        gdBase.Execute sSQL, dbFailOnError
    Next i
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherGrundETransfDEV"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfad(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from  pricate "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into pricate (pripfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfad"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadTch(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from  tchiboe "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into tchiboe (tchpfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadTch"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadNEU(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from  neuforme "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into neuforme (neupfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadNEU"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadBOLL(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from  BOLLWEGe "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into BOLLWEGe (BOLLpfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadBOLL"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadVEDE(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from  VEDESE "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into VEDESE (VEDEpfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadVEDE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadKISS(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from  KISSE "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into KISSE (KISSpfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadKISS"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadIDEN(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from IDENE "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into IDENE (IDENpfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadIDEN"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadpass(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from  passporte "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into passporte (passpfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadpass"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadtextil(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from  Textile "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into Textile (Textilpfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadtextil"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadGerry(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from  Gerrye "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into Gerrye (Gerrypfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadGerry"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadHOFF(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from  HOFFMANNe "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into HOFFMANNe (HOFFpfad) values ('" & spfa & " ' ) "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadHOFF"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadfriseur(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from  friseure "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into friseure (friseurpfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadfriseur"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadBELA(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from BELAe "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into BELAe (BELApfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadBELA"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadLüning(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from LUEE "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into LUEE (LUEpfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadLüning"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadEDEK(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from EDEKe "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into EDEKe (EDEKpfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadEDEK"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadSIE(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "Delete from SIEe"
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into SIEe (SIEpfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadSIE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadREWE(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "Delete from  REWEe "
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into REWEe (REWEpfad) values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadREWE"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadUni(spfa As String, sTab As String, sSpalte As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from   " & sTab
    gdBase.Execute sSQL, dbFailOnError
    
    sSQL = "Insert into " & sTab & " (" & sSpalte & ") values ('" & spfa & " ' ) "
    gdBase.Execute sSQL, dbFailOnError
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadUni"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub speicherpfadDEV(spfa As String)
    On Error GoTo LOKAL_ERROR
    Dim sSQL As String
    
    sSQL = "delete from  DEVILE "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError

    sSQL = "Insert into DEVILE (DEVpfad) values ('" & spfa & " ' ) "
    schreibeProtokollDabaAblauf sSQL: gdBase.Execute sSQL, dbFailOnError
    

    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "speicherpfadDEV"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub filefresh()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\BTE"
    File2.Pattern = "*.pri"
    File2.Refresh
    
    ermittlepripfad
    File1.Path = sPripfad
    File1.Pattern = "*.pri"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefresh"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshTch()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\Tchibo"
    File2.Pattern = "*.csv"
    File2.Refresh
    
    ermittleTchpfad
    File1.Path = sTchpfad
    File1.Pattern = "*.csv"
    File1.Refresh
    

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshTch"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshNEU()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\NEUFORM"
    File2.Pattern = "*.exp"
    File2.Refresh
    
    ermittleNEUpfad
    
    File1.Path = sNeupfad
    File1.Pattern = "*.exp"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshNEU"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshBOLL()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\BOLLWEG"
    File2.Pattern = "RG9128.txt"
    File2.Refresh
    
    ermittleBOLLpfad
    
    File1.Path = sBOLLpfad
    File1.Pattern = "RG9128.txt"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshBOLL"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshHOFF()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\HOFFMANN"
    File2.Pattern = "*.dat"
    File2.Refresh
    
    ermittleHOFFpfad
    
    File1.Path = sHOFFPfad
    File1.Pattern = "*.dat"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshHOFF"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshVEDE()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\VEDES"
    File2.Pattern = "*.txt"
    File2.Refresh
    
    ermittleVEDEpfad
    
    File1.Path = sVEDEPfad
    File1.Pattern = "*.txt"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshVEDE"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshIDEN()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\IDEN"
    File2.Pattern = "*.zip"
    File2.Refresh
    
    ermittleIDENpfad
    
    File1.Path = sIDENPfad
    File1.Pattern = "*.zip"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshIDEN"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshKISS()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\KISS"
    File2.Pattern = "*.111"
    Kill cPfad & "Stammda\KISS\" & "M3*!.*"
    File2.Refresh
    
    ermittleKISSpfad
    
    File1.Path = sKISSPfad
    File1.Pattern = "*.111"
    Kill sKISSPfad & "\M3*!.*"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    ElseIf err.Number = 53 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshKISS"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshTextil()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\Textil"
    File2.Pattern = "*.xml"
    File2.Refresh
    
    ermittleTEXTILpfad
    
    File1.Path = sTextilPfad
    File1.Pattern = "*.xml"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshTextil"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub


Private Sub filefreshfriseur()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\FRISEUR"
    File2.Pattern = "*.txt"
    File2.Refresh
    
    ermittlefriseurpfad
    
    File1.Path = sFriseurpfad
    File1.Pattern = "*.txt"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshfriseur"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshBELA()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    Dim sKennNr As String
    sKennNr = ermKenn_fromBela
    
    File2.Path = cPfad & "Stammda\BELA"
    File2.Pattern = "kissurlad*." & sKennNr
    File2.Refresh
    
    ermittleBELApfad
    
    File1.Path = sBELApfad
    File1.Pattern = "kissurlad*." & sKennNr
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshBELA"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshLüning()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\LUE"
'    File2.Pattern = "*.xls"
    File2.Pattern = "luening*.zip"
    File2.Refresh
    
    ermittleLüningpfad
    
    File1.Path = sLUEpfad
'    File1.Pattern = "*.xls"
    File1.Pattern = "luening*.zip"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshLüning"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshEDEK()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\EDEKA"
'    File2.Pattern = "*.xls"
    File2.Pattern = "Edeka*.dbf"
    File2.Refresh
    
    ermittleEDEKpfad
    
    File1.Path = sEDEKApfad
'    File1.Pattern = "*.xls"
    File1.Pattern = "Edeka*.dbf"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshEDEK"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshREWE()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\REWE"
'    File2.Pattern = "*.xls"
    File2.Pattern = "REWE*.csv"
    File2.Refresh
    
    ermittleREWEpfad
    
    File1.Path = sREWEpfad
'    File1.Pattern = "*.xls"
    File1.Pattern = "REWE*.csv"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshREWE"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshSIE()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\Sie"

    File2.Pattern = "*Lager*.csv"
    File2.Refresh
    
    ermittleSIEpfad
    
    File1.Path = sSIEpfad

    File1.Pattern = "*Lager*.csv"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshSIE"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshZEIT()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\ZEITUNG"
    File2.Pattern = "*.xls"
    File2.Refresh
    
    sZeitpfad = ermittleUnipfad("ZEITE", "ZEITPFAD")
    
    File1.Path = sZeitpfad
    File1.Pattern = "*.xls"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshZEIT"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshTUBE()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\TUB"
    File2.Pattern = "*.txt"
    File2.Refresh
    
    sTubepfad = ermittleUnipfad("TUBE", "TUBEPFAD")
    
    File1.Path = sTubepfad
    File1.Pattern = "*.txt"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshTUBE"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshESU()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\ESUE"
    File2.Pattern = "artneu*.zip"
    File2.Refresh
    
    sESUEpfad = ermittleUnipfad("ESUE", "ESUEpfad")
    
    File1.Path = sESUEpfad
    File1.Pattern = "artneu*.zip"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshESU"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshPass()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\PASSPORT"
    File2.Pattern = "AR*.*"
    File2.Refresh
    
    sPassPfad = ermittleUnipfad("PASSPORTE", "PassPfad")
    
    File1.Path = sPassPfad
    File1.Pattern = "AR*.*"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshPass"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshGerry()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\GERRY"
    File2.Pattern = "*PRICAT*.txt"
    File2.Refresh
    
    sGerryPfad = ermittleUnipfad("GERRYE", "GERRYPfad")
    
    File1.Path = sGerryPfad
    File1.Pattern = "*PRICAT*.txt"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshGerry"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshBoss()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\BOSS"
    File2.Pattern = "*PRICAT*.csv"
    File2.Refresh
    
    sGerryPfad = ermittleUnipfad("BOSSE", "BOSSPfad")
    
    File1.Path = sBossPfad
    File1.Pattern = "*PRICAT*.csv"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshBoss"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshRING()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\RING"
    File2.Pattern = "*.zip"
    File2.Refresh
    
    sRINGPfad = ermittleUnipfad("RINGE", "RINGPfad")
    
    File1.Path = sRINGPfad
    File1.Pattern = "*.zip"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshRING"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub filefreshDEV()
    On Error GoTo LOKAL_ERROR
    
    Dim cPfad As String
    
    cPfad = gcDBPfad               'Datenbankpfad
    If Right(cPfad, 1) <> "\" Then
        cPfad = cPfad & "\"
    End If
    
    File2.Path = cPfad & "Stammda\DEVIL"
    File2.Pattern = "DEVIL*.xls"
    File2.Refresh
    
    ermittleDEVpfad
    
    File1.Path = sDEVpfad
    File1.Pattern = "DEVIL*.xls"
    File1.Refresh

    Exit Sub
LOKAL_ERROR:
    If err.Number = 68 Or err.Number = 76 Then
        Resume Next
    Else
        Fehler.gsDescr = err.Description
        Fehler.gsNumber = err.Number
        Fehler.gsFormular = Me.name
        Fehler.gsFunktion = "filefreshDEV"
        Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
        
        Fehlermeldung1
    End If
End Sub
Private Sub combofuellen(cbo As ComboBox)
    On Error GoTo LOKAL_ERROR
    
    cbo.Clear
    cbo.AddItem "bitte Format auswählen"
    cbo.AddItem "KISS - Format"
    cbo.AddItem "IDEN - Format"
    cbo.AddItem "Für Sie - Format"
    cbo.AddItem "Neuform - Format"
    cbo.AddItem "Zeitungs - Format"
    cbo.AddItem "TU Barkow - Format"
    cbo.AddItem "Pricat - Format"
    cbo.AddItem "Tchibo - Format"
    cbo.AddItem "Bollweg - Format"
    cbo.AddItem "Procter - Format"
    cbo.AddItem "Friseur - Format"
    cbo.AddItem "Hoffmann - Format"
    cbo.AddItem "Vedes - Format"
    cbo.AddItem "Ringfoto - Format"
    cbo.AddItem "Textil - Format"
    cbo.AddItem "Passport - Format"
    cbo.AddItem "Gerry - Format"
    cbo.AddItem "BOSS - Format"
    cbo.AddItem "Bela - Format"
    cbo.AddItem "Lüning - Format"
    cbo.AddItem "Edeka Minden - Format"
    cbo.Text = "bitte Format auswählen"

    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "combofuellen"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub WKL09Positionieren()
    On Error GoTo LOKAL_ERROR
    
    With fraAktuell
        .Top = 1320
        .Left = 120
        .Height = 6255
        .Width = 9495
        
    End With

    With Frame1
        .Top = 840
        .Left = 120
        .Height = 6975
        .Width = 11655
        .BorderStyle = 0
    End With
    
    With Frame2
        .Top = 840
        .Left = 120
        .Height = 6975
        .Width = 11655
        .BorderStyle = 0
    End With
    
    With Frame3
        .Top = 840
        .Left = 120
        .Height = 6975
        .Width = 11655
        .BorderStyle = 0
    End With
    
    With Frame4
        .Top = 840
        .Left = 120
        .Height = 6975
        .Width = 11655
        .BorderStyle = 0
    End With
    
    With Frame6
        .Top = 2160
        .Left = 3120
        .Height = 3255
        .Width = 6255
        .BorderStyle = 0
    End With
    
    With Frame7
        .Top = 840
        .Left = 120
        .Height = 6975
        .Width = 11655
        .BorderStyle = 0
    End With

    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "WKL09Positionieren"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub

Private Sub PRIFlex_DblClick()
    On Error GoTo LOKAL_ERROR
    
    sortierenHGrid PRIFlex
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "PRIFlex_DblClick"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub



Private Sub PRIFlex_KeyDown(KeyCode As Integer, Shift As Integer)
On Error GoTo LOKAL_ERROR
    
    Dim lrow As Long
    Dim lcol As Long
    
    
    If PRIFlex.Col = SpaltennummerAGN Or PRIFlex.Col = SpaltennummerPGN Or PRIFlex.Col = SpaltennummerRABATT_OK Or PRIFlex.Col = SpaltennummerGEFUEHRT Then
    
        lrow = PRIFlex.Row
        lcol = PRIFlex.Col
        
        If iKeypress = 0 And KeyCode <> vbKeyBack Then
            PRIFlex.Row = lrow
            PRIFlex.Col = lcol
            PRIFlex.Text = ""
        End If
        iKeypress = iKeypress + 1
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "PRIFlex_KeyDown"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub

Private Sub PRIFlex_KeyPress(KeyAscii As Integer)
On Error GoTo LOKAL_ERROR


    Dim cZeichen As String
    Dim cFeld    As String
    
    
    If PRIFlex.Col = SpaltennummerAGN Or PRIFlex.Col = SpaltennummerPGN Or PRIFlex.Col = SpaltennummerRABATT_OK Or PRIFlex.Col = SpaltennummerGEFUEHRT Then
    
        Dim cValid As String

        If PRIFlex.Col = SpaltennummerAGN Then
            cValid = "1234567890" & Chr$(8)
            cZeichen = Chr$(KeyAscii)
            cZeichen = UCase$(cZeichen)
            
            If InStr(cValid, cZeichen) = 0 Then
                KeyAscii = 48
            Else
                KeyAscii = Asc(cZeichen)
            End If
        End If
        
        If PRIFlex.Col = SpaltennummerPGN Then
            cValid = "1234567890" & Chr$(8)
            cZeichen = Chr$(KeyAscii)
            cZeichen = UCase$(cZeichen)
            
            If InStr(cValid, cZeichen) = 0 Then
                KeyAscii = 48
            Else
                KeyAscii = Asc(cZeichen)
            End If
        End If
        
        If PRIFlex.Col = SpaltennummerRABATT_OK Then
            cValid = "JN" & Chr$(8)
            
            cZeichen = Chr$(KeyAscii)
            cZeichen = UCase$(cZeichen)
            
            If InStr(cValid, cZeichen) = 0 Then
                KeyAscii = 74
            Else
                KeyAscii = Asc(cZeichen)
            End If
        End If
        
        If PRIFlex.Col = SpaltennummerGEFUEHRT Then
            cValid = "JN" & Chr$(8)
            
            cZeichen = Chr$(KeyAscii)
            cZeichen = UCase$(cZeichen)
            
            If InStr(cValid, cZeichen) = 0 Then
                KeyAscii = 74
            Else
                KeyAscii = Asc(cZeichen)
            End If
        End If
        
        

        
'        KeyAscii = Asc(cZeichen)
    
        cFeld = PRIFlex.Text
    
        Select Case KeyAscii
            Case Is = 8
                If Len(cFeld) > 0 Then
                    cFeld = Left$(cFeld, Len(cFeld) - 1)
                End If
            Case Else
                cFeld = cFeld & Chr$(KeyAscii)
        End Select
    
        PRIFlex.TextMatrix(PRIFlex.Row, PRIFlex.Col) = cFeld
        PRIFlex.Refresh
    
    End If

Exit Sub
LOKAL_ERROR:

    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "PRIFlex_KeyPress"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub

Private Sub PRIFlex_KeyUp(KeyCode As Integer, Shift As Integer)
On Error GoTo LOKAL_ERROR

    '** 7= VKPR, 9=KVKPR_Neu, 14=MINBEST, 15=GEFÜHRT, 16=RABATT_OK, 17=PREISSCHUTZ **
    If PRIFlex.Col = SpaltennummerAGN Or PRIFlex.Col = SpaltennummerPGN Or PRIFlex.Col = SpaltennummerRABATT_OK Or PRIFlex.Col = SpaltennummerGEFUEHRT Then
        Select Case KeyCode
            Case Is = 46    '** Delete **
                PRIFlex.Text = ""
        End Select
    End If

Exit Sub
LOKAL_ERROR:

    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "PRIFlex_KeyUp"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
    
End Sub

Private Sub PRIFlex_LeaveCell()
On Error GoTo LOKAL_ERROR
    iKeypress = 0
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "PRIFlex_LeaveCell"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub Text1_KeyUp(Index As Integer, KeyCode As Integer, Shift As Integer)
On Error GoTo LOKAL_ERROR
    
    If KeyCode = vbKeyReturn Then
        Command2_Click 5
    End If
    
    If KeyCode = vbKeyEscape Then
        Command1_Click 4
    End If
    
    If KeyCode = vbKeyF2 Then
        gF2Prompt.cFeld = ""
        gF2Prompt.cWert = ""
        gF2Prompt.cWert2 = ""
        gF2Prompt.cWahl = ""
        gF2Prompt.bMultiple = False
        
        Select Case Index
            
            Case Is = 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 'AGN
                gF2Prompt.cFeld = "AGN"
                frmWK00a.Show 1
                If gF2Prompt.cWahl <> "" Then
                    Text1(Index).Text = gF2Prompt.cWahl
                End If
        End Select
        
    End If
    
    Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Text1_KeyUp"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
Private Sub txtStatus_Change()
    On Error GoTo LOKAL_ERROR
    
    Dim nProz As Long
    nProz = Val(txtstatus.Text)
    ShowProgress picprogress, nProz, 0, 100, True
    picprogress.Refresh
    
Exit Sub
LOKAL_ERROR:
    Fehler.gsDescr = err.Description
    Fehler.gsNumber = err.Number
    Fehler.gsFormular = Me.name
    Fehler.gsFunktion = "Form_Load"
    Fehler.gsFehlertext = "Im Programmteil Stammdaten einlesen: Fremdformate ist ein Fehler aufgetreten."
    
    Fehlermeldung1
End Sub
